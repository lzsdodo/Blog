<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Upcoming]]></title>
    <url>%2Fposts%2Fffffffff%2F</url>
    <content type="text"><![CDATA[Still transferring previous articles from other platforms. Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/ffffffff/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>nil</category>
      </categories>
      <tags>
        <tag>nil</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[object Object]]]></title>
    <url>%2Fposts%2F824ac3d0%2F</url>
    <content type="text"><![CDATA[Title Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/824ac3d0/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Cook</category>
      </categories>
      <tags>
        <tag>nil</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[object Object]]]></title>
    <url>%2Fposts%2F824ac3d0%2F</url>
    <content type="text"><![CDATA[干锅菜花 材料 菜花 五花肉 辣椒 姜 蒜 酱油 1 勺 （或生抽 + 老抽） 做法 菜花冲洗干净，小刀沿着柄削成小朵，淡盐水浸泡 10 分钟，然后冲洗干净后充分晾干水分 五花肉切片 酱油一勺，辣椒切圈，生姜切片，大蒜拍散切小块 五花肉入锅，加姜片小火慢炒出油 肉推开一边，切大火，倒入菜花，略停 30 秒再翻炒几下 盖上锅盖，中火焗 30 秒，菜花头有点焦色 加入辣椒和大蒜碎炒匀，然后再加入一勺酱油，继续翻炒均匀 起锅前加入一勺盐炒匀 Memo 酱油可以用生抽加老抽代替，老抽数滴即可，多了毁颜色 盐最后加入，炒匀后分布在菜花的表面，入口咸香 Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/824ac3d0/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Cook</category>
      </categories>
      <tags>
        <tag>nil</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[object Object]]]></title>
    <url>%2Fposts%2F824ac3d0%2F</url>
    <content type="text"><![CDATA[芋圆 做芋圆，对糊化程度的要求没那么高，只要有糊化，就能成功做出来 芋圆红豆汤 / 芋圆仙草冻 芋圆 / 紫薯圆 香芋 / 紫薯 / 红薯 100g 木薯淀粉 Tapioca starch 55g (菱粉 Three Ladies Brand) 沸水 35g 细砂糖（防粘）20g 烧仙草 仙草粉 50g 食用水 配料 炼奶 Condensed milk 纯牛奶 Milk 蜜红豆 Honey red bean 120g 此配方每 100 克芋头 / 紫薯 / 红薯，可以制作 200 克左右的芋圆 Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/824ac3d0/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Cook</category>
      </categories>
      <tags>
        <tag>nil</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[object Object]]]></title>
    <url>%2Fposts%2F824ac3d0%2F</url>
    <content type="text"><![CDATA[法式吐司 《电影食堂》-《克莱默夫妇》 材料 2 人份 4 片吐司（6 片装厚型吐司） 2 个鸡蛋 1 杯牛奶 1 大勺砂糖 适量黄油 适量蜂蜜 做法 深盆敲入鸡蛋打成蛋液，加入牛奶、砂糖混合均匀，把吐司浸入。 平底煎锅热黄油，待融化后放入吐司，盖上锅盖。 待煎到有焦色时翻面，再盖上锅盖，使两面都煎到。 最后，依据喜好淋上蜂蜜或枫糖即可。 Memo 煎到表面略焦、中间柔软是最理想的状况。 小火盖着锅盖，使吐司整体受热均匀，能够达到柔软蓬松的效果。 Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/824ac3d0/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Cook</category>
      </categories>
      <tags>
        <tag>Breakfast</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[object Object]]]></title>
    <url>%2Fposts%2F824ac3d0%2F</url>
    <content type="text"><![CDATA[蒜蓉白灼菜心 材料 菜心 500g 姜丝 2 片 蒜 3 瓣 花生油 生抽 蚝油 鱼露 做法 摘去老叶，清水洗净，泡 10 分钟左右，此时将姜片切丝，剁碎蒜蓉 锅加入清水，加入少许油和盐，等烧开 烧开后倒入菜心，筷子翻动下，根据大小调整时间，一般 1-2 分钟，喜欢脆口感可以时间稍短。 捞出摆盘 另起锅放入食用油，加入姜丝蒜茸爆香，加入一点盐、生抽和蚝油调味，再将热油淋在菜心里。 Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/824ac3d0/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Cook</category>
      </categories>
      <tags>
        <tag>nil</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[object Object]]]></title>
    <url>%2Fposts%2F824ac3d0%2F</url>
    <content type="text"><![CDATA[土豆炖牛肉 材料 🐂beef 牛肉 1kg 🥔potato 土豆 2 个 🍅tomato 番茄 2 个 洋葱 2 个 🥕 carrot 胡萝卜 1 个 姜葱 适量 老抽、料酒 一大勺 醋、糖 一小勺 番茄沙司 适量 黑胡椒 适量 油、盐 做法 牛肉切块冷水下锅焯 2 分钟，全程用温水清洗干净。 配料洗净切块，（土豆块泡清水里）待用。 锅放油烧热，先下牛肉煸炒一下，烹人老抽，料酒和一小勺白醋。 接着下洋葱西红柿，撒一勺白糖继续翻炒。 挤人番茄沙司（多挤一些），再磨一些胡椒粒炒匀。 放葱姜，倒入足够的热水，中大火烧 20 分钟改小火炖 1 小时左右。 出锅前放土豆胡萝卜块加盐烧熟。 等到肉烂，汤汁粘稠就可以调味出锅了。 Memo 牛肉要选牛腩肋条这一部分，肥瘦相间吃起来很嫩不柴。焯水之后要用温水清洗，如果用冷水一激牛肉就不容易炖烂了。 Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/824ac3d0/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Cook</category>
      </categories>
      <tags>
        <tag>nil</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Concurrency]]></title>
    <url>%2Fposts%2F9c149c9f%2F</url>
    <content type="text"><![CDATA[Concurrency [TOC] Problem I/O Process, Thread &amp; Coroutine Concurrent Model Thread &amp; Lock Actor Model CSP Model Reference Concurrency is not Parallelism. - Go Concurrency Patterns, Google IO 2012 Problem# The C10K problem: Handling 10,000 clients simultaneously through a single server. CPU operation is more faster than I/O operation, so I/O strategies is important in the same hardware condition. I/O#Process, Thread &amp; Coroutine# Concurrent Model#Thread &amp; Lock#Actor Model# One ant is no ant, one actor is no actor. Actor is the basic unit, and actors do not share memory. Message is the only communication approach. Actor is like a mailbox handler, handling different type of mail. Actor’s feature Each actor has a mailbox Actor handle the mail sequentially The message in actor is unmutable Actor hase to implement 3 basic part Processing Storage Mailbox (messageQueue) Communication The Actor Model Everything is an actor An actor has a mailbox, which is also an actor and needs a mailbox Axioms Create more actors Send messages to actors that it has addresses before Designate what to do with the next message Conceptually 1 message at a time. Message can be dilivered at most one time in arbitrary order Address != Identity Many-to-many relationship among actors and addresses No channel, they go directly Akka The underlying layer is still using the synchronization mechanism of Java and JVM It does not use any lock mechanism which means it will not appear deadlock The processing of concurrent execution does not use thread switching (improve thread efficiency and reduce the cost of switching thread) Provides a higher level of concurrent abstract models CSP Model# CSP: Golang (src/runtime/chan.go which is also ref to Libtask: a Coroutine Library for C and Unix) Reference# Wiki - Concurrency Lock Wiki Actor Model Youtube: The Actor Model Java/Scala - Akka Akka series demo Wiki CSP 并发模型之间的比较 知乎 Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/9c149c9f/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>CS</category>
      </categories>
      <tags>
        <tag>Concurrency</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Socket]]></title>
    <url>%2Fposts%2F2496d8d%2F</url>
    <content type="text"><![CDATA[[TOC] What is a socket?To the kernel, a socket is an endpoint of communicationTo an application, a socket is a file descriptor that lets the application read/write from/to the network All Unix I/O devices, including networks, are modeled as files. Two types of socket Based on file system _fd file descriptor Based on network protocol, IP, port Usually C/S model Client New Socket(), Connect(), Recv()/Send(), Close() Status: established, syn_send Server New Socket(), Bind(), Listen(), Accept(), Recv()/Send(), Close() Status: established, syn_rcvd 3 time shake Connecting: C: SYN; S: SYN+ACK; C: ACK; Closing: C: FIN; S: ACK; S: FIN; C: ACK; Each socket maintaining 2 queue A queue of connected client which is at the Communication between 2 process We need to find out the other process In local ENV, we we use PID because it’s unique in local ENV. In network, we know IP is unique for an host, and TCP protocol can find out the unique process for this host with its port. IP:PORT (Contains 2 protocol: TCP/IP) 内核中，Socket 是一个文件，那对应就有文件描述符。 每一个进程都有一个数据结构 task_struct，里面指向一个文件描述符数组，来列出这个进程打开的所有文件的文件描述符。 文件描述符是一个整数，是这个数组的下标。 数组中的内容是一个指针，指向内核中所有打开的文件的列表。 既然是一个文件，就会有一个 inode，只不过 Socket 对应的 inode 不像真正的文件系统一样，保存在硬盘上的，而是在内存中的。 Diff from fd 在这个 inode 中，指向了 Socket 在内核中的 Socket 结构。 Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/2496d8d/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>CS</category>
      </categories>
      <tags>
        <tag>Socket</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HashTable]]></title>
    <url>%2Fposts%2F57ef054a%2F</url>
    <content type="text"><![CDATA[[TOC] Set/Map and HashTable Hash Function Example Set/Map and HashTable# Hash Table Key -&gt; Hash Function -&gt; Table -&gt; Value 系统是否可以提供若干个较小的连续空间，而每个空间又能存放一定数量的记录 Hash Function# Like classifing different categories Hash Function Requirement Hash function should return an unsigned integer. if key1 == key2, then hash(key1) == hash(key2) if key1 != key2, then hash(key1) != hash(key2) MOD Coherence Theorem (同余定理) is like Classification 将任意长度的输入，通过哈希算法，压缩为某一固定长度的输出 f(x) = x mod size Optim - improve the randomness by adding salt: f(x) = (x + salt) mod size Collision Table -&gt; Linked List -&gt; Value Example# In Java default size=16 default 0.75 * capacity -&gt; expension Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/57ef054a/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>nil</category>
      </categories>
      <tags>
        <tag>nil</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binary Search Tree]]></title>
    <url>%2Fposts%2Fdcc99588%2F</url>
    <content type="text"><![CDATA[[TOC] Operation Support duplication Runtime Why BST not HashTable BST Variants Red-black tree B+ Tree Binary Search TreeA data structure created for quick search. Definition BST (Ordered Binary Tree) All nodes’ value on current nodes’ left subtree are smaller than current node’s value All nodes’ value on current nodes’ right subtree are greater than current node’s value Recursively, both left subtree and right subtree are BST Main features Support insert, delete and lookup operation in O(logn) time. Operation# Node 123456789public static class Node &#123; private int data; private Node left; private Node right; public Node(int data) &#123; this.data = data; &#125;&#125; Find operation T: O(logn) 1234567891011121314151617public Node find(Node root, Node target) &#123; return find(root, target.val);&#125;public Node find(Node root, int data) &#123; Node node = root; while (node != null) &#123; if (data &lt; node.data) &#123; node = node.left; &#125; else if (data &gt; node.data) &#123; node = node.right; &#125; else &#123; return node; &#125; &#125; return null;&#125; Find father node 12345678910111213141516171819202122public Node findFather(Node root, Node target) &#123; return findFather(root, target.val);&#125;public Node findFather(Node root, int data) &#123; Node node = root; Node father = null; while (node != null) &#123; if (node.val == data) return father; father = node; if (data &gt; node.val) &#123; node = node.right; &#125; else &#123; // data &lt;= node.val node = node.left; &#125; &#125; // Not exist return null;&#125; Insert operation Usually we insert new data on a leaf node. If new data is bigger than node’s data. The node has no right child, insert to its right child’s position. Recursively find the position in the node’s right subtree. If new data is smaller than node’s data, similar to the instructions above. 1234567891011121314151617181920212223public void insert(Node root, int data) &#123; if (root == null) &#123; root = new Node(data); return; &#125; Node node = root; while (node != null) &#123; if (data &gt; node.data) &#123; if (node.right == null) &#123; node.right = new Node(data); return; &#125; node = node.right; &#125; else &#123; // data &lt;= node.data if (node.left == null) &#123; node.left == new Node(data); return; &#125; node = node.left; &#125; &#125;&#125; Delete operation 3 situations under consideration The node to be deleted is a leaf node. Set it as null from its father node. The node has a child. Replace the node with its child. The node has two child. Find the min node in its right tree and replace the node with that min node. Delete that min node from its original position. 123456789101112131415161718192021222324252627282930313233343536373839404142434445public void delete(Node root, int data) &#123; Node node = root; Node father = null; // Find position while (node != null &amp;&amp; node.data != data) &#123; father = node; if (data &gt; node.data) &#123; node = node.right; &#125; else &#123; // data &lt;= node.data node = node.left; &#125; &#125; if (node == null) return; // Not exist // Two child if (node.left != null &amp;&amp; node.right != null) &#123; Node minNode = node.right; Node minNodeFather = node; while (minNode.left != null) &#123; minNodeFather = minNode; minNode = minNode.left; &#125; node.data = minNode.data; // Replace node's data node = minNode; // Delete minNode father = minNodeFather; &#125; // One child or no child Node child = null; // Node's child if (node.left != null) &#123; child = node.left; &#125; else if (node.right != null) &#123; child = node.right; &#125; if (father == null) &#123; root = child; // Delete root &#125; else if (father.left == node) &#123; father.left = child; &#125; else &#123; // father.right == node father.right = child; &#125; &#125; Find max/min node 12345678public Node findMin(Node root) &#123; if (root == null) return null; Node node = root; while (node.left != null) &#123; node = node.left; &#125; return node;&#125; 12345678public Node findMax(Node root) &#123; if (root == null) return null; Node node = root; while (node.right != null) &#123; node = node.right; &#125; return node;&#125; Find predecessor/successor node Predecessor Find max node of left subtree 12345 o(node) / \o o \ o(pred) Find father node (the node is father’s right child) 12345 o(pred) \ o(node) / \null o Find left side father node 123456789 o(pred) \ o / o / o(node) / \null o 123456789101112131415public Node findPredecessor(Node root, Node target) &#123; Node node = find(root, target); if (node.left != null) return findMax(node.left); TreeNode father = findFather(root, node); while (father != null &amp;&amp; node == father.left) &#123; node = father; father = findFather(root, node); // it would be more easier if there is pointer for father node &#125; // father == null =&gt; not exist or root // node == father.right =&gt; father node is the predecessor return father;&#125; Successor Find min node of right subtree 12345 o(node) / \o o / o(succ) Find father node (the node is father’s left child) 12345 o(succ) / o(node) / \o null Find right side father node 123456789 o(pred) /o \ o \ o(node) / \ o null 1234567891011public Node findSuccessor(Node root, Node target) &#123; Node node = find(root, target); if (node.right != null) return findMin(node); TreeNode father = findFather(node); while (father != null &amp;&amp; node == father.right) &#123; node = father; father = findFather(root, node); &#125; return father;&#125; Support duplication# In practice, the data stored in BST usually is a multi-field object We take one field as the key to build the BST. Other fields are called satellite data. What if there are two key that has same value Use datastructure like linked list and array (support dynamic expansion) to store those objects on the same node. Inset that object to its right tree. (consider it with a greater key value) For find(), we keep looking up on candidate node’s right subtree until we meet a leaf node so that we find out all the nodes with same key value. For delete(), we also need to find out all the nodes with the same key value and delete it one by one. Runtime# Time: O(logn) Worst: O(n) BST deterioratded to an unbalanced binary tree (extreme case a linked list) Nodes (assume max layer is L) n &gt;= 1 + 2 + 4 + 8 + ... + 2^(L-2) + 1 n &lt;= 1 + 2 + 4 + 8 + ... + 2^(L-2) + 2^(L-1) Level [log2(n+1), log2n + 1] Why BST not HashTable# HashTable have insert/delete/find operation in O(1) time But it is not stored in order, we can get an sorted list by inorder traversing the BST in O(n) time Capacity expansion is time-consuming for HashTable HashTable’s performance is not stable because of hash collision Designing hash function, solving hash collision, capacity expansion and etc. to be considered, while BST just need to solve the balancing problem and it has a mature scheme like red-black tree. Choosing the data structure according to the application scene BST Variants#Red-black tree# Balanced BST B+ Tree# Support outputing in range Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/dcc99588/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Data Structure</category>
      </categories>
      <tags>
        <tag>Data Structure</tag>
        <tag>Tree</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sorting Algorithm]]></title>
    <url>%2Fposts%2Fb59a5e11%2F</url>
    <content type="text"><![CDATA[[TOC] Analysis Sorting Algorithm Bubble Sort 冒泡排序 Insertion Sort 插入排序 Selection Sort Merge Sort 归并排序 Quick Sort 快速排序 Bucket Sort Counting Sort Radix Sort Timsort Heap sort Optimization Other case Reference Sorting Algorithm Sorting Algo In-place Stability Time Complexity (AVG/BEST/WORST) Space Complexity Bubble Sort ✓ ✓ O(n^2) / O(n) / O(n^2) O(1) Insertion Sort ✓ ✓ O(n^2) / O(n) / O(n^2) O(1) Selection Sort ✓ x O(n^2) / O(n^2) / O(n^2) O(1) Merge Sort x ✓ O(nlogn) / O(nlogn) / O(nlogn) O(n) Quick Sort ✓ x O(nlogn) / O(nlogn) / O(n^2) O(1) Bucket Sort x ✓ O(n + k) / O(n + k) / O(n^2) O(n + k) Counting Sort x ✓ O(n + k) / O(n + k) / O(n + k) O(k) Radix Sort x ✓ O(nd) / O(nd) / O(nd) O(n + d) Heap Sort ✓ x O(nlogn) / O(nlogn) / O(nlogn) O(1) Analysis# Performace 执行效率 Time Complexity Avg, Best case, Worst case Compare &amp; Swap opreation 交换次数等于逆序度 Scale Space Complexity 内存消耗 Sorted in place Stability 稳定性 值相等的元素，经过排序后，相等元素之间原有的先后顺序不变。 有序度 &amp; 逆序度 有序度是数组中具有有序关系的元素对的个数。Oredered: n*(n-1)/2 (满有序度) 逆序度 = 满有序度 - 有序度 Sorting Algorithm# 基于比较排序的算法下界 O(nlogn) 123456789Q: 已知有数组 [a1, a2, ..., an]，求数组特定的一个排序组合 A: 组合数：n! 断言：ai &gt; aj，可排除一半的情况 =&gt; n!/2 若比较 k 次能得到该特定的排序，求 k。 =&gt; n! / 2^k = 1 =&gt; 2^k = n! =&gt; k = log(n!) &amp;&amp; log(n!) &lt; log(n^n) =&gt; k ≈ nlog(n) Bubble Sort 冒泡排序 # Features In place sort Stability Best: O(n), Worst: O(n^2) 1234567891011121314151617public static int[] bubbleSort(int[] arr) &#123; if (arr.length &lt;= 1) return arr; for (int i = 0; i &lt; arr.length; i++) &#123; boolean swapped = false; for (int j = 0; j &lt; arr.length - 1 - i; j++) &#123; if (arr[j + 1] &lt; arr[j]) &#123; swap(arr, j, j + 1); swapped = true; &#125; &#125; if (!swapped) break; // No swap &#125; return arr;&#125; Insertion Sort 插入排序 # Feature In place sort Stability Best: O(n), Worst: O(n^2) 123456789101112131415161718public static int[] insertionSort(int[] arr) &#123; if (arr.length &lt;= 1) return arr; for (int i = 1; i &lt; arr.length; i++) &#123; int val = arr[i]; int j = i - 1; // Find seout where to insert for (; j &gt;= 0; j--) &#123; if (val &lt; arr[j]) &#123; arr[j+1] = arr[j]; &#125; else break; &#125; arr[j+1] = val; // Insert &#125; return arr;&#125; Selection Sort# Feature In place sort Non-Stability Best: O(n), Worst: O(n^2) 12345678910111213141516171819public static int[] selectionSort(int[] arr) &#123; if (arr.length &lt;= 1) return arr; for (int i = 0; i &lt; arr.length - 1; i++) &#123; int min = arr[i]; int minIdx = i; for (int j = i + 1; j &lt; arr.length; j++) &#123; if (arr[j] &lt; min) &#123; min = arr[j]; minIdxinser = j; &#125; &#125; // Swap arr[minIdx] = arr[i]; arr[i] = min; &#125; return arr;&#125; Merge Sort 归并排序 # Divide and ConquerBOTTOM TO TOP Features Not in place sort =&gt; space: O(n) Not-Stability Time-Avg: O(nlogn) 123456789101112131415public static void mergeSort(int[] arr) &#123; if (arr.length &lt; 2) return; mergeSort(arr, 0, arr.length - 1);&#125;public static void mergeSort(int[] arr, int low, int high) &#123; if (low &lt; high) &#123; int mid = low + ((high - low) &gt;&gt; 1); // DaC mergeSort(arr, low, mid); mergeSort(arr, mid + 1, high); // Merge mergeArr(arr, low, mid, high); &#125;&#125; 123456789101112131415161718192021222324public static void mergeArr(int[] arr, int low, int mid, int high) &#123; int[] sortedArr = new int[high - low + 1]; int k = 0, idx1 = low, idx2 = mid + 1; while (idx1 &lt;= mid &amp;&amp; idx2 &lt;= high) &#123; if (arr[idx1] &lt; arr[idx2]) &#123; sortedArr[k++] = arr[idx1++]; &#125; else &#123; sortedArr[k++] = arr[idx2++]; &#125; &#125; while (idx1 &lt;= mid) &#123; sortedArr[k++] = arr[idx1++]; &#125; while (idx2 &lt;= high) &#123; sortedArr[k++] = arr[idx2++]; &#125; for (int i=low, j=0; i&lt;=high; i++, j++) &#123; arr[i] = sortedArr[j]; &#125;&#125; Quick Sort 快速排序 # Divide and ConquerTOP to BOTTOM Features In place sort =&gt; space: O(1) Not-Stability Time-Avg: O(nlogn), Worst: O(n^2) depending on the pivot value How to optimzie quick sort Choose a better pivot which can even split the array Pick the median of arr[low], arr[(low+high)/2], arr[high] as pivot Randomly pick an element as pivot Many other methods 12345678910111213141516public static void quickSort(int[] arr) &#123; // 1. In place sort, Space: O(1) // 2. Not-Stability // 3. Time-Avg: O(nlogn), Worst: O(n^2) // TOP to BOTTOM if (arr.length &lt; 2) return; quickSort(arr, 0, arr.length - 1);&#125;public static void quickSort(int[] arr, int low, int high) &#123; if (low &lt; high) &#123; int divIdx = partition(arr, low, high); quickSort(arr, low, divIdx - 1); quickSort(arr, divIdx + 1, high); &#125;&#125; 1234567891011121314151617181920212223242526272829public static int partition(int[] arr, int low, int high) &#123; int pivot = arr[high]; // Find pivot int divIdx = low; // Divide index for (int i = low; i &lt; high; i++) &#123; if (arr[i] &lt; pivot) &#123; swap(arr, divIdx++, i); &#125; &#125; swap(arr, divIdx, high); return divIdx;&#125;private static int findPivot(int[] arr, int low, int high) &#123; int nMid = arr[low + ((high - low) &gt;&gt; 1)]; int[] num = new int[]&#123;arr[low], nMid, arr[high]&#125;; // 3 point median if (num[0] &gt; num[1]) swap(num, 0, 1); if (num[1] &gt; num[2]) swap(num, 1, 2); if (num[0] &gt; num[1]) swap(num, 0, 1); return num[1];&#125;private static void swap(int[] arr, int i, int j) &#123; if (i == j) return; int temp = arr[i]; arr[i] = arr[j]; arr[j] = temp;&#125; Bucket Sort# Analysis Assume there are m buckets, each bucket has $k = n / m$ elements Use quick sort in each bucket in O(klogk) time Total in $O(m * klogk) = O(nlogk)$ time When $m ≈ n$, which means k is really small =&gt; $O(nlogk) ≈ O(n)$ Suitable for big data, when we can not load all the data in RAM at the same time (外部排序) Case Question 有 10GB 的订单数据，我们希望按订单金额（假设金额都是正整数）进行排序，但是我们的内存有限，只有几百 MB，没办法一次性把 10GB 的数据都加载到内存中。这个时候该怎么办呢？ Answer 先扫描一遍文件，看订单金额所处的数据范围。 将所有订单根据金额划分到 100 个桶。 理想的情况下，如果订单金额均匀分布，那订单会被均匀划分到 100 个文件中，每个小文件中存储大约 100 MB。 将这 100 个小文件依次放到内存中，用快排来排序。 所有文件都排好序之后，我们只需要按照文件编号，从小到大依次读取每个小文件中的订单数据，并将其写入到一个文件中。 Counting Sort# Analysis It’s like a special case of bucket sort. 计数排序只能用在数据范围不大的场景中，如果数据范围 k 比要排序的数据 n 大很多，就不适合用计数排序了。 而且，计数排序只能给非负整数排序，如果要排序的数据是其他类型的，要将其在不改变相对大小的情况下，转化为非负整数。 1234567891011121314151617181920212223242526272829Data range: [0, 9]Input data: [1, 4, 1, 2, 7, 5, 2]1) Take a count array to store the count of each unique object.Index: 0 1 2 3 4 5 6 7 8 9Count: 0 2 2 0 1 1 0 1 0 02) Add prefix sumIndex: 0 1 2 3 4 5 6 7 8 9Count: 0 2 4 4 5 6 6 7 7 73) Output each object from the input sequence followed by decreasing its count by 1.Process the input data: [1, 4, 1, 2, 7, 5, 2].Index: 0 1 2 3 4 5 6 7 8 9Count: 0 2 4 4 5 6 6 7 7 7// [-&gt;1, 4, 1, 2, 7, 5, 2]Count: 0 2-1 4 4 5 6 6 7 7 7Index: 0 1 2 3 4 5 6Data: - *1 - - - - -// [1, -&gt;4, 1, 2, 7, 5, 2]Count: 0 1 4 4 5-1 6 6 7 7 7Index: 0 1 2 3 4 5 6Data: - 1 - - *4 - -// [1, 4, -&gt;1, 2, 7, 5, 2]Index: 0 1 2 3 4 5 6Count: 0 1-1 4 4 4 6 6 7 7 7 Data: *1 1 - - 4 - -// ... 123456789101112131415161718192021222324252627282930313233343536373839404142// 计数排序，a 是数组，n 是数组大小。假设数组中存储的都是非负整数。public void countingSort(int[] a, int n) &#123; if (n &lt;= 1) return; // 查找数组中数据的范围 int max = a[0]; // 遍历数组的所有的元素，找到最大的元素 for (int i = 1; i &lt; n; ++i) &#123; // 若后面的元素大于指定的数组元素，则把元素进行交换 if (max &lt; a[i]) max = a[i]; &#125; // 申请一个计数数组 c，下标大小 [0,max] int[] c = new int[max + 1]; for (int i = 0; i &lt;= max; ++i) &#123; c[i] = 0; &#125; // 计算每个元素的个数，放入 c 中 for (int i = 0; i &lt; n; ++i) &#123; c[a[i]]++; &#125; // 依次累加 for (int i = 1; i &lt;= max; ++i) &#123; c[i] = c[i-1] + c[i]; &#125; // 临时数组 r，存储排序之后的结果 int[] r = new int[n]; // 计算排序的关键步骤，有点难理解 for (int i = n - 1; i &gt;= 0; --i) &#123; int index = c[a[i]]-1; r[index] = a[i]; c[a[i]]--; &#125; // 将结果拷贝给 a 数组 for (int i = 0; i &lt; n; ++i) &#123; a[i] = r[i]; &#125;&#125; Radix Sort# Analysis 基数排序对要排序的数据是有要求的，需要可以分割出独立的 “位” 来比较，而且位之间有递进的关系，如果 a 数据的高位比 b 数据大，那剩下的低位就不用比较了。 除此之外，每一位的数据范围不能太大，要可以用线性排序算法来排序，否则，基数排序的时间复杂度就无法做到 O (n) 了。 Case Question 如何根据年龄给 100 万用户排序？(Like sorting 1 million phone number) Answer Make it all the username or uid the same length (ban, candy, john, …) =&gt; (ban00, candy, john0) ‘0’ &lt; any letter in ASCII value Radix sort (Assume the size of username or uid is smaller than 20) Time complexity is similar to O(n) Timsort# Timsort is a hybrid stable sorting algorithm, derived from merge sort and insertion sort, designed to perform well on many kinds of real-world data. Using neat merge method 找出左分区最后一个元素 (最大) 及在右分区的位置 找出右分区第一个元素 (最小) 及在左分区的位置 仅对这两个位置之间的元素进行合并，之外的元素本身就是有序的 Heap sort# See data structure “heap” Optimization# Choose the sorting algo according to the data size When the element is less than 5, it will sorted by insertion sort When O(nlogn) is actually calculated as $f(n) = knlogn + c$, it may bigger than $f(n) = n ^ 2$ Like $n = 100$, $k = 1000$, $c = 200$ So for a small size of data, algorithm with O(n^2) maybe a better choice When the capacity is small, like 1k, 2k, … we can choose merge sort Case Java 1.8 [0, 47]: Selection sort [47, 286]: Quick sort (Dual Pivot Quick Sort) [286, …]: Timsort (merge sort) For some basic type like byte, char, short: Counting sort Google v8 quick sort [10, 1000]: choose arr[mid] as pivot [1000, …]: Pick an elements from every 200 elements and choose the median as pivot. Split in 3 part: [&lt;pivot], [=pivot], [&gt;pivot] Glibc qsort() [0, 4]: Insertion sort Small size: Merge sort Large size: Quick sort Implement a stack on heap in case of stack overflow Other case# Case 1 Question 现在你有 10 个接口访问日志文件，每个日志文件大小约 300MB，每个文件里的日志都是按照时间戳从小到大排序的。你希望将这 10 个较小的日志文件，合并为 1 个日志文件，合并之后的日志仍然按照时间戳从小到大排列。如果处理上述排序任务的机器内存只有 1GB，你有什么好的解决思路，能 “快速” 地将这 10 个日志文件合并吗？ Answer 维持一个按时间戳排序的 Min Heap。 依次读取日志文件并放入 Min Heap 中。 同时从 Min Heap 取出最早的日志存到合并文件中。 Reference# 数据结构与算法之美 11-14 排序算法 Counting Sort | GeeksforGeeks - YouTube Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/b59a5e11/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Algo</category>
      </categories>
      <tags>
        <tag>Algo</tag>
        <tag>Sorting</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binary Search Algorithm]]></title>
    <url>%2Fposts%2Fcf581b8c%2F</url>
    <content type="text"><![CDATA[[TOC] Complexity Analyse Restriction Implementation Variants Skip List - Support Binary Search for LinkedList Point of view Case Reference Binary Search Although the first binary search algorithm appeared in 1946, the first completely correct binary search algorithm was not implemented until 1962. - Donald E.Knuth Complexity Analyse# Time Avg: O(logn) Worst: O(logn) Best: O(1) Space Recursion: O(logn) Iteration: O(1) Attention Stop condition How to update lower &amp; upper bound (low &amp; high) How to choose the return value (mid) Restriction# Sorted/Ordered 单调递增或递减 Bounded 存在上下界 Accessible by index 可通过索引访问 Fit for array not linked list Not suitable for dataset which is too small or too big Too small, the performance is similar Too big, the data is not stored consequently Implementation# Iteration 1234567891011121314151617181920public static int bsearch(int[] nums, int target) &#123; return bsearch(nums, 0, nums.length-1, target)&#125;public static int bsearch(int[] nums, int start, int end, int target)&#123; int left = start, right = end; while (left &lt;= right) &#123; int mid = left + (right - left) / 2; if (nums[mid] &lt; target) &#123; left = mid + 1; &#125; else if (nums[mid] &gt; target) &#123; right = mid - 1; &#125; else &#123; return mid; &#125; &#125; return -1;&#125; Recursion 12345678910111213public static int bsearch(int[] nums, int start, int end, int target)&#123; if (start &gt; end) return -1; int mid = start + (end - start) / 2; if (arr[mid] &gt; target) return bsearch(arr, start, mid - 1, data); if (arr[mid] &lt; target) return bsearch(arr, mid + 1, end, data); return mid; &#125; Variants# Find the first target / last target 123456789101112131415161718192021222324public static int findFirstTarget(int[] nums, int start, int end, int target) &#123; int left = start, right = end; while (left &lt;= right) &#123; int mid = left + (right - left) / 2; if (nums[mid] &gt; target) &#123; right = mid - 1; &#125; else if (nums[mid] &lt; target) &#123; left = mid + 1; &#125; else &#123; right = mid - 1; // Equal, first of arr || first of repeated target if ((mid == start) || (nums[mid - 1] != target)) return mid; // left = mid + 1; // Equal, last of arr || last of repeated target // if ((mid == end) || (nums[mid + 1] != target)) // return mid; &#125; &#125; return -1;&#125; Find the first number &gt;= target / last number &lt;= target 123456789101112131415161718192021222324252627public static int findFirstBigger(int[] nums, int start, int end, int target) &#123; int left = start, right = end; while (left &lt;= right) &#123; int mid = left + (right - left) / 2; if (nums[mid] &gt;= target) &#123; right = mid - 1; // &gt;=, first of arr || first elem bigger than target if((mid == start) || (nums[mid - 1] &lt; target)) return mid; &#125; else &#123; left = mid + 1; &#125; // last number smaller than target // if (nums[mid] &lt;= target) &#123; // left = mid + 1; // // &gt;=, end of arr || last elem smaller than target // if ((mid == end) || (nums[mid + 1] &gt; target)) // return mid; // &#125; else &#123; // right = mid - 1; // &#125; &#125; return -1;&#125; Attention Duplicates Out of range: target &lt; nums[0] / target &gt; nums[nums.length - 1] Skip List - Support Binary Search for LinkedList# Reform linked list in order to support binary search, which is skip list. (跳表)It’s a outstanding dynamic data structure. (Sometime Red-black tree can replaced by skip list)Sorted Set in Redis is implemented with skip list and hashmap. What is skip list Linked list with multi-level indice. How many indice do we need Given a linked list with size n. Number of indice nodes at level k is #: n / 2^k Assume there h level, $h = log2n - 1$ When maxLevel = 1, it’s just a simple linked list Time complexity Assume we need to traverse m nodes at each index layer O(mlogn) and max(m) = 3 =&gt; O(logn) Space complexity Indice nodes number: $n/2 + n/4 + … + 4 + 2 = n - 2$ O(n) In order to reduce the size, we can add a index node every 3 or 5 nodes rather than 2 nodes. ($n/3 + n/9 + … + 9 + 3 + 1 ≈ n/2 = O(n)$) But considering the nodes are just pointers, we don’t need to store the object itself, so in many cases we can just ignore the this extra space. Operation Insert / Delete / Search in O(logn) Maintain index When insert an new element, add a new index through a random function Search in range (which is better than Red-black tree) Ref Code Summary 跳表是一种动态数据结构，支持快速的插入、删除、查找操作，时间复杂度都是 O (logn)。 跳表的实现非常灵活，可以通过改变索引构建策略，有效平衡执行效率和内存消耗。 跳表使用空间换时间的设计思路，通过构建多级索引来提高查询的效率，实现了基于链表的 “二分查找”。 虽然跳表的代码实现并不简单，但是作为一种动态数据结构，比起红黑树来说，实现要简单多了。 Point of view# A problem which can be solved by binary search, we usually prefer to solve by hash table or binary search tree. 凡是用二分查找能解决的，绝大部分我们更倾向于用 HashTable 或者 BST。 Binary search is more useful in searching vague value problem. 二分查找更适合用在 “近似” 查找问题。 Case# Q1: 假设我们有 1000 万个整数数据，每个数据占 8 个字节，如何设计数据结构和算法，快速判断某个整数是否出现在这 1000 万数据中？我们希望这个功能不要占用太多的内存空间，最多不要超过 100MB，你会怎么做呢？ Answer 最简单的办法就是将数据存储在数组中，内存占用差不多是 80MB，符合内存的限制。 先排序，再查找。 大部分情况下，用二分查找可以解决的问题，用散列表、二叉树都可以解决。 不管是散列表还是二叉树，都会需要比较多的额外的内存空间。 如果用散列表或者二叉树来存储这 1000 万的数据，用 100MB 的内存肯定是存不下的。 Q2: 假设我们有 12 万条这样的 IP 区间与归属地的对应关系，如何快速定位出一个 IP 地址的归属地呢？ Answer 如果 IP 区间与归属地的对应关系不经常更新，我们可以先预处理这 12 万条数据，让其按照起始 IP 从小到大排序。 如何来排序呢？我们知道，IP 地址可以转化为 32 位的整型数。 所以，我们可以将起始地址，按照对应的整型值的大小关系，从小到大进行排序。 要查询某个 IP 归属地时，我们可以先通过二分查找，找到最后一个起始 IP 小于等于这个 IP 的 IP 区间。 然后，检查这个 IP 是否在这个 IP 区间内，如果在，我们就取出对应的归属地显示；如果不在，就返回未查找到。 Reference# 数据结构与算法之美 15-17 Leetcode Binary Search 知识点总结 LC-034 Find First and Last Position of Element in Sorted Array LC-035 Search Insert Position Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/cf581b8c/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Algo</category>
      </categories>
      <tags>
        <tag>Algo</tag>
        <tag>Binary Search</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Algorithm in life]]></title>
    <url>%2Fposts%2Fec40279f%2F</url>
    <content type="text"><![CDATA[[TOC] Algorithm in life 生活里的算法 37% Priority Queue Kelly Formula 凯利公式 Game Theory 博弈论 Algorithm in life 生活里的算法 #37%# 适用范围 找房子、买东西、换工作等 Priority Queue# 一个任务的密度 = 重要程度 / 完成时间 Kelly Formula 凯利公式 #Game Theory 博弈论 #Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/ec40279f/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Algo</category>
      </categories>
      <tags>
        <tag>Algo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TITLE]]></title>
    <url>%2Fposts%2Fdc62badb%2F</url>
    <content type="text"><![CDATA[[TOC] Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/dc62badb/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>nil</category>
      </categories>
      <tags>
        <tag>nil</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Design Pattern]]></title>
    <url>%2Fposts%2F4dbeaedc%2F</url>
    <content type="text"><![CDATA[[TOC] Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/4dbeaedc/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>nil</category>
      </categories>
      <tags>
        <tag>nil</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[金融学的七个理论]]></title>
    <url>%2Fposts%2Fdd928e4a%2F</url>
    <content type="text"><![CDATA[[TOC] 1. EMH 有效市场假说 2. NPV 净现值 3. CAPM 资本资产定价模型 4. 价值可加性和价值守恒原理 5. 资本结构理论 6. 期权理论 7. 代理理论 金融学的七个理论 1. EMH 有效市场假说 #2. NPV 净现值 #3. CAPM 资本资产定价模型 #4. 价值可加性和价值守恒原理 #5. 资本结构理论 #6. 期权理论 #7. 代理理论 #Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/dd928e4a/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Finance</category>
      </categories>
      <tags>
        <tag>Finance</tag>
        <tag>Thought</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Stack]]></title>
    <url>%2Fposts%2F8069546e%2F</url>
    <content type="text"><![CDATA[[TOC] Data Structure - Stack Achieved an Array based Stack Call Stack 调用栈 RAM Area 内存区域 Data Structure - Stack#Achieved an Array based Stack# Main methods push pop top isEmpty Call Stack 调用栈# 表示函数或子例程像堆积木一样存放，以实现层层调用。程序运行的时候，总是先完成最上层的调用，然后将它的值返回到下一层调用，直至完成整个调用栈，返回最后的结果。 12main()# Program start 123Class()main()# Calling Constructor 1234method()Class()main()# Calling instance method RAM Area 内存区域# 存放数据的一种内存区域 一般来说，系统会划分出两种不同的内存空间：Stack 栈 &amp; Heap 堆 Diff Structure Stack 是有结构的，每个区块按照一定次序存放，可以明确知道每个区块的大小； Heap 是没有结构的，数据可以任意存放。 =&gt; Stack 内变量的分配速度会比 Heap 快，Heap 内分配需要调用 malloc =&gt; Stack 的寻址也会比 Heap 快，通过 sp/fp 寄存器间接寻址 Size Init stack 时 size 是确定的，数据超出范围，就会发生溢出 stack overflow Heap 的 size 是不确定的，可以按需增加 =&gt; size(stack) &lt;&lt; size(heap) =&gt; 数据存放的规则是：只要是局部的、占用空间确定的数据，一般都存放在 stack 里面，否则就放在 heap 里面。 Data 栈存放的内容，函数返回地址、相关参数、局部变量和寄存器内容等。 Release (操作系统对进程占用的内存空间的两种管理方式) function{…release(stack)} Heap 人工释放 malloc()/free()；若程序员不释放，程序结束时由 OS 回收。 Others RAM Address: Stack (h-&gt;l) vs. Heap (l-&gt;h) 每个线程分配一个 Stack，每个进程分配一个 Heap 分配效率不同，hardware optim for stack (specific register) =&gt; Stack 线程独占，Heap 线程共用 Example 1234567public void Main() &#123; int val = 4; Class cls = new Class();&#125;// Main() 结束，会清空 Stack// 但 Heap 的 cls obj 继续存在，直到 garbage collector 回收这部分内存// 一般来说，内存泄漏都发生在 heap，即某些内存空间不再被使用了，却因为种种原因，没有被系统回收。 12345# Stack......cls(ref)val 123# Heapcls obj... Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/8069546e/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>nil</category>
      </categories>
      <tags>
        <tag>nil</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hash Table]]></title>
    <url>%2Fposts%2F491f7c5d%2F</url>
    <content type="text"><![CDATA[[TOC] Hash function Design a industrial level hash table Case: Java HashMap Questions Reference Hash function# Hash table utilize the random access feature of array, so it’s kind of extension of array. Design hash function hash(key) =&gt; index of the table Requirements for a hash function The result is always a non-negative integer If key1 == key2, then hash(key1) == hash(key2) If key1 != key2, then hash(key1) != hash(key2) For the 3rd requirement, it’s impossible to achieve When key1 != key2 and hash(key1) == hash(key2), we call it hash collision Solve hash collision problem Two ways to solve it Open addressing 开放寻址法 Main idea: when detect conflict, we find another available place to insert Linear Probing 线性探测 hash(key)+0，hash(key)+1，hash(key)+2, ... Quadratic probing 二次探测 hash(key)+0，hash(key)+1^2，hash(key)+2^2, ... Double hashing 双重散列 hash1(key)，hash2(key)，hash3(key), ... The probability of hash collision will increase with the size increasing, so we use load factor to ensure there are enough space for new elements $load factor = size / capacity$ Chaining 链表法 Each bucket / slot will point to a linked list We store the elements with same value of hash(key) in the linked list Steps to lookup the value Get bucket by hash(key) Traverse the linked list node.key == key then return node.val In O(k) time, $k = n / m$, m is the size of the bucket, k is ideal average length of the linked list (distributed evenly) Pros &amp; Cons Open addressing: Java ThreadLocalMap Pros Easy to serialization Improve lookup performance utilizing the CPU Cache since all stored in an array Cons Complicated to delete elements Higher prive for hash collision When? Small size of data Small load factor Chaining: Java LinkedHashMap Pros Higher tolerance for hash collision Cons Need larger space to store the linkedlist Not friendly to CPU Cache which affects the performance When? Big object and big data size More flexiable optimization strategy Use red-black tree / skiplist instead of linkedlist Lookup in O(logk) time In the extremely case, there only one bucket, still lookup in O(logn) time Design a industrial level hash table# Target Avoid sharp drop performance in case of hash collisions Resist hash collision attacks Requirements Keep it simple Otherwise it will cost too much computing resource Result should be random and distributed evenly Dynamic expansion Set a threshold value for the load factor Once it hits the threshold, expand the table Move the elements to the new table In equalization situation, it’s still O(1) for insertion But the problem is one-time expansion is time consuming Make it inertia, just create space and move later It’s a trade-off decision for when to expand the hash table When the RAM is limited, and not require high performance, $load factore &gt;= 1$ is accectable Dynamic moving Insert one new elem to new table with copying a old one Lookup for new table first than the old table Summary What features an industrial level hash table should have Support quick lookup/insert/delete operations Reasonable RAM usage, do not waste too much space Stable performance, even in a extreme situation, the performance should be still acceptable How to design this hash table Design a proper hash function Define a proper threshold value for the load factor Design a proper dynamic expansion strategy Choose a proper method to solve hash collision problem Case: Java HashMap# Design Default capacity: 16 Max load factor: 0.75 Expansion: Double the size Use chaining method to solve hash collision It will TREEFY to red-black tree when hits the TREEFY_THRESHOLD = 8 Oppositely, it will UNTREEFY to linkedlist hits the UNTREEFY_THRESHOLD = 6 12345// capitity: capitity of the hash tableint hash(Object key) &#123; int h = key.hashCode(); return (h ^ (h &gt;&gt;&gt; 16)) &amp; (capitity - 1);&#125; 123456789101112// String's hashCode methodpublic int hashCode() &#123; int var1 = this.hash; if(var1 == 0 &amp;&amp; this.value.length &gt; 0) &#123; char[] var2 = this.value; for(int var3 = 0; var3 &lt; this.value.length; ++var3) &#123; var1 = 31 * var1 + var2[var3]; &#125; this.hash = var1; &#125; return var1;&#125; Questions# Q1 Q: 假设我们有 10 万条 URL 访问日志，如何按照访问次数给 URL 排序？ Answer 遍历 10 万条数据，以 URL 为 key，访问次数为 value，存入散列表，同时记录下访问次数的最大值 K，时间复杂度 O (N)。 如果 K 不是很大，可以使用桶排序，时间复杂度 O (N)。如果 K 非常大（比如大于 10 万），就使用快速排序，复杂度 O (NlogN)。 Q2 Q: 有两个字符串数组，每个数组大约有 10 万条字符串，如何快速找出两个数组中相同的字符串？ Answer 以第一个字符串数组构建散列表，key 为字符串，value 为出现次数。再遍历第二个字符串数组，以字符串为 key 在散列表中查找，如果 value 大于零，说明存在相同字符串。时间复杂度 O (N)。 Reference# 数据结构与算法之美 18-19 Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/491f7c5d/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Data Structure</category>
      </categories>
      <tags>
        <tag>Data Structure</tag>
        <tag>HashTable</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binary Tree]]></title>
    <url>%2Fposts%2Fe0e2589a%2F</url>
    <content type="text"><![CDATA[[TOC] Definition Traversing binary tree Complexity Analysis Construct Binary Tree Definition# Binary Tree Each node has only two childs 123456public class TreeNode &#123; int val; TreeNode left; TreeNode right; TreeNode(int x) &#123; val = x; &#125;&#125; Classic structure BST Red-black tree Heap Traversing binary tree# We can traverse a tree recursively to retrieve all the data in pre-order, in-order or post-order Pre-order: root-left-right In-order: left-root-right We will get an ordered list after in-order traversing a BST Post-order: left-right-root Recursive traversal solution 1234567/* Preorder Traversal - Recursive Solution*/public void preorder(TreeNode root, ArrayList&lt;Integer&gt; result) &#123; if (root != null) return null; result.add(root.val); // visit the root preorder(root.left, result); // traverse left subtree preorder(root.right, result); // traverse right subtree&#125; 1234567/* Inorder Traversal - Recursive Solution*/public void inorder(TreeNode root, ArrayList&lt;Integer&gt; result) &#123; if (root != null) return null; inorder(root.left, result); result.add(root.val); inorder(root.right, result);&#125; 1234567/* Postorder Traversal - Recursive Solution*/public void postorder(TreeNode root, ArrayList&lt;Integer&gt; result) &#123; if (root != null) return null; postorder(root.left, result); postorder(root.right, result); result.add(root.val);&#125; Iterative traversal solution 123456789101112131415161718// Preorder Traversal - Iterative Solutionpublic List&lt;Integer&gt; preorder(TreeNode root) &#123; List&lt;Integer&gt; ret = new ArrayList&lt;&gt;(); if (root == null) return ret; Stack&lt;TreeNode&gt; stack = new Stack&lt;TreeNode&gt;(); stack.push(root); TreeNode node; while (!stack.empty()) &#123; node = stack.pop(); // root -&gt; left -&gt; right ret.add(node.val); if (node.right != null) stack.push(node.right); if (node.left != null) stack.push(node.left); &#125; return answer;&#125; 12345// Inorder// Left -&gt; Root -&gt; Right (Stack, FILO)if (node.right != null) stack.push(node.right); ret.add(node.val); if (node.left != null) stack.push(node.left); DaC perspective 1234567891011121314// Thought: Divide and Conquerpublic ArrayList&lt;Integer&gt; dacTraversal(TreeNode root) &#123; if (root != null) return null; ArrayList&lt;Integer&gt; ret = new ArrayList&lt;Integer&gt;(); // Divide ArrayList&lt;Integer&gt; left = dacTraversal(root.left); ArrayList&lt;Integer&gt; right = dacTraversal(root.right); // Conquer (adjust the order here) // Pre-order: ret.add(root.val); ret.addAll(left); ret.addAll(right); // In-order ret.addAll(left); ret.add(root.val); ret.addAll(right); // Post-order: ret.addAll(left); ret.addAll(right); ret.add(root.val); return ret;&#125; Complexity Analysis# Complexity T: O(n) Because we visit each node exactly once. S: O(n) / O(1) Taking system stack into consideration Worst case, $level = size$ To be cautious When the depth of tree is too large, we might suffer from stack overflow problem, and the depth of the tree might be N in the worst case. That’s one of the main reasons why we want to solve this problem iteratively sometimes. And the complexity might be different due to a different implementation. Construct Binary Tree# From Inorder and Preorder Traversal 12preorder: [root, [left-subtree], [right-subtree]]inorder: [[left-subtree], root, [right-subtree]] 123456789101112131415161718192021222324public TreeNode buildTree(int[] preorder, int[] inorder) &#123; return buildTree(preorder, inorder, 0, inorder.length - 1, 0);&#125;private TreeNode buildTree(int[] preorder, int[] inorder, int iS, int iE, int pS) &#123; if(iS &gt; iE) return null; if(iS == iE) return new TreeNode(inorder[iS]); // This part can be optim by using HashMap int iRoot = iS; for(int i = iS; i &lt;= iE; i++) &#123; if(inorder[i] == preorder[pS]) &#123; iRoot = i; break; &#125; &#125; TreeNode root = new TreeNode(inorder[iRoot]); root.left = buildTree(preorder, inorder, iS, iRoot - 1, pS + 1); root.right = buildTree(preorder, inorder, iRoot + 1, iE, pS + (iRoot - iS) + 1); return root;&#125; From Inorder and Postorder Traversal 12postorder: [[left-subtree], [right-subtree], root]inorder: [[left-subtree], root, [right-subtree]] 123456789101112131415161718192021222324public TreeNode buildTree(int[] inorder, int[] postorder) &#123; return buildTree(inorder, postorder, 0, inorder.length - 1, postorder.length - 1);&#125;private TreeNode buildTree(int[] inorder, int[] postorder, int iS, int iE, int pE) &#123; if(iS &gt; iE) return null; if(iS == iE) return new TreeNode(inorder[iS]); // This part can be optim by using HashMap int iRoot = iS; for(int i = iS; i &lt;= iE; i++) &#123; if(inorder[i] == postorder[pE]) &#123; iRoot = i; break; &#125; &#125; TreeNode root = new TreeNode(inorder[iRoot]); root.left = buildTree(inorder, postorder, iS, iRoot - 1, pE - (iE - iRoot) - 1); root.right = buildTree(inorder, postorder, iRoot + 1, iE, pE - 1); return root;&#125; Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/e0e2589a/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Data Structure</category>
      </categories>
      <tags>
        <tag>Data Structure</tag>
        <tag>Tree</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Manacher's Algorithm]]></title>
    <url>%2Fposts%2Fc096a6bd%2F</url>
    <content type="text"><![CDATA[[TOC] Implementation Complexity Code Manacher’s AlgorithmFind longest palindromic substring Implementation# Preprocess e.g. transform s into t 123456789e.g. &quot;ababa&quot;-&gt; s: a b a b a-&gt; t: ^~a~b~a~b~a~$e.g. &quot;abba&quot;-&gt; s: a b b a-&gt; t: ^~a~b~b~a~$-&gt; len = 2 * n + 3 code 123456789101112private char[] preProcess(String s) &#123; char[] chars = new char[s.length() * 2 + 3]; Arrays.fill(chars, '~'); int i = 2; for(char c : s.toCharArray()) &#123; chars[i] = c; i += 2; &#125; chars[0] = '^'; chars[chars.length - 1] = '$'; return chars;&#125; Palindrome Radius 回文半径 pr[i] e.g. 1234567891011e.g.: &quot;abaaba&quot; -&gt; &quot;^~a~b~a~a~b~a~$&quot; a b a a b a ^ ~ a ~ b ~ a ~ a ~ b ~ a ~ $index: [0 1 2 3 4 5 6 7 8 9 . . . . .]pr[i]: [1 1 2 1 4 1 2 7 2 1 4 1 2 1 1]-&gt; i = 7, pr[7] represents: s: ~a~b~a ~ a~b~a~ i: 1, .., 7, .., 13 len radius = pr[i] - 1 = 6: &quot;a~b~a~&quot;-&gt; Palindrome String 回文串: s: [i - (pr[i] - 1), i + (pr[i] - 1)] [1, 13] -&gt; &quot;~a~b~a~a~b~a~&quot; Map to original string 1234567891011e.g.: &quot;assa&quot; -&gt; &quot;...~a~s~s~a~...&quot; -&gt; i -&gt; &quot;assa&quot; + &quot;~~~~&quot; + &quot;~&quot;e.g.: &quot;asa&quot; -&gt; &quot;...~a~s~a~...&quot; -&gt; i -&gt; &quot;asa&quot; + &quot;~~~&quot; + &quot;~&quot;-&gt; pr[i] = (char + &quot;~&quot;) * 2 + &quot;~&quot; -&gt; left = (i - (pr[i] - 1)) / 2 = (i + 1 - pr[i]) / 2;-&gt; right = left + pr[i] - 1; Calculate pr[i] This is the core part of the manacher’s algorithm e.g. 12345678910 r j c i r...---|------|-----------|-----------|------|---... pr[j]&apos; |----|----| |----|----| |--------|--------| |--------|--------| pr[j] |------------------|-----------|------| r - i-&gt; init: pr[i] = min(pr[j], r - i)-&gt; expand: pr[i] code 1234567891011121314151617181920212223int index = 0, maxPR = 1;int r = 0, c = 0; // r: right most radius; c: center;for(int i = 1; i &lt; n; i++) &#123; // init pr[i] if(r &gt; i) &#123; int j = 2 * c - i; // mirror pr[i] = Math.min(pr[j], r - i); &#125; // attempt to expand palindrome centered at i while(chars[i - pr[i]] == chars[i + pr[i]]) &#123; pr[i]++; &#125; // update center &amp; radius if(i + pr[i] &gt; r) &#123; r = i + pr[i]; c = i; &#125; // update longest palindromic substring if(maxPR &lt; pr[i]) &#123; maxPR = pr[i]; index = i; &#125;&#125; Complexity# Time: O(n) Description If pr[i] ≤ r – i, we set pr[i] to pr[i&#39;] which takes exactly 1 step. Otherwise we attempt to change the palindrome’s center to i by expanding it starting at the right edge, r. Extending r (the inner while loop) takes at most a total of n steps, and positioning and testing each centers take a total of n steps too. Therefore, this algorithm guarantees to finish in at most 2*n steps, giving a linear time solution. Calculate by upper bound and lower bound Worst case: characters are all the same &quot;aaa&quot; Each character will be accessed 5 times in each for loop Best case: characters are all the distinct &quot;abc&quot; Each character will be accessed 4 times in each for loop O(n) &lt;= T(worst) &lt;= T(avg) &lt;= T(best) = O(n) Mathematical formula Assume character i compare $f(i)$ times, and the current position r is $(r){i-1}$. So the new position of r is $(r){i}$ after comparison. Equation Situation 1: $i &gt; r_{i-1}$: $f(i) = r_{i} - i$ Situation 2: $i \leq r_{i-1}$: $f(i) = r_{i} - r_{i-1}$ / $0$ Total times: $f = \sum_{0}^{n-1} f(i) \leq \sum_{0}^{n-1} r_{i} - r_{i-1} = O(n)$ Space: O(n) for pr[] array Code# LeetCode 0005. Longest Palindromic Substring 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950class LongestPalindromicSubstring &#123; public String longestPalindrome(String s) &#123; if(s == null || s.length() == 0) return s; char[] chars = preprocess(s); int[] pr = new int[chars.length]; Arrays.fill(pr, 1); int index = 0, maxPR = 0; int c = 0, r = 0; for(int i = 1; i &lt; chars.length - 1; i++) &#123; // init pr[i] if(r &gt; i) &#123; pr[i] = Math.min(pr[2 * c - i], r - i); &#125; // attempt to expand palindrome centered at i while(chars[i - pr[i]] == chars[i + pr[i]]) &#123; pr[i]++; &#125; // update center &amp; radius if(i + pr[i] &gt; r) &#123; r = i + pr[i]; c = i; &#125; // update longest palindromic substring if(maxPR &lt; pr[i]) &#123; maxPR = pr[i]; index = i; &#125; &#125; // map to the original string int left = (index + 1 - maxPR) / 2; int right = left + maxPR - 1; return s.substring(left, right); &#125; private char[] preprocess(String s) &#123; char[] chars = new char[s.length() * 2 + 3]; Arrays.fill(chars, '~'); int i = 2; for(char c : s.toCharArray()) &#123; chars[i] = c; i += 2; &#125; chars[0] = '^'; chars[chars.length - 1] = '$'; return chars; &#125;&#125; Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/c096a6bd/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Algo</category>
      </categories>
      <tags>
        <tag>Algo</tag>
        <tag>Palindrome</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[穷查理宝典：查理·芒格的智慧箴言录]]></title>
    <url>%2Fposts%2F3533b0f5%2F</url>
    <content type="text"><![CDATA[[TOC] 中文版序言 鸣谢 序言：巴菲特论芒格 驳辞：芒格论巴菲特 导读 关于本书 第一章 查理·芒格传略 歌颂长者：芒格论晚年 忆念：晚辈谈芒格 第二章 芒格的生活、学习和决策方法 芒格进行商业分析和评估的“多元思维模型” 芒格的投资评估过程 投资原则检查清单 诚实是最好的策略 第三章 芒格主义：查理的即席谈话 我们成功的关键 论伯克希尔·哈撒韦 对巴菲特的评论 投资建议 谈市场 对企业管理层的批评 对基金管理企业的批评 对华尔街的批评 对会计的批评 对股票期权的批评 对金融机构和衍生品的警告 对律师、律师事务所和诉讼的批评 思维模型 对高等教育的批评 怎样变得幸福、富裕，以及其他建议 幽默 辛普森谈芒格 第四章 查理十一讲 第一讲 在哈佛学校毕业典礼上的演讲 第二讲 论基本的、普世的智慧，及其与投资管理和商业的关系 第三讲 论基本的、普世的智慧（修正稿） 第四讲 关于现实思维的现实思考？ 第五讲 专业人士需要更多的跨学科技能 第六讲 一流慈善基金的投资实践 第七讲 在慈善圆桌会议早餐会上的讲话 第八讲 2003 年的金融大丑闻 第九讲 论学院派经济学：考虑跨学科需求之后的优点和缺点 第十讲 在南加州大学 GOULD 法学院毕业典礼上的演讲 第十一讲 人类误判心理学 第五章 文章、报道与评论 如果说标准石油正在试图变得贪婪的话，那么它的表现可不够好 巴菲特的副手……查理·芒格和伯克希尔的主席所见略同 不那么沉默的合伙人 乐观主义在会计中没有容身之地 穷查理宝典：查理·芒格的智慧箴言录 [美] 彼得·考夫曼 | 上海人民出版社 Summarized by Zachary Completed on Jul. 12, 2018 中文版序言# 巴菲特说，股票本质上是公司的部分所有权，股票的价格就是由股票的价值——也就是公司的价值所决定的。 长期而言一定是由公司的价值决定的。 始终坚持凡事看长远。 在我看来，投资股市最大的风险其实并不是价格的上下起伏，而是你的投资未来会不会出现永久性的亏损。 查理思考问题总是从逆向开始。 我只想知道将来我会死在什么地方，这样我就永远不去那儿了。 查理在他漫长的一生中，持续不断地收集并研究关于各种各样的人物、各行各业的企业以及政府管治、学术研究等各领域中的著名失败案例，并把那些失败的原因排列成作出正确决策前的检查清单，这使他在人生、事业的决策上几乎从不犯重大错误。这点对巴菲特及伯克希尔 50 年业绩的重要性是再强调也不为过的。 任何一个问题在他看来都可以使用正确的方法通过自学完全掌握，并可以在前人的基础上进行创新。 所以他提倡要学习在所有学科中真正重要的理论，并在此基础上形成所谓的“普世智慧”，以此为利器去研究商业投资领域的重要问题。 一种不能够界定其边界的能力当然不能称为真正的能力。 一个人的成功并不是偶然的，时机固然重要，但人的内在品质更重要。 “手里只要有一本书，我就不会觉得浪费时间。” 查理虽然严于律己，却非常宽厚地对待他真正关心和爱的人，他不吝金钱，总希望他人能多受益。 查理一旦确定了做一件事情，他可以做一辈子。 《大学》曰：正心，修身，齐家，治国，平天下。 查理可以说是“商才士魂”的最好典范。 鸣谢# ￼查尔斯·赫尔曼·利亚曾经说：“一般人们都会承认，对一切图书的真正考验是在于它们给读者的生活和行为带来了怎样的影响。” 序言：巴菲特论芒格# 沃伦·巴菲特 从 1733 年到 1758 年，本杰明·富兰克林借由《穷理查年鉴》传播了许多有用且永恒的建议。他赞扬的美德包括节俭、负责、勤奋和简朴。在随后的两个世纪里，人们总是把本杰明 本杰明那篇《选择情人的建议》 首先，要找比你更聪明、更有智慧的人。 请他别炫耀他比你高明，这样你就能够因为许多源自他的想法和建议的成就而得到赞扬。 在你犯下损失惨重的错误时，他既不会事后诸葛亮，也不会生你的气 应该是个慷慨大方的人，会投入自己的钱并努力为你工作而不计报酬。 在漫漫长路上结伴同游时能不断地给你带来快乐。 “……最后，她们会感激不尽。” 驳辞：芒格论巴菲特# 查理·芒格 [插图] 我想那些认为我是沃伦的伟大启蒙者的想法里有好些神话的成分。他不需要什么启蒙。坦白说，我觉得我有点名不副实。沃伦确实有过发蒙的时候，因为他曾在本杰明·格拉汉姆手下工作 导读# 彼得·考夫曼 你将要踏上通往更好的投资和决策的非凡旅程。你也可能因此而对生活有更深的理解，这一切都要感谢查理·芒格——当代的本杰明·富兰克林——的风趣、智慧、演讲和作品。查理的世界观很独特，他用 lol·la·pa·loo·za 查理认为生活的决定比投资的决定重要。 来自各种学科的思维模型反复地出现，却从不关注“企业组合投资策略”、“beta 系数”或者“资产定价模型”，而是以基本的公理、人类的成就、人性的弱点和通往智慧的崎岖道路为中心。 关于本书# 重复是教导的核心。 第一章 查理·芒格传略# 迈克尔·布洛基 最接近把一个人的生活重新过一遍的事情是回忆那种生活，并用文字记录下来，让这种回忆尽可能地长久。——本杰明·富兰克林 [插图] 伯克希尔·哈撒韦的辉煌故事背后，是两位 我这辈子遇到的聪明人（来自各行各业的聪明人）没有不每天阅读的——没有，一个都没有。 查理学到这样的道理：只要相互支持，芒格家族就能渡过美国历史上最糟糕的经济崩溃。 不会成为寓言中那个‘拿着铁锤的人’。 专注于当前的任务，控制支出。 这项投资对双方都有利：查理获得了宝贵的经商知识，而他的客户则享受到了一位精通领域不仅限于法律的律师的先见之明。 查理论吸引客户：“关键是把手头的事情做好……把手头的事情做好。把已经拥有的客户照顾好，其他的自然会来找你。” 理性 他们之间不存在正式的合伙关系或契约关系——这种纽带是由两个相互理解、相互信赖的中西部人的一次握手和拥抱创造出来的。 他总是提醒他们，“别只看到钱”，要“选择那些你愿意与他交朋友的客户”。 专注于替客户解决最重要的问题。 致力于理解和解决客户的问题。 最好是将这些概念和提出它们的伟人的生活与个性联系起来。 ‘已逝的伟人’交朋友，这听起来很好玩，但如果你确实在生活中与那些有杰出思想的已逝的伟人成为朋友，那么我认为你会过上更好的生活，得到更好的教育。这种方法比简单地给出一些基本概念好得多。” 总是会有人在某些方面比你优秀。你必须先成为下属，然后才能成为领导。人们应该学会扮演各种角色。 “……能够给别人带来更多价值的工作” 歌颂长者：芒格论晚年# 受西塞罗《论老年》启发1744 年，本杰明·富兰克林尚未成名，他是费城一个从事印刷业的默默无闻的商人。出于和商业无关的爱好，他在当年出版了一本书，书中包括了西塞罗《论老年》的译文 他背后的基本哲学观点是一种深刻而现实的对人本性的怀疑精神， 西塞罗虽然知识渊博，但他还是认为，只要一息尚存，就应该不断学习，自我提高。 西塞罗指出，试图解决基本问题的哲学研究是一种理想活动，适合所有年纪的人，哪怕是行将就木的老年人。 在西塞罗看来，如果你的生活方式是正确的，那么你到了晚年只会比年轻时更加幸福。 牛虻式的人物很少受到世人的欢迎，有少数例外者，是因为他们和萧伯纳一样，都将智慧和道德说教结合在一起。 晚年的最佳保护铠甲是一段在它之前被悉心度过的生活。——查理·芒格 忆念：晚辈谈芒格# 小查理·芒格如是说 大约在我 15 岁的时候，我们全家去太阳谷滑雪；假期的最后那天，爸爸和我冒着风雪开车出去，他绕了十分钟的路去给我们开的那辆红色吉普车加油。当时他正争分夺秒地让我们全家 1. 把工作一次就做好 2. 承担责任 思考时能够抵制绝大多数的外界干扰 经久耐用永远是排在首位的优点，此外还有庄重和正统。 查理有把事情彻底弄清楚的欲望。 遇事喜欢穷根究底，无论该事跟他有密切关系与否。 他知道如何聚精会神、全神贯注地钻研一个问题而不受外界的干扰。 查理陷入沉思的时候，他往往对周遭的一切视若无睹，甚至会忽略社交礼仪。 “找出你最擅长的事情，然后持之以恒、乐此不疲地去把它做好。” 用简单的描述来抓住要点的本领。 第二章 芒格的生活、学习和决策方法# 凡事往简单处想，往认真处行。——查理·芒格 [插图] 虽然主要是靠自学，本杰明·富兰克林在新闻、出版、印刷、慈善、公共服务、科学、外交和发明等不同领域都取得了惊人的成功 凡事往简单处想，往认真处行。——查理·芒格 勤奋工作的劲头，还有他永不满足的求知欲望和从容不迫的行为方式。 他头脑聪明，乐于接受新事物，所以每当选择新的钻研领域，他很快就能融会贯通。 目标是展示查理方法的基本轮廓 呈现查理在考虑投资时运用的思维过程，然后再扼要地指明他的投资指导方针 如果我们试图理解一样看似独立存在的东西，我们将会发现它和宇宙间的其他一切都有联系。——约翰·缪尔 实际上，经济确实很像生态系统，它们之间有很多相似之处。 在商业世界，我们往往会发现，取胜的系统在最大化或者最小化一个或几个变量上走到近乎荒谬的极端 芒格进行商业分析和评估的“多元思维模型”# 芒格进行商业分析和评估的“多元思维模型” 必须知道重要学科的重要理论，并经常使用它们——要全部都用上，而不是只用几种。 在手里拿着铁锤的人看来，世界就像一颗钉子。 对他打算要投资的公司的内部经营状况及其所处的、更大的整体“生态系统”作出全面的分析。 它们是一个收集和处理信息、并依照信息行动的框架。 糅合了许多来自各个传统学科的分析工具、方法和公式 简单是长期努力工作的结果，而不是起点。——弗里德里克·迈特兰德 你的头脑里形成一种思维模型的复式框架。 往就会放弃去做它。——查理·芒格 查理试图发现与他的每个投资项目相关的宇宙，他所用的方法是牢牢地掌握全部——或者至少大部分——候选待投资公司内部及外部环境相关的因素。只要得到正确的收集和组织，他的多 工程学的冗余备份模型，数学的复利模型，物理学和化学的临界点、倾覆力矩、自我催化模型，生物学的现代达尔文综合模型，以及心理学的认知误判模型。 当面临要么改变想法、要么证明无需这么做的选择时，绝大多数人都会忙于寻找证据。——约翰·肯尼斯·加尔布雷斯 如果有了更好的工具（观念或方法），那还有什么比用它来取代你较为没用的旧工具更好的呢？ “lollapalooza 效应” 必须拥有各种模型，你必须弄清楚各种模型的相互关系以及它们的效应。 这种“简单”惟有在到达理解的漫长旅途的终点——而非起点——才会到来。 未雨绸缪、富有耐心、律己严厉和不偏不倚是最基本的指导原则。 不要非常频繁地进行买卖。 愿意将大比例的资金投给个别“受关注”的机会。 [插图]《耐心的农夫》 （Patience Escalier）1888 年，梵高。耐心：“不厌倦等待地等待”的艺术“你看那些对冲基金——你认为他们能够等待吗？他们不知道怎么等待！在我个人的投资组合里，我 耐心：“不厌倦等待地等待”的艺术 有性格的人才能拿着现金坐在那里什么事也不做。我能有今天，靠的是不去追逐平庸的机会。——查理·芒格 进行投资时，我向来认为，当你看到某样你真正喜欢的东西，你必须依照纪律去行动。 “我只想知道我将来会死在什么地方，这样我就可以永远不去那里啦。” 拥护阿尔伯特·爱因斯坦的告诫：“科学理论应该尽可能简单，但不能过于简单。” 菲利浦·费舍尔（1907-2004），《怎样选择成长股》 格拉汉姆的《聪明的投资者》 对于股票的价值，要亲自去作出客观的判断，不能依赖金融市场常见的躁狂抑郁的行为。 他把人类作出错误判断的某些心理因素当做能用于判断投资机会的最重要的思维模型 双轨分析的习惯 首先，理性地看，哪些因素真正控制了涉及的利益；其次，当大脑处于潜意识状态时，有哪些潜意识因素会使大脑自动以各种方式形成虽然有用但往往失灵的结论？ 理性分析法 评估那些造成潜意识结论——大多数是错误的——的心理因素 本杰明·格拉汉姆 双轨分析 实际的使用价值 你要寻找的是标错赔率的赌局。这就是投资的本质。你必须拥有足够多的知识，才能知道赌局的赔率是不是标错了。这就是价值投资。 我们通过预测哪些人和公司会逆流游泳来强调可知因素。我们并不预测水流的波动。 芒格的投资评估过程# “最重要的观念是把股票当成企业的所有权，并根据它的竞争优势来判断该企业的持有价值。如果该企业未来的贴现现金流比你现在购买的股票价格要高，那么这个企业就具有投资价值。当你占据优势的时 芒格的投资评估过程 最重要的观念是把股票当成企业的所有权，并根据它的竞争优势来判断该企业的持有价值。 如果该企业未来的贴现现金流比你现在购买的股票价格要高，那么这个企业就具有投资价值。 小心翼翼地划出他的能力圈。 三个选项：可以投资，不能投资，太难理解。 容易理解的、有发展空间的、能够在任何市场环境下生存的主流行业。 重要学科的重要理论 如果说我们有什么本事的话，那就是我们能够弄清楚我们什么时候在能力圈的中心运作，什么时候正在向边缘靠近。——沃伦·巴菲特 如果你确有能力，你就会非常清楚能力圈的边界在哪里。如果你问起（你是否超出了能力圈），那就意味着你已经在圈子之外了。——查理·芒格 对待那些财务报告 至多是正确地计算企业真实价值的起点，而不是终点。 劳动力、供应商和客户关系的状况，技术变化的潜在影响 竞争优势和劣势，定价威力，环境问题，还有很重要的潜在风险变为现实的可能性 根据他自己对现实的认识，重新调整财务报表上所有的数字 明确你的能力范围 在现实世界，弄清楚你何时是“马克斯·普朗克”、何时是“司机”是很关键的。如果无法称职地回答下一个问题，那么你就缺乏真正的本领，非常有可能处在你的“能力圈”之外。 我们想要护城河每年变宽。那并不意味着今年的利润将会比去年的多，因为有时候这是不可能的。 查理认为，一个企业的竞争优势是该企业的“护城河”，是保护企业免遭入侵的无形沟壕。 对比价值（你得到的）和价格（你付出的） （购买）股价公道的伟大企业比（购买）股价超低的普通企业好。 独立思考 你是正确的或错误的，并不取决于大家是否同意你。你是正确的，是因为你的资料和推理是正确的。——本杰明·格拉汉姆 做生意时，最困难的事情是先让你自己思考，再让别人思考。——哈维·费尔斯通 查理不会只因为一件事情是我说的而接受它，尽管世界上大多数人会这样。——沃伦·巴菲特 别愚弄你自己，记住，你是最容易被自己愚弄的人。——理查德·费曼 价值评估到最后变成了一种哲学的评估，而不是数学的衡量。 安全边际 安全边际总是取决于付出的价格。 工程学的“冗余思维模型”中获益。 正确地评估股票的价值之后，还必须在正确的时间买入 检查清单上的项目如下：目前的价格和成交量是多少？交易行情如何？经营年报何时披露？是否存在其他敏感因素？是否存在随时退出投资的策略？用来买股票的钱现在或将来有更好的用途吗？手头上有足够的流动资金吗？或者必须借贷？这笔资金的机会成本是多少？诸如此类。 他们花在学习和思考上的时间，比花在行动上的时间要多，这种习惯绝对不是偶然的。 每个行业真正的大师身上所体现出来的纪律和耐心的混合物：一种绝不妥协的“把手上的牌打好”的决心。 世界级的桥牌大师理查德·萨克豪瑟那样，查理在意的并不是他本人是否能赢牌，而是是否能把手上的牌打好。 糟糕的结果是可以接受的（因为有些结果并不在他们的掌握之中），但准备不足和仓促决策是不可原谅的，因为这些因素是可以控制的。 自信的来源并非谁或者多少人同意或反对他的观点，而是客观地看待和衡量自己的能力。 良好的个性素质——自律、耐心、冷静、独立——扮演了重要角色。 你若想在任何领域拥有竞争力，就必须熟练地掌握该领域的方方面面，不管你是否喜欢这么做，这是人类大脑的深层结构决定的。——查理·芒格 如果一个人的全部信息都局限于他的工作领域，那么他的工作不会做得很好。一个人必须有眼光，他可以从书籍上或者人们身上——最好是两者兼有——培养眼光。——哈维·费尔斯通 投资就像打棒球，你要让记分牌上的得分增加，就必须盯着球场，而不是盯着记分牌。——沃伦·巴菲特 “竞争性毁灭”问题 研究为什么有些事物能够适应环境，存活下来，甚至在经过很长的时间之后占据统治地位。 有些是通过消灭竞争对手而达到繁荣的企业 有些是通过合作而兴旺的企业 遇到不同的公司，你需要检查不同的因素，应用不同的思维模型。 价格是你付出的，价值是你得到的 “所有聪明的投资都是价值投资——获得比你的付出更多的东西。你必须先评估一个企业的价值，然后才能评估它股票的价值。” 投资原则检查清单# “聪明的飞行员即使才华再过人，经验再丰富，也决不会不使用检查清单。”我们现在已经了解了查理的总体思维方式和他的投资思维方式。为了继续关注“他是如何做到的”，我们将会使用他推崇的“检 投资原则检查清单 你需要的不是大量的行动，而是大量的耐心。你必须坚持原则，等到机会来临，你就用力去抓住它们。 “理解复利的魔力和获得它的困难是理解许多事情的核心和灵魂。” 人的任务不是去看清远处模糊的东西，而是去做好身边清楚的事情。 诀窍就在于不断学习，而且我不认为那些不享受学习过程的人能够不断地学习。 不停地寻找更好的思维方式的追求 丝不苟的准备进行“预付”的意愿 跨学科研究模式 它来自查理最基本的行为守则，最根本的人生哲学：准备、纪律、耐心、决心。 那种因芒格而闻名的 lollapalooza 效应 我们偏向于把大量的钱投放在我们不用再另外作决策的地方。如果你因为一样东西的价值被低估而购买了它，那么当它的价格上涨到你预期的水平时，你就必须考虑把它卖掉。那很难。但是，如果你能购买几个伟大的公司，那么你就可以安坐下来啦。 诚实是最好的策略# [插图]比尔·格罗斯 由于深受故乡（美国中西部）文化的影响，查理·芒格向来是诚实和正直的同义词。正如查理曾经说过的：“做正确的事情能给个人的品格和事业带来很大的好处。”查理有多么诚实和正 诚实是最好的策略 我认为保持良好的记录是非常重要的。如果你从一开始就能够在诸如诚实这样简单的事情上拥有完美的记录，你将会在这个世界上取得很大的成功。——查理·芒格 能力会让你到达巅峰，但只有品德才能让你留在那里。 更多的时候，我们由于固守道德而赚到更多的钱。 本杰明·富兰克林是对的。他并没有说诚实是最好的道德品质，他说诚实是最好的策略。 第三章 芒格主义：查理的即席谈话# （2001 年至 2006 年在伯克希尔·哈撒韦公司和西科金融公司年会上的谈话摘录）惠特尼·提尔逊 智者的聪慧和长者的经验，也许能够通过语录得以保存。——埃萨克·狄斯雷 我没有什么要补充的。”这九个字已经变成了查理的标志 一个朋友参加了该大会，据他说，“沃伦大概播了六次这段录音，每次都会露出顽皮的神色”。[插图]我和一个眼光极准的传奇人物合作了许多年，我总是很惊讶地发现，原来人们只要掌握和不停地应用所有明显而且容易学习的 我们成功的关键# 我们成功的关键 靠的是记住浅显的，而不是掌握深奥的。我们从来不去试图成为非常聪明的人，而是持续地试图别变成蠢货 路易斯·文森狄的规则：说真话，你将无须记住你的谎言。 论伯克希尔·哈撒韦# 一个人可以做的最聪明的事之一是调低投资预期 只能投资那些竞争更为激烈的领域 所有资金庞大的企业最终都会发现增长变得越来越难，从而将会发现回报率变得越来越低。 我们不会像别人那样盲目扩张。 避免不合理的风险和负债的前提下，努力使它保持合理的增长率 我们从来不试图为收购而收购——我们等着那些不用多想也知道会成功的机会。 到处寻找值得收购的公司。 每年购买的企业只有一家或者两家。 可以说，我们不停在找。 我认为激情比头脑的能力更加重要。 他们的企业中应该有什么样的企业文化，都由他们自行决定，我们并不会干预。 有些美德是所有伯克希尔的附属公司都有的。我们并不创造这些美德——我们选择那些已经拥有这些美德的公司。我们只是不把它搞坏。我们把权力分散到几乎全面退位的程度。 他们管理他们的企业不设置任何障碍。 不用把 25% 的时间浪费在各种他们不喜欢的活动上。 我们并不回避合力，只是回避那些对合力的宣称。 作出正确的人事决定 解雇职员的次数少得令人吃惊 不是因为我们太心软或者太愚蠢，这是因为我们更加聪明和更加幸运。 保险合同的签署和赔付之间有很大的时间差，所以投保人必须评估保险公司未来的支付意愿和支付能力。 用很低的成本让浮存金以可观的速度增长几乎是不可能的任务 流动性给我们带来了这些疯狂的泡沫，所以它的问题和好处一样多。 管理费用很低 投资集中度比一般企业高得多 罗伯特·哈格斯特朗的这本著作 对巴菲特的评论# 关键是拥有许多优秀的企业。 查理明白要找到真正好的东西很难。所以，就算你 90% 的时间都在说“不”，你也不会错失太多的东西。 投资建议# 投资建议 性格、耐心和求知欲的重要性 集中投资 我们的游戏是，当好项目出现时，我们必须能够认出来，因为好项目并不会经常出现。机会只眷顾有准备的人。 ‘一件事情如果不值得做，就不值得把它做好。’ 我们的投资规矩是等待好球的出现。 分散投资 认为投资应该越分散越好是一种发疯的观念。 我们认为几乎所有好投资的分散程度都是相对较低的。 如果你把我们 15 个最好的决策剔除，我们的业绩将会非常平庸。你需要的不是大量的行动，而是极大的耐心。你必须坚持原则，等到机会来临，你就用力去抓住它们。 坐等投资法 我们偏向于把大量的钱投在我们不用再另作决策的地方。 这样的错误可以分为两类：1. 什么也不做，沃伦称之为“吮吸我的大拇指”；2. 有些股票本来应该买很多，但是只买了一点。 当股价下跌时买进 诱人的机会总是转瞬即逝的 小投资者的机会 如果我是你，我就会买些很小的股票，寻找一些罕见的错误定价的机会，但这类机会的确是很少。 股票卖空 护城河和持续的竞争优势 旧的护城河正在被填平，而新的护城河比以前更难预测，所以事情变得越来越难。 学习过程 关键是自律、勤奋和练习。 能力圈及其边界 三个选项：可以，不行，太难。 你需要做的，只是寻找一块特殊的能力领域，并把精力放在那里面就可以了。 如果你确有能力，你就会非常清楚你能力圈的边界在哪里。 资本成本和机会成本 只是用我们拥有的资本尽量去做最聪明的事情而已。 人们作出决定的依据是机会成本——也就是说，真正重要的是否有其他选择。 预测的价值 首次公开募股（IPO） 对我们来说，新股要么发行规模太小，要么太过高科技 谈市场# 谈市场 股票、伦勃朗和泡沫 股票有点像债券，对其价值的评估，大略以合理地预测未来产生的现金为基础。 债券比股票理性得多。 未来的市场回报率 如果股市未来的回报率能够达到 15%，那肯定是因为一种强大的“伦勃朗效应”。这不是什么好事。 日本股市的市盈率高达 50 到 60 倍。这导致了长达十年的经济衰退。 投资者应该调低他们的预期。 垃圾债市场绝对是一片混乱。 当前的市场环境（2004 年 5 月） 监控宏观的经济趋势和变化 我觉得都没有用。我只是密切关注伯克希尔的各家子公司，常常阅读商业报纸和杂志而已，由此我能接触到大量宏观层面的东西。我发现我只要这么做，就足以了解宏观层面正在发生什么情况了。 对企业管理层的批评# 对企业管理层的批评 篡改盈利数字和做假账 如果你把葡萄干和大便搅在一起，你得到的仍然是大便。 逮到行为不轨的管理人员 公司治理 对基金管理企业的批评# 有缺陷的激励机制 没有增加价值 对华尔街的批评 # 对会计的批评# 对会计的批评 会计报表是衡量业绩的标尺。它们本身必须成为高质量的标尺，才能为使用者提供良好的服务。报表必须便于阅读和理解。它们必须具备不可动摇的连贯性。 不现实的假设 对股票期权的批评# 对股票期权的批评 股票期权不但会增加企业的成本，还会稀释股权。 对金融机构和衍生品的警告# 对金融机构和衍生品的警告 金融机构的风险 当金融机构想努力表现时，我们就会感到紧张。 衍生品的长尾 抓住猫尾巴，把猫倒提起来的人，将会学到他在别的地方学不到的教训。——马克·吐温 各种形式的衍生品和保险产品的本质决定了它们拥有风险的“长尾”。可能要经过好几年，才能测算某项交易的亏损或收益。 看《诚信的背后：华尔街圈钱游戏的真相》（又名《泥鸽靶》） 揭露了华尔街规模最大、声望最佳的公司之一的衍生品交易黑幕。 对律师、律师事务所和诉讼的批评# 律师事务所的道德沦丧 对于为恶棍辩护并帮助他们逃脱法律的制裁，我从来没有哪怕一丁点的兴趣。但很多人认为，约翰尼·科克兰做得很漂亮（帮助 O.J. 辛普森开脱）。律师搞砸了 对律师、律师事务所和诉讼的批评 侵权赔偿制度 坏人一旦变得有钱，他们将会获得巨大的政治力量，你就无法阻止他们干坏事了，所以关键是把这类事情扼杀在萌芽状态。 思维模型# 思维模型 多元思维模型的重要性 遇到不同的公司，你需要检查不同的因素，应用不同的思维模型。 不自欺的精神 大量的人很荒唐地死抱着错误的观念不放。凯恩斯说：“介绍新观念倒不是很难，难的是清除那些旧观念。” 常（非常）识 拥有常识不但意味着有能力辨认智慧，也意味着有能力拒绝愚蠢。 但光看书还不够：你必须拥有一种能够掌握思想和做合理事情的性格。大多数人无法掌握正确的思想，或者不知道该怎么应用它们。 亨利·辛格尔顿 （Henry E.Singleton，1916-1999） 亨利·辛格尔顿拥有美国商界最杰出的经营和资产配置记录 对高等教育的批评# 致命的无关联性 怎样变得幸福、富裕，以及其他建议# 生活和生意上的大多数成功来自于你知道应该避免哪些事情：过早死亡、糟糕的婚姻等等。 满足于你已经拥有的 提防妒忌 如何致富 如何找到好配偶 惟一的最佳方法是你首先必须值得拥有好配偶，因为从定义上来说，好配偶可绝不是傻瓜。 阅读的重要性 要是想让人们认识有用的伟大概念，最好是将这些概念和提出它们的伟人的生活和个性联系起来。 减少物质需求 慈善 避免欠债 公立学校的衰落 幽默# 如果你把葡萄干和大便搅在一起，你得到的仍然是大便。 如果你无法理解它，你可以把问题交给一位比你聪明的朋友呀。 如果你取得了很高的地位，那么你必须遵守某些行为规则。 辛普森谈芒格# 毫不妥协的耐心，自律，自控——无论遭受多大的压力，查理从来不会动摇或者改变他的原则。 第四章 查理十一讲# 查理·芒格决不怯于提供坦率的批评和有益的建议。每当他就某个问题发表看法，不管这个问题是腐败的商业行为、高等教育的失败，还是金融丑闻，他都会毫无保留地说出自己的看法。这并不意味着他这 第一讲 在哈佛学校毕业典礼上的演讲# 1986 年 6 月 13 日 [插图] 既然贝里斯福德校长在最老、服务年限最长的董事中挑选出一人来作毕业典礼演讲，那么演讲者有必要向大家交待两个问题：1. 为什么作出这种选择？ 确保痛苦生活的处方包括：1. 为了改变心情或者感觉而使用化学物质；2. 妒忌，以及3. 怨恨。 约翰逊说得好，他说生活本已艰辛得难以下咽，何必再将它塞进怨恨的苦涩果皮里呢。 芒格另开的四味药。 第一，要反复无常，不要虔诚地做你正在做的事。 ‘在生命没有结束之前，没有人的一生能够被称为是幸福的。’ 我为痛苦生活开出的第二味药是，尽可能从你们自身的经验获得知识，尽量别从其他人成功或失败的经验中广泛地吸取教训，不管他们是古人还是今人。 人类常见的灾难全都毫无创意 经验是一所好学校，但傻瓜却不会从别人那里学到经验，并且，能在别人那里学到经验的人很少；因为这句话是千真万确的：我们可以提供建议，但无法提供行为。 避免广泛吸取知识的另一种做法是，别去钻研那些前辈的最好成果。 “如果说我比其他人看得更远，那是因为我站在巨人的肩膀上。” 为你们的痛苦生活开出的第三味药是，当你们在人生的战场上遭遇第一、第二或者第三次严重的失败时，就请意志消沉，从此一蹶不振吧。 最后一味药是，请忽略小时候人们告诉我的那个乡下人故事。曾经有个乡下人说：“要是知道我会死在哪里就好啦，那我将永远不去那个地方。”大多数人和你们一样，嘲笑这个乡下人的无知，忽略他那朴素的智慧。 许多难题只有在逆向思考的时候才能得到最好的解决。 总是致力于寻求证据来否定他已有的理论，无论他对这种理论有多么珍惜，无论这种理论是多么得之不易。 与之相反，大多数人早年取得成就，然后就越来越拒绝新的、证伪性的信息，目的是让他们最初的结论能够保持完整。 好奇、专注、毅力和自省 最后，尽可能地减少客观性，这样会帮助你减少获得世俗好处所需作出的让步以及所要承受的负担，因为客观态度并不只对伟大的物理学家和生物学家有效。 1. 在生活中，可靠是至关重要的；2. 虽然量子力学对于绝大多数人而言是学不会的，但可靠却是几乎每个人都能很好地掌握的。 如果 避开生活的圈套 以吉卜林的方式 如果你能保持冷静，当你身边的人们 都变得疯狂，纷纷指责你，如果你能相信自己，当所有人怀疑你 但且让他们怀疑去吧，如果你遭等待，却不因等待而疲倦，或者遭受欺骗，却不用谎言回敬，或者遭到憎恨，却不用憎恨反击，能够不得意忘形，也能够不巧言令色…… 如果你能与凡人交谈，且彬彬有礼，或与国王同行——而不奴颜婢膝，如果仇敌和密友都无法伤害你；如果你在乎每个人，但不会缺了谁就不行，如果你在想发泄愤怒的那一分钟 去进行六十秒的跑步，大地以及大地上的万物都将属于你，而更重要的是，你将是真正的男人，我的孩子！——摘自查理向来欣赏的诗歌《如果》 第二讲 论基本的、普世的智慧，及其与投资管理和商业的关系# 1994 年 4 月 14 日，南加州大学马歇尔商学院 [插图] 今天，我想对你们的学习课题做点小小的变动——今天的主题是选股艺术，它是普世智慧艺术的一个小分 “祖母的规矩”——这个规矩来自于祖母的智慧，她说你们必须先吃完胡萝卜，然后才准吃甜点。 第一条规则是，你必须拥有多元思维模型——因为如果你只能使用一两个，研究人性的心理学表明，你将会扭曲现实，直到它符合你的思维模型，或者至少到你认为它符合你的模型为止。 模型必须来自各个不同的学科——因为你们不可能在一个小小的院系里面发现人世间全部的智慧。 数学 复利原理 基本的排列组合原理 要掌握排列组合原理并不难。真正困难的是你在日常生活中习惯于几乎每天都应用它。费马—帕斯卡的系统与世界运转的方式惊人地一致。 定量分析方法是他们所谓的“决策树理论” 大脑的神经系统是经过长期的基因和文化进化而来的。它并不是费马—帕斯卡的系统。它使用的是非常粗略而便捷的估算。 自动地根据决策树理论和基本的排列组合原理来思考问题。 会计学 会计是从事商业活动的语言。 心理学 你对智慧感兴趣，那么应该记住这个规矩——就像记住基本的排列组合原理一样。 交流必须遵守“五何”原则——你必须说明何人因何故在何时何地做了何事。 能够将一堆模式的知识组合起来，回答一个又一个为什么，你就能够更好地思考 如果你告诉人们事情的时候，总是告诉他们原因，他们就能更深刻地理解你说的话，就会更加重视你说的话，也会更倾向于听从你说的话。就算他们不理解你的理由，他们也会更倾向于听你的话。 把“为什么”讲清楚仍是一种明智的做法。 哪些思维模型最可靠呢？ 来自硬科学和工程学的思维模型是地球上最可靠的思维模型。 工程学的质量控制理论 高斯分布 工程学里面的后备系统 断裂点理论 临界质量概念 第二种可靠的思维模型来自生物学 / 生理学 接下来当然就是心理学 人类的感知器官有时候会短路。大脑的神经线路并非总是畅通无阻的，也不拥有无穷多的线路。所以那些懂得如何利用这种缺点、让大脑以某种错误方式运转的人能够使你看到根本不存在的东西。 认知功能，它和感知功能不同 个使用工具的人应该了解它的局限，同样道理，一个使用认知工具的人也应该了解它的局限。 心理学的基础部分——我称之为误判心理学——是极其重要的知识。它包括了大约 20 个小原则。 我现在使用一种双轨分析。 首先，理性地看，哪些因素真正控制了涉及的利益 其次，当大脑处于潜意识状态时，会自动形成哪些潜意识因素 一种方法是理性分析法 认准真正的利益，找对真正的机会 另一种方法是评估哪些因素造成潜意识结论——大多数情况下是错误的结论。 微观经济学 实际上，经济确实很像生态系统。 跟生态系统的情况一样，有狭窄专长的人能够在某些狭窄领域中做得特别好。动物在合适生长的地方能够繁衍，同样地，那些在商业世界中专注于某个领域——并且由于专注而变得非常优秀——的人，往往能够得到他们无法以其他方式获得的良好经济回报。 规模优势理论的本质是，你生产的商品越多，你就能更好地生产这种商品。那是个巨大的优势。它跟商业的成败有很大的关系。 打算建造一个油罐，很明显，随着油罐的增大，油罐表面所需的钢铁将会以平方的速率增加，而油罐的容量将会以立方的速率增加。 如果你们的产量不够大，你们也用不起电视广告——那是当时最有效的宣传技巧。 规模优势可能是一种信息优势。 因为拥有了很高的知名度而获得了规模优势——你们也可以称之为信息优势。 另外一种规模优势来自心理学。心理学家使用的术语是“社会认同”（Social Proof）。 互联网的情况而言，改变是社会的朋友。但一般来说，不改变才是投资者的朋友。 喜欢像口香糖这样稳定的企业，努力把生活中更多不可预料的事情留给其他人。 社会认同现象使商家可以极大地拓宽产品的销售渠道，这种优势自然是很难获得的。 全球性的销售渠道——这是大企业慢慢建立的——是非常大的优势 如果你们在这方面拥有足够的优势，别人想要动摇你们的地位是很难做到的。 规模优势还有另外一种。有些行业的情况是这样的，经过长期的竞争之后，有一家企业取得了压倒性的优势。 慢慢出现赢家通吃的局面。那是一种独特的规模优势现象。 这些巨大的规模优势使企业内部能够进行更为专门的分工。每个员工因此能够把本职工作做得更好。 杰克·韦尔奇到通用电气时，他说：“让它见鬼去吧。我们必须在每个我们涉足的领域做到第一或者第二，否则我们就退出。我不会在乎要解雇多少人，卖掉哪些业务。如果做不到第一或者第二，我们宁可不做。” “在成为领先者之前，成功是发展你自己。当你成为领先者，成功是帮助其他人发展。” “把计划搞清楚。请一些人来完成它，给他们大量的钱。这向来是成功的不二法门。” “用各种各样的方式发现人才，我总是认为：‘你遇到的每个人都是另一次面试。’” “经商要诀：永远别让任何人挡在你和你的顾客或者供应商之间。这些关系需要很长时间才能培养起来，而且非常宝贵，失去的话太可惜了。” 规模太大也有劣势。 它们之所以能够打败我们，是因为它们更加专业。 跟生态系统相同，你专注的领域越小越好。 所以缩小规模、加强专业化程度能够给你带来巨大的优势。大未必就是好。 大公司并非总是赢家——企业变大之后，就会出现官僚机构的作风 出现了多重管理层，以及不必要的相关成本。 大规模的弊端向来在于它会导致庞大、笨拙的官僚机构 “他们假装给薪水，我们假装在工作。”所以人们开始找对策。他们设立了分散的小单位以及很棒的激励和培训计划。例如，大企业通用电气就用惊人的技巧和官僚作风斗争。但那是因为通用电气的领袖是个天才和激情的结合 另外一条心理学原则——巴甫洛夫联想 如果人们说了你确实不想听的话——也就是让你不高兴的话——你会自然而然地生出抵触情绪。你必须训练自己摆脱这种反应。 你可以向每个人学习。 更多的可能来自我对马路对面（竞争对手）做法的研究。 为什么某些市场的竞争在投资者看来比较理性，能给股东带来很多收益，而有些市场的竞争却是破坏性的，摧毁了股东的财富。 专利权、商标权和特许经营权 微观经济学的伟大意义在于让人能够辨别什么时候技术将会帮助你，什么时候它将会摧毁你。 他们并没有进行第二步分析——也就是弄清楚有多少钱会落在你手里，多少钱会流向消费者。 你不断地购买一些三年内可以收回成本的新玩意，这么做了 20 年之后，你获得的年均回报率只有不到 4%。 并不是说那些机器不好，只是节省下来的钱没有落到你手里。成本确实降低了，但那个购买设备的家伙并没有得到成本降低带来的好处。 当新的行业出现时，先行者会获得巨大的优势。 收款机是对文明社会的重大贡献。 在漫长的人生中，你只要培养自己的智慧，抓住一两次这样的好机会，就能够赚许许多多的钱。 沃伦和我都不觉得我们在高科技行业拥有任何大的优势。 正视我们个人的知识缺陷。 每个人都有他的能力圈。要扩大那个能力圈是非常困难的。 所以你们必须弄清楚你们有什么本领。如果你们要玩那些别人玩得很好而你们一窍不通的游戏，那么你们注定会一败涂地。那是必定无疑的事情。你们必须弄清楚自己的优势在哪里，必须在自己的能力圈之内竞争。 股市的本质是什么？” 有效市场理论 市场既是部分有效的，也是部分低效的。 如果你停下来想一想，会发现彩池投注系统其实就是一个市场。每个人都去下注，赔率则根据赌注而变化。股市的情形也是这样的。 他投注的次数不多，只在发现定错价格的赌注时才会出手。通过这么做，在全额支付了马会的费用——我猜差不多是 17%——之后，他还是赚了许多钱。 但如果人们努力在世界上寻找定错价格的赌注，上天有时会让他们找得到。聪明人在发现这样的机会之后会狠狠地下注。他们碰到好机会就下重注，其他时间则按兵不动。就是这么简单。 只要看看伯克希尔·哈撒韦及其累积起来的数千亿美元就知道了，那些钱大部分是由十个最好的机会带来的。 “我用一张考勤卡就能改善你最终的财务状况；这张卡片上有 20 格，所以你只能有 20 次打卡的机会——这代表你一生中所能拥有的投资次数。当你把卡打完之后，你就再也不能进行投资了。” “在这样的规则之下，你才会真正慎重地考虑你做的事情，你将不得不花大笔资金在你真正想投资的项目上。这样你的表现将会好得多。” 决定行为的是决策者的激励机制，这是人之常情。 所以制定正确的激励机制是非常、非常重要的教训。 市场的有效性跟彩池投注系统是一样的——热门马比潜力马更可能获胜，但那些把赌注押在热门马身上的人未必会有任何投注优势。 许多人看中的是一种叫做“行业轮换”的标准技巧。你只要弄清楚石油业什么时候比零售业表现得更好就行了，诸如此类的。 私人拥有价值的概念，也就是说，应该考虑如果整个企业出售（给私人拥有者）的话，能够卖多少钱。 格拉汉姆的话来说，就拥有了巨大的安全边际。 他的理论最厉害的部分是“市场先生”的概念。格拉汉姆并不认为市场是有效的，他把市场当成一个每天都来找你的躁狂抑郁症患者。 好好把握少数几个看准的机会比永远假装什么都懂好得多。如果从一开始就做一些可行的事情，而不是去做一些不可行的事情，你成功的几率要大得多。 伯克希尔·哈撒韦的方法是依据现实的投资问题而不断调整变化的。 长远来看，股票的回报率很难比发行该股票的企业的年均利润高很多。 窍门就在于买进那些优质企业。这也就买进了你可以设想其惯性成长效应的规模优势。 在它们规模很小的时候就买进它们的股票。 有机会可以投资一家有着优秀管理者的优秀企业。 然而一般来说，把赌注押在企业的质量上比押在管理人员的素质上更为妥当。换句话说，如果你们必须作选择的话，要把赌注押在企业的发展前景上，而不是押在管理者的智慧上。在非常罕见的情况下，你会找到一个极其出色的管理者，哪怕他管理的企业平平无奇，你们对他的企业进行投资也是明智的行为。 税收的效应 长期持有一些伟大公司的股票，光是少交的所得税就能让你增添很多财富。 过度地追求减少纳税额是企业犯下大错的常见原因之一。 只要有人要卖给你避税的服务，我的建议是别买。 长期持有几家伟大公司的股票而什么都不用做的地步有许多巨大的优势：你付给交易员的费用更少，听到的废话也更少，如果这种方法生效，税务系统每年会给你 1% 到 3% 的额外回报。 你会发现一些定价过低的赚钱机会。确有人不会把商品价格定到市场能够轻易接受的高位。你们要是发现这样的情况，那就像在马路上看到钱一样——前提是你们有勇气相信自己的判断。 政府职员保险公司（GEIGO）是个非常有趣的模型。它是你们应该记住的大概 100 种模型之外的一种。 癌症手术法 再次谈谈投资管理。这门生意特别好玩——因为在净值的水平上，整个投资管理业加起来并没有给所有客户创造附加值。这就是它的运转方式。 量入为出，养成储蓄的习惯。把存起来的钱放进一个延期纳税账户（tax-deferred account）。日积月累之后，它就会变成一大笔钱。这就是傻瓜也能明白的办法。 这些基金以往都很成功，这使它们比那些较为逊色的风险投资机构更能吸引到好的投资项目，非常合乎逻辑的是，最好的创业家都会早早选择那些声誉最好的基金。 太用财务标尺 也使用许多主观的标准 年轻人在工作中应该追求什么？我有三个基本原则。同时满足这三个原则几乎是不可能的，但你应该努力去尝试：·别兜售你自己不会购买的东西。·别为你不尊敬和钦佩的人工作。·只跟你喜欢的人同事。 人生在不同阶段会遇到不同的难题，非常棘手的难题。我认为有三点有助于应付这些困难：·期望别太高。·拥有幽默感。·让自己置身于朋友和家人的爱之中。最重要的是，要适应生活的变化。 第三讲 论基本的、普世的智慧（修正稿）# 在头脑里形成一个由各种思维模型构成的框架。 如果你们认真研究的话，会发现普世智慧是一门相当高深的学问。 “在任何行业取得成功的第一步是对该行业产生兴趣。” 所以我认为，学术蕴含了许多普世智慧，而且最好的学术观念确实是有用的。当然，当我谈到跨学科方法——你们应该掌握各个学科的主要模型，并将它们统统派上用场——时，我是真的呼吁你们不要理会学科的法定界限。 掌握各个学科的主要模型 不需要了解所有的知识，只要吸取各个学科最杰出的思想就行 亚当·斯密 《国富论》 对理性的自我利益如何驱动自由的市场经济 古典经济学的基础 正反两面都要考虑到 我要怎样才能抓到好牌呢？ 犯哪些错误会导致我手里全是烂牌？ 严重的意识形态是最能扭曲人类认知的因素之一。看看这些宗教激进分子就知道了 如果你们年轻时深受意识形态影响，然后开始传播这种意识形态，那么你们无异于将你们的大脑禁锢在一种非常不幸的模式之中。 警惕意识形态造成的思维紊乱。 一个人想要什么，就会相信什么。 专注、敏锐、条理、创新和交流。 妒忌 心理否认 激励机制引起的偏见 权威如何被用来说服人们去做可怕的事情。 检查清单 必须去看检查清单，才能发现他们漏掉了什么。 缺乏这种获得各种主要模型并以组合的方式使用它们的方法，你们也将会一而再、再而三地失败。 心理学教材对痛苦引起的精神失常着墨甚少 各种导致人类作出错误判断的心理因素，把所有模型组织起来，以便需要的时候能够用得上 一贯性原则 创建一套严密防止欺诈的管理系统是非常、非常重要的。 拥有一种激励机制引起的偏见 激励机制引起的偏见和社会认同。 漠视这些原则、容许作恶是非常危险的。强大的心理力量会造成很多恶果。 如果你想要改变行为，那么就必须改变动机。 与其创立一种有漏洞的制度，还不如就不要赔偿了——就让生活艰辛一些。 这种悲剧是由容许作恶的态度引起的。你们必须及早制止作恶。如果你们不及时采取行动，那么制止人们继续作恶和道德败坏是很难的。 权力很分散，只有最重要的资本配置才由公司的高层来拍板。 低科技企业的优势在于，我们认为我们对它的理解很充分。对高科技企业则不是这样的。我们宁愿与我们熟悉的企业打交道。 必须搞清楚你们有哪方面的才能。 有强制性赎回权的优先股 过上富足的生活又不犯很多错误是不可能的。 生活之所以如此，是为了让你们能够处理错误。 生活有时候就像扑克游戏，有时候你们即使拿到一把非常喜欢的牌，但也必须学会放弃。 剥夺性超级反映综合症 聪明的投资者 三个你们真正需要的思想：1. 市场先生比喻2. 股票是企业的一部分3. 安全边际 世界的财富不可能以这种速度增长。 实际上，你应该弄清楚你知道什么，不知道什么。在生活中，还有什么比这个更有用的呢？ 这个领域我没有能力给你任何特殊的见解。 从他的利益出发去说服他，很可能比从其他方面出发去说服他更有效。 拿破仑说他喜欢更幸运的将领——他不会支持败军之将。 人类的大脑需要理由才能更好地理解事情。 心理学的尴尬之处在于：（A）就社会心理学而言，人们对它揭示的各种倾向了解得越多，这些倾向的作用就会变得越弱；（B）就临床（治疗）心理学而言，它必须面临一个尴尬的问题：相信虚幻的东西往往能够提高幸福感。 我醉心于智慧，我为追求准确和满足好奇心而醉心。 我把用来对付失望的最佳方法称为犹太人的方法：那就是幽默 应该尽可能地设计各种防止欺诈的制度，哪怕有些人的悲惨遭遇将会因此而得不到补偿。 第四讲 关于现实思维的现实思考？# 一场非正式演讲，1996 年 7 月 20 日 [插图] 我的演讲题目是“关于现实思维的现实思考？”——后面带着一个问号。在漫长的职业生涯中，我掌握了一些超级简单的普遍观念，我发现它 五个这样的观念 第一个有用的观念 简化任务的最佳方法 先解决那些答案显而易见的大问题。 第二个有用的观念 惟有数学才能揭示科学的真实面貌 第三个有用的观念 正面思考问题是不够的，你必须进行反面思考。 第四个有用的观念是，最好的、最具有实践性的智慧是基本的学术智慧。 极其重要的前提：你必须以跨学科的方式思考 “如果你想要完成，就自己着手去做。如果不想，就让别人去做。” 你的眼界狭窄的专业顾问并不是故意给你误事，而是他的潜意识偏见给你们带来麻烦。 真正的大效应，也就是 lollapalooza 效应，通常在几种因素的共同作用下才会出现。 货币贬值 如果一个国家的货币的购买力下降，那么我们会说这个国家的货币贬值了。 本质上，我们要做的生意就是创造和维持条件反射。“可口可乐”的商标名称和商标形象将会扮演刺激因素的角色，购买和喝下我们的饮料则是我们想要的反应。 （1）通过操作性的条件反射；（2）通过经典的条件反射，通常被称为“巴甫洛夫反射” 种竞争性产品如果未经尝试，就很难鼓励人们养成另外一种截然不同的习惯。每个结了婚的人都明白这个道理。 强烈的巴甫洛夫条件反射需要花费很多钱，尤其是要支付许多广告费 “社会认同” 把这种强大的社会认可因素考虑在内 （1）巴甫洛夫条件反射 （2）强大的社会认同效应 （3）一种口感出色、提神醒脑、冰凉爽口、能够引起操作性条件反射的饮料 多因素引发的 lollapalooza 效应 前提是 拥有定价权 委托制造商，而不是糖浆买方，更不能让它们拥有永久经营权、能够永远以最初的价格购买糖浆。 努力地保密我们的配方 必须避免消费者喝了饮料之后感到腻烦的情况 必须避免失去我们强大的商标名称的情况 必须避免妒忌产生的恶果 必须避免突然对产品的味道做出重大的改变 经过上述努力之后，我们原有的味道将会深入人心，成为消费者的偏好 缺乏跨学科的综合 爱因斯坦的教导：“一切应该尽可能简单——但不能过于简单。” 只有跨学科的方法才能够正确地解决现实问题 心理学其实非常重要又非常有用 圆滑是一门表达观点而又不树敌的艺术。” “没有大胆的猜想，就没有伟大的发现。” “如果说我对公众有什么贡献的话，那是因为我的耐心思考。” “如果说我比其他人看得更远，那是因为我站在巨人的肩膀上。” “需要新的机器而尚未购买的公司，其实已经在为它花钱了。” 想要灌输的太多了。一直以来，如果遇到打算对“意义的意义”长篇大论的人，我总是避之唯恐不及。 我是在向他们解释一些艰深的概念，可是我用来解释的概念也同样艰深。 有一些“潜意识的心理倾向”妨碍了人们充分地扩大他们自身的视野。 第五讲 专业人士需要更多的跨学科技能# 五个问题：1. 是否广大专业人士都需要更多的跨学科技能？2. 我们的教育提供了足够的跨学科知识吗？3. 对于大部分软科学而言，什么样的跨学科教育才是可行的、最好的？4. 过去 50 年来，精英学府在提供最好的跨学科教育方面取得了什么进展？5. 哪些教育实践能够加快这个进程？ 必须确定跨学科知识是否有助于提高专业认识 重大问题往往牵涉到许多学科。 最佳的专业教育模型 对教育质量要求最严格、对教育结果的检查最严密的地方去找。 必修课的飞行员训练 严格的六要素系统进行的。 教给他足够全面的知识 不仅是为了让他能够通过一两次考试，而是为了让他能够熟练地应用这些知识，甚至能够同时处理两三种相互交织的复杂的危险情况 学会有时候采用正向思维，有时候采用逆向思维 什么时候应该把主要的注意力放在他想要的那些事情上，而什么时候放在他想要避免的那些情况 必须接受各门学科的训练，力求把他未来因为错误操作而造成损失的可能性降到最低 最重要的操作步骤必须得到最严格的训练，达到最高的掌握水平。 必须养成核对“检查清单”的习惯。 接受最初的训练之后，他必须常规性地保持对这些知识的掌握：经常使用飞行模拟器 如果想要得到最佳的结果，我们必须让学生学习大量的跨学科知识，持久地掌握能够应用自如的所有必要技能， 更多的课程应该是必修课，而不是选修课。 要培养的是未来的跨领域问题解决者 如果学生想要尽可能地提高自己的判断力，那么在校期间就实践他毕业后要终生从事的工作，是非常有道理的做法。在商业界，我认识的那些判断能力非常强的人，他们也都用这些刊物来维持他们的智慧。 学生也应该避免受政治意识形态影响。激情澎湃的人缺乏掌握跨学科知识所需的客观态度，受意识形态影响的人很难拥有综合各门学科知识的能力。 依照基础性给各个学科排序，并按照顺序使用它们。 熟练掌握并且经常使用这四门基础学科最重要的内容 弄清楚那些知识是怎么来的，而且不要背离“经济原则” 跨学科知识的合理组织模式 （1）必须完全弄清楚所有知识的原始出处； （2）必须把更基本的解释放在第一位。 经济学、心理学或者商学课程 一切重要的图书都应该立即重读。 如果真理和一个人的利益背道而驰，那么这个人就很难接受真理。 查理的检查清单 使用一张检查清单，确保你们掌握了所有的主要模型，并以一种多元的方式使用它们。 在第五讲中，查理举例说明正式和非正式的检查清单是作出决策和解决问题的不可或缺的工具。他在《穷查理宝典》全书一共推荐了四种基本的检查清单，它们的内容有所重叠并互相加强。1. 双轨分析·理性地看，哪些因 四种基本的检查清单 双轨分析 投资和决策检查清单 超级简单的普通观念 基于心理学的倾向 人类误判的 25 个标准原因 第六讲 一流慈善基金的投资实践# 会计师只会把容易拿到的数字算进去，而未能去寻找那些真正重要的数据。 一个人想要什么，就会相信什么。 过度的所谓专业态度往往会给你们造成极大的伤害——恰恰是极其仔细的过程常常会造成人们对他们所得到的结果过度自信。 生物通常偏好固定的活动模式，以便最大程度地节省精力，也不喜欢长久以来享有的好处被拿走。 首要的原则是你必须别欺骗自己，因为自己是最好骗的人。 减少投资的次数，转而对股票进行指数化投资。 长期持有少数几家备受敬仰的国内公司，不过多地进行交易，从而把年均管理成本降低到资本总额的 0.1% 除了对流通股进行非杠杆式（无借债）投资之外，该基金还可以投资一些有限责任的合伙制公司 杠杆收购领域隐藏着两大风险：一是在经济大环境不景气的时候，流通股容易引发灾难性的后果；二是现在的竞争过度激烈。 高度分散的投资则是必须的。我对这种观点持怀疑态度。我认为这种正统的观点错得很厉害。 如果想要得到最好的长期结果，应该做许多自我保险的工作。 美国的文化和法律制度特别照顾股东的利益。 许多国家，股东权益并没有得到很好的保护，有许多东西比股东权益更重要。 倾向于伯克希尔通过投资类似可口可乐和吉列那样的公司来参与全球经济。 这个规避成本、追踪指数的群体增长的速度虽然不够快，不足以抑制总摩擦成本的增长，但越来越多的持股方式正在慢慢转向消极的、指数化的模式。 他还把最好的投资机会比喻为赛马中定错价格的赌局，他说：“我们要寻找一匹获胜几率是 1/2、赔率是一赔三的马。” 第七讲 在慈善圆桌会议早餐会上的讲话# 黑金对消费有非常强烈的刺激作用。 是否有些东西起到的作用跟“黑金”相同，而且它的数额足够大，也不会在短时间内自我消亡？ 人类跟旅鼠一样，在某些情况下都有“集体非理性”的倾向。 有两个古老的法则能够引导我们：一个是道德的法则，一个是谨慎的法则。 新管理层采用现代的金融工程技巧，特别是启用了股票期权的激励制度却没有将股票期权算作公司的成本时，一切都完了。 第八讲 2003 年的金融大丑闻# 让人们去理解那些跟他们的利益冲突的事情是很难的。 查证企业年报中披露的利润是否属实，那就是将年报中披露的好消息和该企业实际缴纳的所得税进行比较。 企业的 10K 表格中“支付所得税的现金”一栏往往更为准确、更为忠实地反映了该企业的真实盈利。 F.A.S.B “Financial Accounts Still Bogus”（金融会计还做假）。 做假账无异于在盖高层公寓楼的时候把钢筋从水泥中抽走，允许这么做的行业和国家必将学到惨痛的教训。 第九讲 论学院派经济学：考虑跨学科需求之后的优点和缺点# 从许多方面来讲，经济学都是软科学中的皇后。 本杰明·富兰克林在《穷理查年鉴》中说过的话：“如果你想要说服别人，要诉诸利益，而非诉诸理性。” 伯克希尔取得了非凡的业绩，但我们从来毫不留意僵化的有效市场理论。 股票市场不可能是完全有效的 我从小就有一个多学科的大脑。如果篱笆那边，在别人的学科里有更好、更重要的思想，我就无法乖乖地呆在我自己的学科里。所以我就四面八方寻找那些真正有用的重要思想。 硬科学中基本的全归因治学方法。 必须领悟所有比你自己的学科更加基础的学科的所有重要思想。只有掌握了那些最基础的知识和原理，你们才能够清清楚楚地解释问题。 而且你们要永远承认你们所用的基础知识来自哪个学科； 这种治学方法能够让我的思想变得有条有理。我强烈怀疑它在软科学领域，也会像在硬科学领域那么有效，所以我就抓起它，终生把它用于软科学领域和硬科学领域。 硬科学的知识组织模型提倡知识应该尽可能简化 虽然总是会有很多人比我聪明得多，但是在思维游戏里面，我未必会落后于他们。 经济学总是比其他软科学更加强调跨学科研究 机会成本是一种超级力量 激励机制也是一种超级力量 “公用品悲剧”的原理 昆这种借鉴其他学科、吸取哈丁的理论和其他有用知识的做法是很正确的。 经济学有哪些缺陷呢？ 1. 致命的自闭，导致“铁锤人综合症”，通常会引起经济学家过度强调某些可以量化的因素。 经济学的这个大的整体缺陷就是它的封闭性。 这种缺陷会引发我所说的“铁锤人综合症”。 在只有铁锤的人看来，每个问题都非常像一颗钉子。 治疗它的惟一良方是拥有全套工具。你们不能只拥有一把铁锤，你们必须拥有所有的工具。 使用这些工具的时候，应该把它们列成一张检查清单 还有些别的因素特别重要，可是你们没有相关的准确数据。 实际上，每个人都会（1）过度强调那些有相关数据的因素的重要性， 并且（2）不把那些可能更加重要但没有相关数据的因素考虑在内。这是我终生试图避开的错误，我从来不后悔自己这么做。 他使用了一种非常有趣、非常极端的办法，以免犯下错误——过度强调那些被测量因素的重要性，而低估那些无法被测量的因素的重要性。 我就像一个在 1849 年的萨克拉门托河（Sacramento River）边寻找黄金的人。虽然才智有限，但我能够弯腰捡起大金块。只要能够捡到大金块，我就不会让我系里的人浪费稀缺的资源，用矿金开采的方法去找金子。”这是托马斯·汉特·摩根终生奉行的宗旨。 2. 没有采用硬科学基本的全归因治学方法。 曼昆研究经济学的方式的错误之处在于，他吸收了其他学科的知识，却没有指出这些知识的来源。 经营企业时使用了一种糟糕的文档归类方法。这削弱了你的能力，让你无法做最好的自己 3. 物理学妒忌。 我把经济学的第三个缺陷称为物理学妒忌。 “一切应该尽可能简单，但不能过于简单。” 如果你们在经济学这么复杂的系统中试图达到虚假的精确，你们引起的错误最终就会比那个不称职的麦肯锡合伙人在担任《华盛顿邮报》顾问时所犯的错误还要糟糕。 经济学应该模仿物理学的基本治学方法，但是永远不应该追求像物理学公式那么准确的理论。 4. 太过强调宏观经济学。 的第四点批评是，经济学界太过强调宏观经济学，而对微观经济学的重视程度不够。 最重要的原因是，他们经常犯错，因为他们想要理解的系统实在是太复杂了。 个成功的生意人必须做对很多事情，并用良好的制度来保证不会犯错。 我们聘请一些商学院毕业生，他们解决问题的能力并不比你们出色。 1. 将一到两个因素最大化或者最小化。 2. 增加一些成功的因素，以便取得更大的成效，这种成效的提高通常是非线性的，让人想起有关临界点或者物理学中的临界物质的理论。结果通常是非线性的。你们只要再增加一点点物质，就能得到一种 lollapalooza 效应。 3. 将几个优点发挥得淋漓尽致。 4. 顺应某些重大的潮流。 解决问题时使用一些快刀斩乱麻的运算法则，你们必须学会正向地和反向地使用它们。 我推荐你们使用这种解决问题的方法，遇到问题要进行正向思考和逆向思考。 5. 经济学的综合太少。 我的第五个批评是经济学中的综合太少了，不但没有综合传统经济学之外的知识，也没有综合经济学内部的知识。 一般情况下，当你们提高商品的价格，这种商品的销量就会下跌；当你们降低价格，销量就会上升。 我说：“现在向我举几个例子，说明你们要是想提高销量，正确的做法是提高价格。” 四类答案 1. 奢侈品：提高价格能够改善奢侈品的“炫耀”功能 2. 非奢侈品 对那些耐用性的工业品而言尤为适用。 . 提高价格，把额外的利润以合法的方式用于改善产品的性能或者改善销售系统。 4. 提高价格，把额外的利润以非法或者不道德的方式来促进销售 第十个缺点就是我说的“在微观经济学层面对嵌入性庞氏骗局的效应不够重视”。 最典型的例子来自投资管理行业。 利用额外收取的佣金来贿赂客户的交易经纪人 我认为你们在生活中并没有必要去推销那些你们自己永远不会购买的东西。 第二个和综合相关的有趣问题涉及经济学中两个最著名的范例。第一个是李嘉图提出的贸易中的比较优势原理，另外那个是亚当·斯密的图钉工厂。 这个家伙设计用来娱乐老年人的奇怪系统纯粹是图钉工厂式的，而找到这个拥有这种方法的家伙则纯粹是李嘉图式的。所以这些事情发生了相互影响。 但说到真正能够把各种知识综合起来，我可以自信地预言，大多数人不会做得非常好。 有史以来最聪明的人之一普朗克为什么要放弃经济学呢？答案是，他说：“经济学太难了。你想尽办法，得到的结果却总是无序而不确定的。” 经济学里面永远得不到完美的秩序 6. 对心理学的极度无知及其造成的负面后果。 第六个缺陷，这个缺陷其实也是由于对跨学科研究不够重视而造成的：对心理学的极度无知及其在经济学中造成负面影响。 明显存在着一个心理因素：那台机器能够引发某种基本的心理反应。 实际上，他说如果一个学者能够通过少量的工作轻轻松松地去掉自己的一个无知，却不去做，那么这个学者的行为就等于背叛。 7. 对二级或者更高级别的效应关注太少。 第七个缺陷：对二级或者更高级别的效应关注太少。 这个缺陷是相当容易理解的，因为结果会产生结果，而结果的结果也会产生结果。这变得非常复杂。 答案：他们为了轻松得到结果而把问题过度简化了，那就像把圆周率改为 3.2 一样！他们选择了不去关注后果的后果的后果。 答案是这样的：并不是新技术没有发挥作用，而是经济规律决定了，新纺织机带来的好处只会落到那些购买纺织品的人手里，而不是落进拥有纺织厂的那个家伙的口袋。 所有人类制度都会被钻空子，而且人们在钻空子的博弈游戏中表现出了高超的技巧，因为博弈原理有这么大的潜力。 人们在利用制度漏洞的博弈游戏上已经出神入化了。在利用制度漏洞的过程中，人们变得越来越狡猾奸诈。这对文明社会有好处吗？这对经济表现有好处吗？当然没有。 他们不认为自己的所作所为对文明社会有极大的破坏作用，因为他们并没有考虑到说谎和欺骗造成的二级后果或者三级后果。 哈佛大学经济学系的维克多·尼德霍夫的故事是一个利用制度漏洞的绝佳例子。 当时哈佛大学的人还以为这学校又出了一个天才呢。尽管这个故事很荒唐，但这种办法确实有效。尼德霍夫变得非常著名：人们管他这种方式叫做“尼德霍夫选课法”。 另外一个不考虑后果的后果的例子，是经济学界对李嘉图的比较优势法则的标准反应。 因为如果你们忽略二级和三级后果，经济学就会简单得多。 8. 对“捞灰金”的概念关注太少。 经济学的第八个缺陷：经济学界对最简单、最基本的数学原理的关注太少。 。加尔布雷斯认为，尚未败露的贪污行为会对经济产生很大的凯恩斯刺激效应，因为那个钱被贪污的家伙以为他仍像从前那么富裕，于是延续原来的消费方式，而那个贪污的家伙则增加了购买力。 他的观点的问题在于，他描绘的是一种影响较小的现象。因为一旦贪污行为败露——它迟早会败露的——那种效应很快会扭转过来。 “经济学中有跟‘捞黑金’相同的行为吗？” “黑金”这个词，用来指尚未败露的贪污中涉及的金额，所以我生造了“捞灰金”这个词：它起到的作用跟捞黑金是相同的。 有些“捞灰金”行为就出现在投资管理业。毕竟我跟投资管理业的关系比较密切。我认为美国的股东在投资普通股的过程中，总共有数十亿美元被浪费了。只要股市继续上涨，浪费掉这些钱的投资者就没有感觉，因为他看到的是股票价格正在稳定上升。而在投资顾问看来，这些钱是正当的收入，因为那确实是他出售有害的投资建议换来的。这种行为无异于尚未败露的贪污。 9. 对美德效应和恶行效应不够重视。 第九个缺点是：对经济生活中的美德效应和恶行效应不够重视。 好办法就在眼前：如果董事会的成员都是不领薪水的大股东，那么我们将会吃惊地发现，由于我们降低了互惠倾向引发的影响，公司高层管理人员领取太多薪酬的现象将会消失。 人们往往没有认识到，人世间大多数结果都是不公平的，而且道德规范有时候必须不公平，才能取得最好的效果。过于追求公平，会给社会制度带来严重的功能障碍。 容忍对某些人有一点不公平，以便对所有人更为公平，这是我向你们所有人推荐的模式。 人们总是以为资本市场就应该像赌场那样，能够让他们快速而有效地赚大钱。但资本市场并不是赌场。 古代犹太人知道妒忌的人们是什么德性，也知道这些人会惹出什么麻烦。他们对妒忌真的绝不姑息，他们这么做是正确的。 曼德维尔（注：曼德维尔，1670—1733，荷兰人，著名哲学家和经济学家，曾因提出“私人恶德即公共利益”悖论而备受争议）——你们记得他的《蜜蜂寓言》（The Fable of The Bees）吗？他令人信服地——反正我是信服的——证明妒忌会极大地推动消费意欲。所以呢，妒忌既是摩西十诫严厉禁止的糟糕恶行，却又是促使经济增长的驱动力。经济学中总有一些人们无法解决的悖论。 如果你轻车熟路地走上跨学科的途径，你将永远不想往回走，因为那就像砍断你的双手。 可以说这本书最重要的主题就是我们需要信任：我们需要信得过那些和我们共同生活与共同工作的人的性格、价值观和人品。 “正直的行为是好的，并不是因为它们能够带来好处；它们能够带来好处，是因为它们是好的”。 “无论你们多么聪明，总有一些更聪明的人，如果他们真的想骗你们，你们就会上当。所以，要确定与你们同事的聪明人值得你们信赖。” 第十讲 在南加州大学 GOULD 法学院毕业典礼上的演讲# 要得到你想要的某样东西，最可靠的办法是让你自己配得起它。这是个十分简单的道理，是黄金法则。你们要学会己所不欲，勿施于人。 另外一个道理——这个道理可能会让你们想起孔子——是，获得智慧是一种道德责任 人类社会只有发明了发明的方法之后才能发展，同样道理，你们只有学习了学习的方法之后才能进步。 如果你们的正确让其他有身份有地位的人觉得没面子，那么你们可能会引发别人极大的报复心理。 最好学会隐藏你们的睿见。 西塞罗有句话很著名，他说如果一个人不知道他出生之前发生过什么事情，那么他在生活中就像一个无知的孩童。 除了历史之外，还有许多东西是人们必须了解的。所谓的许多东西就是所有学科的重要思想。 “要是知道我会死在哪里就好啦，那我将永远不去那个地方。” 对于复杂适应系统以及人类大脑而言，如果采用逆向思考，问题往往会变得更容易解决。如果你们把问题反过来思考，你们通常就能够想得更加清楚。 你们要非常小心地提防强烈的意识形态，它对你们宝贵的头脑是极大的危险。 我有一条“铁律”，它帮助我在偏向于支持某种强烈的意识形态时保持清醒。我觉得我没资格拥有一种观点，除非我能比我的对手更好地反驳我的立场。我认为我只有在达到这个境界时才有资格发表意见。 总的来说，妒忌、怨憎、仇恨和自怜都是灾难性的思想状态。过度自怜可以让人近乎偏执。偏执是最难逆转的东西之一。 要在你们的思维习惯中消除自我服务的偏好。 你们也必须在你们自己的认知和行动中允许别人拥有自我服务的偏好，因为大多数人将无法非常成功地清除这种心理。人性就是这样。如果你们不能容忍别人在行动中表现出自我服务的偏好，那么你们又是傻瓜。 正确的说服技巧是本杰明·富兰克林指出的那种。他说：“如果你想要说服别人，要诉诸利益，而非诉诸理性。”人类自我服务的偏好是极其强大的，应该被用来获得正确的结果。 另外一种应该避免的事情是受到变态的激励机制的驱动。你们不要处在一个你们表现得越愚蠢或者越糟糕，它就提供越多回报的变态激励系统之中。 变态的工作关系也是应该避免的。 特别避免在你们不崇敬或者不想像他一样的人手下干活，要不然那是很危险的。 养成一些让你能够保持客观公正的习惯当然对认知非常有帮助。 达尔文特别留意相反的证据，尤其是在他证伪的是某种他信奉和热爱的理论时。 养成核对检查清单的习惯。核对检查清单能够避免很多错误 不应该光是掌握广泛的基础知识，而是应该把它们在头脑中列成一张检查清单，然后再加以使用。 另外一个我认为很重要的道理就是，将不平等最大化通常能够收到奇效。 伍登曾经是世界上最优秀的篮球教练。他对五个水平较低的球员说：“你们不会得到上场的时间——你们是陪练。” 生活就像比赛，也充满了竞争，我们要让那些最有能力和最愿意成为学习机器的人发挥最大的作用。 你们想要让最好的球员打很长时间的比赛。 我可以强迫自己把许多事情做得相当好，但我无法将我没有强烈兴趣的事情做到非常出色。 有机会的话，你们要想办法去做那些你们有强烈兴趣的事情。 还有就是，你们一定要非常勤奋才行。我非常喜欢勤奋的人。我这辈子遇到的合伙人都极其勤奋。 复杂的官僚程序并不是文明社会的最好制度。更好的制度是一张无缝的、非官僚的信任之网。没有太多稀奇古怪的程序，只有一群可靠的人，他们彼此之间有正确的信任。 永远别忘记，虽然你们在工作中要遵守程序，但你不用总是被程序牵着鼻子走。你们在生活中应该追求的是尽可能地培养一张无缝的信任之网。 认知模型的重要性，这些模型可以用来理解人们的理性行为和非理性行为。 第十一讲 人类误判心理学# 明白人是“社会动物”，他会观察周围人们的各种行为，并自动地受到他们的影响。 在我追求知识的过程中，有两种思维习惯起到了很大的作用。 一，我总是试图通过伟大的代数学家雅各比提倡的逆向思维来考虑问题。雅各比说：“反过来想，总是反过来想。” 二，我非常热衷于收集错误判断的例子，所以我完全无视不同行业、不同学科之间的界线。 现实世界的问题不会恰好落在某个学科的界线之内。它们跨越了界线。 纯粹的好奇心驱使我去思考邪教的问题 我也对社会性的昆虫很好奇。 许多学者就像寻菇犬，人们喂养和训练这种动物来寻找地下的块菌，除了这项专长，它别的什么都不会。 那些入门级教材的作者通常对如何弄清楚相互交织的心理倾向造成的复杂后果避而不谈。 一本叫做《影响力》（Influence）的书。这是一本通俗读物，作者是一位杰出的心理学教授，罗伯特·西奥迪尼（Robert Cialdini） 做《影响力》（Influence）的书。这是一本通俗读物，作者是一位杰出的心理学教授，罗伯特·西奥迪尼（Robert Cialdini） 开始综述我的理论之前，我想先来讲一个有助于理解以下内容的普遍观点。 是从我们对社会性昆虫的了解中提炼出来的。 很明显的道理是：由于存在许多过度简化的思维程序，人类大脑的运转必定常常出现问题，就像蚂蚁的大脑那样 人类的知觉系统清楚地证明了大脑确实会失灵。 导致这种结果的原因之一是人类感知中的微量效应。如果刺激被维持在一定水平之下，人类便察觉不到它的存在。 人类的大脑即使在有所知觉的时候，也会错误地估量它感知到的东西，因为大脑只能感知到鲜明的对比 人类的感知和认知系统中那些总体上很有用的倾向往往会出错，如果不对此加以小心提防，就会很容易受到别人故意的操控。 人类的——经常出错但总体上很有用——心理倾向相当多，而且相当不同。大量的心理倾向的自然结果就是社会心理学的重要原理：认知往往取决于情景，所以不同的情景通常会引起不同的结论 那些虽然总体上很有用但经常误导人的心理倾向。 一、奖励和惩罚超级反应倾向 二、喜欢 / 热爱倾向 三、讨厌 / 憎恨倾向 四、避免怀疑倾向 五、避免不一致性倾向 六、好奇心倾向 七、康德式公平倾向 八、艳羡 / 妒忌倾向 九、回馈倾向 十、受简单联想影响的倾向 十一、简单的、避免痛苦的心理否认 十二、自视过高的倾向 十三、过度乐观倾向 十四、被剥夺超级反应倾向 十五、社会认同倾向 十六、对比错误反应倾向 十七、压力影响倾向 十八、错误衡量易得性倾向 十九、不用就忘倾向 二十、化学物质错误影响倾向 二十一、衰老—错误影响倾向 二十二、权威—错误影响倾向 二十三、废话倾向 二十四、重视理由倾向 二十五、lollapalooza 倾向 一 奖励和惩罚超级反应倾向# 联邦快递的案例 新机器总是卖得不如那些性能低下的旧机器好 销售提成协议 富兰克林在《穷理查年鉴》中说过：“如果你想要说服别人，要诉诸利益，而非诉诸理性。” 最重要的管理原则就是，“制定正确的激励机制。” 证明自然界存在一种重复出现的、普遍的伟大行为算法：“重复有效的行为” 即时的回报在改变和延续行为方面远远比延后的回报有效。 使反射行为保持最长时间的奖励撤销模式：随机分布模式。 “激励机制引起的偏见” 由于激励机制引起的偏见非常普遍，所以人们往往必须怀疑或者有保留地接受其专业顾问的建议，哪怕这个顾问是一名工程师。 激励机制能够导致人们在做坏事的时候觉得自己是正当的 得到奖励的坏行为特别容易形成习惯。 “重复有效的行为”作为行为指南 最重要的对策是采用合理的会计理论和会计实践。 激励机制引起的偏见是非常重要的，（我们也有很重要的对策），比如说收款机和合理的会计系统。 如果有的事情在生活中极为明显，但很难通过容易做的、可重复的学术实验得到证明，那些心理学的寻菇犬就会忽略它。 激励机制引起的偏见所产生的后果取了一个名字：“代理成本” 对策包括制定严格的内部审计制度，对败露的不轨行为进行严厉的公开惩处，使用防止钻营的规章制度和收款机等机器 激励机制引起的偏见的另外一个常见后果是，人们倾向于钻各种制度的空子，他们往往在损人利己方面表现得极有创意。 。制度设计还需要遵守如下的原则：尽量避免奖励容易作假的事情。 虽然在各种奖励中金钱是最主要的，但它并非是惟一有效的奖励。人们也会为了性、友谊、伴侣、更高的地位和其他非金钱因素而改变他们的行为和认知。 祖母的规矩”也证实了奖励是非常有用的。 具体来说，祖母的规矩就是要求孩子在吃甜点之前先把他们的胡萝卜吃掉。 根据斯金纳的教导，他们知道即时的奖励是最有效的。 当然，惩罚也强烈地影响到行为和认知，尽管它的弹性和效果不像奖励那么好。 二 喜欢 / 热爱倾向# 刚出生的人类也会“天生就喜欢和热爱”对他好的人。 还有什么是人类天生就喜欢和热爱的呢？人类喜欢和热爱被喜欢和被热爱。 一般来讲，人类终身都会渴望得到许多和他毫无关系的他人的怜惜和欣赏。 喜欢 / 热爱会引发倾慕，反之亦然。倾慕也会引起并且强化喜欢 / 热爱倾向。这种“反馈模式”一旦形成，通常会造成极端的后果 那些有可能引起极度的热爱和倾慕的人往往能够发挥榜样的作用，造成非常好的效果，这对社会政策有极大的借鉴意义。 三 讨厌 / 憎恨倾向# 一种与“喜欢 / 热爱倾向”相反的模式中，刚出生的人类也会“天生就讨厌和憎恨”对他很坏的人。 “政治是正确地处理仇恨的艺术。” “穷人和富人的主要区别是，富人能够一辈子起诉他们的亲戚。” 讨厌 / 憎恨倾向也是一种心理调节工具，它能促使深陷其中的人们：（1）忽略其讨厌对象的优点；（2）讨厌那些能够让自己联想起讨厌对象的人、物品和行动；（3）为了仇恨而扭曲其他事实。 这种扭曲往往很极端，导致人们的认知出现了极大的偏差。 四 避免怀疑倾向# 人类通过尽快作出决定来消除怀疑的倾向十分明显 六项思考帽 人们在做决定之前，必须让自己习惯于戴上一个客观的“面具”。 人们在做决定之前，必须让自己习惯于戴上一个客观的“面具”。 如果一个人没有受到威胁，又无需考虑任何问题，他是不会急于通过作出决定来消除怀疑的。 引发避免怀疑倾向的因素通常是：（1）困惑；（2）压力。 五 避免不一致性倾向# 为了节省运算空间，人类的大脑会不愿意作出改变。这是一种避免不一致性的形式。 “一盎司的预防比一磅的治疗更值钱。”富兰克林这句话的部分含义是，由于避免不一致性倾向的存在，防止一种习惯的养成要比改变它容易得多。 新思想之所以很难被接受，并不是因为它们本身太过复杂。新思想不被接受，是因为它们与原有的旧思想不一致。 当一个精子进入卵子，卵子就会自动启动一种封闭机制，阻止其他精子的进入。人类头脑强烈地趋向于与此相同的结果。 人类会由于天生的避免不一致性倾向而犯认知错误。 避免不一致性倾向造成的结果之一是，人们在获取新身份的过程中作出的重大牺牲将会提高他们对这种新身份的忠诚度。 庄严的仪式能够强化好的关系，也能够强化坏的关系。 富兰克林这种操纵别人帮自己忙、从而令别人对自己产生好感的做法如果反过来使用，也会产生非常变态的效果。 避免不一致性倾向造成的效应解释了那句谚语所含的道理：“人永远不会忘记自己做过的坏事。” 避免不一致性倾向是如此强大，乃至一个人只要假装拥有某种身份、习惯或者结论，他自己通常就会信以为真。 许多装好人的伪善者的道德水平确实得到了提高； 在一个人心智尚未完全成熟之前，不能给他的头脑套上一些锁链，这是很重要的。 六 好奇心倾向# 哺乳动物天生就具有好奇心。在发达的人类文明中，文化极大地提高了好奇心在促进知识发展方面的效率。 好奇心则能帮助人们防止或者减少其他心理倾向造成的糟糕后果。 七 康德式公平倾向# 康德以其“绝对命令”（categorical imperative，又译为定言令式）而闻名。 绝对命令是某种“黄金法则”，它要求人们遵守某些行为方式，如果所有人都遵守这些方式，那么就能够保证社会制度对每个人来说都是最好的。 在现代社会，每个有文化的人都表现出并期待从别人那里得到康德所定义的这种公平。 作为这种“公平分配”行为的自然后果，当人们期待然而没有得到公平分配时，往往会表现出不满的情绪。 八 艳羡 / 妒忌倾向# 如果某个物种在进化过程中经常挨饿，那么这个物种的成员在看到食物时，就会产生占有那食物的强烈冲动。如果被看到的食物实际上已经被同物种的另外一个成员占有，那么这两个成员之间往往会出现冲突的局面。这可能就是深深扎根在人类本性中的艳羡 / 妒忌倾向的进化起源。 儿童往往比成年更容易妒忌自己的兄弟姐妹。这种妒忌通常比因陌生人而发的妒忌更加强烈。 “驱动这个世界的不是贪婪，而是妒忌。” 人们普遍认为，说某种立场是由艳羡 / 妒忌促成的，是对采取那种立场的人的极大侮辱，如果那个人所持的看法是正确的，而不是错误的，那就更是如此。 九 回馈倾向# 人类身上也有以德报德、以牙还牙的极端倾向。这种倾向明显能够促进有利于成员利益的团体合作。从这方面来讲，它跟许多社会性动物的基因程序很相似。 化解过激的敌意的标准方法是，人们可以延迟自己的反应。 回馈倾向很大程度上是在潜意识层面发挥作用的。 对销售员的示好保持警惕。 聪明的雇主试图压制从事采购工作的职员的回馈倾向。最简单的对策最有效：别让他们从供应商那里得到任何好处。 不允许采购员从供应商那里接受任何东西，哪怕是一个热狗也不行。考虑到大多数回馈倾向是在潜意识层面发挥作用，沃尔顿的政策是非常正确的。 西奥迪尼的实验员所做的是作出小小的让步，于是对方也作出了小小的让步。由于西奥迪尼的实验对象在潜意识中作出了这种回馈式的让步，所以有更多的人非理性地答应 人类生活中最美好的部分也许就是情感关系，情感关系中的双方更感兴趣的是如何取悦对方，而非如何被取悦 可能引起负罪感的因素是回馈倾向和奖励超级反应倾向之间的精神冲突。 十 受简单联想影响的倾向# 斯金纳研究过的标准条件反射是世界上最常见的条件反射。 提高价格的销售策略对奢侈品而言尤其有效 即使是微不足道的联想，只要加以仔细的利用，也能对产品购买者产生极端的特殊影响。 广告商了解单纯联想的威力。 可口可乐广告画面中的生活总是比现实生活更加快乐。 避免因为过去的成功而做蠢事的正确对策是：（1）谨慎地审视以往的每次成功，找出这些成功里面的偶然因素，以免受这些因素误导，从而夸大了计划中的新行动取得成功的概率；（2）看看新的行动将会遇到哪些在以往的成功经验中没有出现的危险因素。 喜欢和热爱会给人们的思想带来伤害 被称之为爱的联想在多大程度上会令人盲目 “实事求是地看清现实，可还是去爱。” 憎恨和讨厌也会造成由简单联想引起的认知错误。 “波斯信使综合症” 信使惟一的过错是把真实的坏消息（比如说战败）带回家。 要避免像哥伦比亚广播公司那样因波斯信使综合症而自食其果，正确的对策是有意识地，养成欢迎坏消息的习惯。 “有坏消息要立刻向我们汇报。只有好消息是我们可以等待的。” 受简单联想影响的倾向通常在消除以德报德的自然倾向方面有惊人的效果。 当某个人接受恩惠时，他所处的境况可能很差，比如说穷困潦倒、疾病缠身、饱受欺凌等等。 最后一类由简单联想引起的严重思维错误出现在人们经常使用的类型化思考中。 必须认识到他未必能够依据群体的平均属性来准确地推断个体的特性。 十一 简单的、避免痛苦的心理否认# 现实太过痛苦，令人无法承受，所以人们会扭曲各种事实，直到它们变得可以承受。 这种倾向造成的最极端的后果经常跟爱情、死亡和对化学物质（酒精、毒品等）的依赖有关。 “未必要有希望才能够坚持。”能够做到这一点的人是非常可敬的。 。人们应该避免任何有可能养成化学物质依赖性的行为。由于这种依赖性会造成极大的伤害 十二 自视过高的倾向# 自视过高的人比比皆是。这种人会错误地高估自己 这种误评也适用于人们的主要“私人物品”。人们通常会过度称赞自己的配偶。人们通常不会客观地看待自己的孩子，而是会给出过高的评价。 人们一旦拥有某件物品之后，对该物品的价值评估就会比他们尚未拥有该物品之前对其的价值评估要高。 “禀赋效应”：人们作出决定之后，就会觉得自己的决定很好，甚至比没作出这种决定之前所认为的还要好。 自视过高的倾向往往会使人们偏爱那些和自己相似的人。 自视过高的倾向降低了这些赌徒在评估自己的相对能力时的准确性。 更具有负面作用的是，人们通常会高估自己未来为企业提供的服务质量。 自视过高往往会导致糟糕的雇佣决定，因为大部分雇主高估了他们根据面试印象所得结论的价值。 对策是看轻面试的印象，看重求职者以往的业绩。 学术研究表明，从面试中得来的印象，其预测价值很低 人们非常有可能过度地受到当面印象的影响，因为从定义上来讲，当面印象包括了人们的主动参与。 绝大多数人都会为可以改变的糟糕表现寻找太多荒唐的理由，以此来试图让自己心安理得 避免因为自视过高而做傻事的最佳方法是，当你评价你自己、你的亲人朋友、你的财产和你过去未来的行动的价值时，强迫自己要更加客观。 “千万别低估那些高估自己的人。” 有时候高度的自我称赞是正确的，而且比虚伪的谦虚要好得多。 自我赞赏是一种非常有建设性的力量。 所有有益的骄傲中，也许最值得钦佩的是因为自己值得信赖而产生的骄傲。 十三 过度乐观倾向# 人们不但会表现出简单的、避免痛苦的心理否认，而且甚至在已经做得非常好的时候，还会表现出过度的乐观。 十四 被剥夺超级反应倾向# 失去造成的伤害比得到带来的快乐多得多。 如果有个人即将得到某样他非常渴望的东西，而这样东西却在最后一刻飞走了，那么他的反应就会像这件东西他已经拥有了很久却突然被夺走一样。 人类对这两种损失经验（损失已有的好处和损失即将拥有的好处）的自然反应，那就是被剥夺超级反应倾向。 对眼前的损失斤斤计较，而不会想到那损失也许是无关紧要的。 极端的意识形态是通过强烈的方式和对非信徒的极大敌意得到维护的，这造成了极端的认知功能障碍。 这种可悲的结果往往是由两种心理倾向引起的：（1）避免不一致性倾向；（2）被剥夺超级反应倾向。 被剥夺超级反应倾向对劳资关系的影响是巨大的。 激烈的市场竞争只提供两种选择，要么工资降低——而这是不会得到同意的——要么企业死掉。被剥夺超级反应倾向促使许多工人抵制降薪计划，而往往工人接受降薪对他们本身更有好处。 被剥夺超级反应倾向也是导致某些赌徒倾家荡产的重要原因之一。 被剥夺超级反应倾向和避免不一致性倾向通常会联合造成一种形式的经营失败。在这种形式的失败中，一个人会耗尽他所有的优质资产，只为徒劳地试图去挽救一个变得很糟糕的投资项目 十五 社会认同倾向# 进化给人类留下了社会认同倾向，也就是一种自动根据他看到的周边人们的思考和行动方式去思考和行动的倾向。 青少年特别容易由于社会认同倾向而出现认知错误。 ，年轻人最尊重的是他们的同龄人，而不是他们的父母或者其他成年人 对于父母来说，与其教训子女，毋宁控制他们交往朋友的质量。后者是更明智的做法。 人们在感到困惑或者有压力的时候，尤其是在既困惑又有压力的时候，最容易受社会认同倾向影响。 由于坏行为和好行为都会通过社会认同倾向而得到传播，所以对于人类社会而言，下面两种措施是非常重要的：（1）在坏行为散播之前阻止它；（2）倡导和展现所有的好行为。 并非所有人都能抵制坏行为的社会传染。 社会认同倾向和激励机制引起的，这两种因素共同造成了“塞皮科综合症”。 人们不仅会受到别人行动的误导，而且也会受到别人的不行动的误导。当人们处在怀疑状态时，别人的不行动变成了一种社会证据，证明不行动是正确的。 在广告和商品促销中，社会认同发挥的重要作用简直超乎人们的想像。 社会认同倾向通常以一种变态的方式和艳羡 / 妒忌倾向、被剥夺超级反应倾向结合在一起。 学会如何在其他人犯错的时候别以他们为榜样，因为很少有比这个更值得掌握的技能。 十六 对比错误反应倾向# 人类的神经系统并不是精密的科学仪器，所以它必须依靠某些更为简单的东西。 眼睛，它只能看到在视觉上形成对比的东西。和视觉一样，其他感官也是依靠对比来捕捉信息的。 不但感知如此，认知也是如此。结果就造成了人类的对比错误反应倾向。 对比错误反应倾向常常被用于从购买商品和服务的顾客身上赚取更多的钱。 人们即使对这种操纵消费者的伎俩心知肚明，也往往忍不住会上当。 证明了这个道理：了解心理操纵伎俩并非就是一种完美的防御措施。 如果把青蛙丢到热水里，青蛙会立刻跳出来，但如果把青蛙放到常温的水里，然后用很慢很慢的速度来烧这些水，那么这只青蛙最终会被烫死。 “小小纰漏，能沉大船。” 十七 压力影响倾向# 突然的压力，比如遭遇威胁，会导致人体内部的肾上腺素激增，推动更快、更极端的反应。 压力会使社会认可倾向变得更加强大。 轻度的压力能够轻微地改善人们的表现 沉重的压力能够引起抑郁症 “急性应激性抑郁症”（Acute Stress Depression）会使人们的思维出现紊乱，因为它引起极端的悲观态度 “巴甫洛夫条件反射” 十八 错误衡量易得性倾向# “如果我爱的女孩不在身边，我就爱身边的女孩。” 人类的大脑会高估容易得到的东西的重要性，因而展现出易得性—错误衡量倾向。 避免受易得性—错误衡量倾向影响的主要对策通常是按程序办事，包括使用几乎总是很有帮助的检查清单。 另外一种对策就是模仿达尔文那种特别重视反面证据的做法。 特别关注的是那些不容易被轻易量化的因素，而不是几乎只考虑可以量化的因素。 极其鲜明的形象在影响大脑方面的特殊威力可以被建设性地用于：（1）说服其他人得到正确的结论；或者（2）作为一种提高记忆的工具，把鲜明的形象一个接一个地和人们不想忘记的东西联系起来。 别只是因为一样事实或者一种观念容易得到，就觉得它更为重要。 十九 不用就忘倾向# 所有技能都会因为不用而退化。 避免这种损失的正确对策是使用一些类似于飞行员训练中用到的飞行模拟器那样的东西。 明智的人会终身操练他全部有用然而很少用得上的、大多数来自其他学科的技能，并把这当做是一种自我提高的责任。 对于一个善于思考的人而言，把他的技能编排成一张检查清单，并常常将这张清单派上用场，也是很重要的。 许多技能惟有天天练习，才能维持在非常高的水平。 聪明人在学习重要技能的过程中，如果没有做到真正精通这种技能，他是不会停下来的。 二十 化学物质错误影响倾向 # 二十一 衰老—错误影响倾向 # 二十二 权威—错误影响倾向# 人类社会被正式组织成等级分明的权力结构，这些结构的文化则增强了人类天生就有的追随领袖的倾向。 人类的权威—错误影响倾向会造成认知错误。 错误地理解权威人物的吩咐有时会造成悲剧性的后果。 米尔格拉姆的实验涉及到六种强大的心理倾向，它们共同发挥作用，造成了他那极端的实验结果。 选择将权力交给谁时要很谨慎，因为权威人物一旦上台，将会得到权威—错误影响倾向的帮助，那就很难被推翻。 二十三 废话倾向# “学术管理机构的首要任务，就是让那些无关紧要的人不要去干预那些有关紧要的人的工作。” 二十四 重视理由倾向# 人，尤其是生活在发达文化中的人，天生就热爱准确的认知，以及获取准确认知过程中得到的快乐。 你必须讲清楚何人将在何时何地因何故做何事。 人们只有一丝不苟地把某个想法的原因都摆出来，这个想法才最容易被接受。 不幸的是，重视理由倾向是如此强大，乃至一个人给出的理由哪怕是毫无意义的或者是不准确的，也能使他的命令和要求更容易得到遵从。 重视理由倾向这种不幸的副作用其实是一种条件反射，会出现这样的条件反射，是因为大多数人都认为有理由的事情是很重要的。 二十五 lollapalooza 倾向——数种心理倾向共同作用造成极端后果的倾向# 进一步提炼这些倾向的做法虽然是可取的，但却会使它们的实用性受到限制，因为对于像心理学这样的软科学来讲，有许多含糊之处是没办法弄清楚的。 心理倾向是可以改变的，认识各种心理倾向和防范它们的对策通常能够防患于未然。 一、卡尔·布劳恩的交流方法。二、飞行员训练中对模拟器的使用。三、酒瘾戒除组织的制度。四、医学院中的临床培训方法。五、美国制宪大会的规则 六、使用祖母的激励机制 七、哈佛大学商学院对决策树的强调 八、强生公司所用的类似于尸检的做法 九、查尔斯·达尔文在避免确认偏见方面作出的伟大榜样 研究中必须采用反确认偏见的“双盲试验”（Double Blind）方法。十、沃伦·巴菲特关于公开竞拍的原则：别去 列表所展现的思维系统中隐藏着什么特殊的知识问题？嗯，答案之一就是悖论。 有关心理倾向的知识难道不会带来道德问题和审慎问题吗？我的答案是会的。 （1）大量地采用逆向思维；（2）详尽地描绘心理学系统，让它能够像检查清单那样发挥更好的作用；（3）特别强调多种心理倾向共同发挥作用时产生的效应。 第五章 文章、报道与评论 # 如果说标准石油正在试图变得贪婪的话，那么它的表现可不够好# 公司的平均股价上涨了 22%。而在此期间，消费者价格指数上涨了大概 102%。 每年的红利增长率超过通货膨胀率大约一个百分点，可是和同期平均工资增长率相比，它又低了很多。 缴纳历年获取红利的 40% 作为所得税之后，他的购买力实际上是下降的。通货膨胀和所得税共同对总体投资回报（即考虑资本价值，也考虑收入）产生了影响，使得实际回报率是负的。 运转良好的东西，如果得到鼓励和支持，通常能够表现得更好。与之相反，运转糟糕的东西往往是无法被改正的，或者能够被改正，但其难度比你们可能想到的要难十倍。 巴菲特的副手……查理·芒格和伯克希尔的主席所见略同# 基于相互仰慕的交易会带来良好的商业结果和更少的法律纠纷 不那么沉默的合伙人# 不那么沉默的合伙人 巴菲特仍然遵循格拉汉姆谨慎分析的投资规则，但是巴菲特大胆地买进许多股票，按照格拉汉姆的标准，和其资产、利润或现金流比起来，这些股票的价格很低廉。他没有没有依照典型的格拉汉姆做法，在股价上涨的时候抛售。 买进一些优秀企业的股票，并永久地持有，或者至少在这些企业的根基腐朽之前持有。 过对资产负债表、社会和经济潮流进行了详尽的分析之后才挑选出来的。 总而言之，它们是复利机器。 有的股票虽然价格是其账面价值的两三倍，但仍然是非常便宜的，因为该公司有可能正处于增长的通道上，它的某个管理人员可能非常优秀，或者整个管理体系非常出色等等。 OPM（别人的钱）因素 保险公司的“浮存金”。浮存金是一个专门术语，它指的是赔款准备金和投保人预先缴纳的保费。这笔钱当然由延后赔付的保险公司所持有并使用。 “我们把我们的浮存金视为非常重要的资产，”巴菲特说，“我们的保费收入中有很大一部分是浮存金，这笔浮存金可能跟某些财产保险公司的全部资产相等——我们是有意这么做的。” 所谓的资本利得税根本就不是资本利得税。它是一种交易税。没有交易就不用缴税。 底线：过去三年来，伯克希尔的保险业务是盈利的。所以它的资金成本低于零，这意味着浮存金的回报是纯粹的利润。 很少人意识到巴菲特和芒格通过使用杠杆，从复利原则得到了更多的助力。 理解复合回报的力量和获取它的困难是理解许多事情的核心和灵魂 “和别人共事的要求是你必须把自己的想法清楚地说出来，光是这个规矩就能让你受益匪浅。” 客观也意味着“冷静”。当持有的股票不断上涨时，我们大多数普通人会感到眩晕。 另外一种极端情况是，我们喜欢某项投资，但却不敢去做，因为大家都说我们是错误的。 “在支付大笔成本和费用之后，想要跑赢大盘是很难的；然而有少数人能够做到，特别是那些把股市看成疯子玩的游戏并偶尔有一些定错价格的良机的人。”芒格说。 乐观主义在会计中没有容身之地# 乐观主义在会计中没有容身之地 合理的会计准则必须使那些将失败伪造为成功的公司难以侥幸逃脱。 从会计准则中得到最大安全的办法是，强制人们在做账的时候采用悲观谨慎的态度。 公认会计准则的系统是有缺陷的，这是因那些会计师事务所的欲望和它们的客户的希望使然。 Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/3533b0f5/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Books</category>
      </categories>
      <tags>
        <tag>Investment</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[格鲁夫给经理人的第一课]]></title>
    <url>%2Fposts%2F645bde4b%2F</url>
    <content type="text"><![CDATA[[TOC] 第一篇 早餐店的生产线 1 “生产”包含什么？ 格鲁夫给经理人的第一课 [美] 安迪·格鲁夫 | 中信出版社 Summarized by Zachary Completed on Jul. 12, 2018 ◆ 导读 格鲁夫教你高产出管理 “管理双权理论——知识权与管理权合一”的领先实务先声 一个“时间竞争”的时代，竞争的频率与步调将“化天为秒”、“化繁为简” 中层经理人：“一个经理人的产出，就等于他直接管辖和间接影响力所及的组织产出加总：经理人的产出 = 组织产出加总 =a×A+b×B+c×C+……”（a、b、c……代表管理杠杆率，A、B、C……代表各种管理活动。）有了这样清晰的概念，中层经理人即得以凭此提升本身的生产力（每单位时间的产出），而具体的方法就是：· 加速每一项管理活动执行的速度；· 提升每一项管理活动的杠杆率；· 调整管理活动组合，剔除低杠杆率活动，代之以高杠杆率的活动！ ◆ 序言 从 20 世纪 80 年代的巨变谈起 这些改变将会催生一个竞争激烈且难以预期的工作环境。 一个身处当前险境的经理人，必须培养出对“失序”更高的容忍力，但这并不表示你就得向失序举白旗；相反，你应该想办法控制周围的一切。 本书涵盖三个基本的概念。 第一个是“产出导向管理”（output-oriented approach to management） 应用在有形的制造流程和无形的管理工作上。 第二个概念是“团队意识”。 最重要的一点：“一个经理人的产出，便是他所管理和影响所及的下属工作的成效总和。” 经理人该如何促进下属的工作效率？ 为解决这个问题，我提出了“管理杠杆率”（managerial leverage）这个概念，它是用来衡量各种管理活动对提高团队产能的指标。高杠杆率的管理活动才能带来高产能。 团队中的每一个体都各尽所能，这个团队才会有最高的产能。这是本书中的第三个主要概念。 我们应该像消防队训练消防员一样地训练员工。因为消防队永远不知道下一场火灾发生在何时何地，所以他们平时就保持警戒，随时整装待发。 其次，公司应该减少管理层级以加强应变能力。 英特尔的管理哲学中，主管和下属间的例行性一对一会议是基本功课之一。它的主要目的在于彼此传授技能及交流信息。 为什么还要坚持举行一对一会议呢？因为你管理的下属虽然变多了，但一对一会议仍可以降低召开整体会议的频率。 不管是日本传统式的还是电子邮件式的办公室，一对一会议还是有必要的，但会议的目的将会越来越单纯。因此虽然你需要管理更多的下属，但会议的频率和所需的时间都会减少。 你在公司里是真有贡献还是只是个传话筒？ 本书的中心思想便是“公司的产能是经理人个别产能的总和”。 你的工作是不是无关紧要？ 你是不是总在追求新知识或是尝试新科技？ 第一篇 早餐店的生产线 #1 “生产”包含什么？# 你必须按预定的时间、可接受的品质以及可能的最低成本，依据顾客的需求制造及运送产品。如果你想了解生产管理这件事，请你先假设自己像我读大学时那样在一个 限制步骤 必须按预定的时间、可接受的品质以及可能的最低成本，依据顾客的需求制造及运送产品。 必须找出决定整个生产流程的“限制步骤”（limiting step），并围绕这一最关键的步骤拟订流程计划。 应该了解生产所需的时间并定下出货的目标时间。 必须找出决定整个生产流程的“限制步骤”（limiting step） 哪一项准备起来最耗时 以需时最长的煮蛋为限制步骤 生产管理 总产出时间 重要的是以需时最长（或最困难、最敏感、最昂贵）的项目为建立生产流程的基础 拟订流程计划应围绕着最关键的步骤 生产管理的术语来说，这些步骤“时间互偿” 必须围绕着最昂贵的项目设计流程 时间互偿的准则 三项基本的生产步骤 制造、组装及测试可以灵活运用在其他不同的生产活动中。 时间互偿的概念在这整件事中将被广泛运用。因为各步骤产出所需的时间事先都已经设定，所以步骤与步骤之间如何作最好的衔接也可以通过计算来设计。 本质上它们都有着相同的基本生产流程 最佳策略 找一个最具成本效益的方法来运用资源，这也是所有生产活动最佳化的关键。 但凡是能以最低成本达到理想的运送速度以及品质的，便是最佳方案。 必须了解各方案（诸如多请人、增加产能以及提高存货量）之间的利弊得失。 Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/645bde4b/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Books</category>
      </categories>
      <tags>
        <tag>Management</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mining XMR]]></title>
    <url>%2Fposts%2Fb8827cf7%2F</url>
    <content type="text"><![CDATA[[TOC] Dependencies Download xmr-stak Edit the default donation Compile Start the miner Mining pool Reference Mining XMR Dependencies# Ubuntu 1sudo apt -y install libmicrohttpd-dev libssl-dev cmake build-essential libhwloc-dev CentOS 123sudo yum -y install centos-release-scl epel-releasesudo yum -y install cmake3 devtoolset-4-gcc* hwloc-devel libmicrohttpd-devel openssl-devel makescl enable devtoolset-4 bash MacOS 123brew install hwloc libmicrohttpd gcc openssl cmake# For NVIDIA GPUsbrew cask install nvidia-cuda Download xmr-stak# Find the latest releases and precompiled binaries on GitHub under release 1wget https://github.com/fireice-uk/xmr-stak/archive/2.4.5.tar.gz Edit the default donation#123vi ./xmrstak/donate-level.hpp# Default: 2.0 / 100.0 = 2%constexpr double fDevDonationLevel = yourDonatedRate / 100.0; Compile# More details on official repo’s doc Ubuntu 12345git clone https://github.com/fireice-uk/xmr-stak.gitmkdir xmr-stak/buildcd xmr-stak/buildcmake ..make install CentOS 12345git clone https://github.com/fireice-uk/xmr-stak.gitmkdir xmr-stak/buildcd xmr-stak/buildcmake3 ..make install MacOS CMake options For NVIDIA GPUs: -DOpenCL_ENABLE=OFF For AMD GPUs: -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=ON For CPU-only: -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF 12cmake . -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl &lt;options&gt;cmake . -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=ON Start the miner#12chmod +x ./xmr-stak./xmr-stak Mining pool# mineXMR Connection Choose server Ping each connection to choose the fastest server Canada ca.minexmr.com is the fastest server in my test Mining ports 4444, 5555 for Low range CPU/GPU with starting difficulty 15000 7777, 80 &amp; 443 for Mid range CPU/GPU with starting difficulty 35000 6666 for SSL port with starting difficulty 35000 3333 for Modern High End with starting difficulty 1000000 Reference# XMR-Stak Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/b8827cf7/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Cryptocurrency</category>
      </categories>
      <tags>
        <tag>XMR</tag>
        <tag>Mining</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[经济机器是怎样运行的?]]></title>
    <url>%2Fposts%2Ffcb61246%2F</url>
    <content type="text"><![CDATA[[TOC] 经济机器是怎样运行的? Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/fcb61246/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Finance</category>
      </categories>
      <tags>
        <tag>Finance</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[斯坦福极简经济学]]></title>
    <url>%2Fposts%2Fc26503e5%2F</url>
    <content type="text"><![CDATA[[TOC] 斯坦福极简经济学 [美] 蒂莫西·泰勒 | XX 出版社 Summarized by Zachary Completed on Xxx. xx, 20xx ◆ 点评 01 人们卖弄的经济学原理只有 50% 是正确的 经济学家如何思考：对公共政策做出建议的经济学，大多只用到大学入门课程的程度。经济学家通常不是会令人愉快的伙伴。优秀的斯坦福大学医疗经济学 微观经济学篇 19 人均 GDP 是一个有用的比较工具 宏观经济学和国内生产总值：人均 GDP 较高的经济体，在很多方面都有较好的发展。宏观经济学的观点是总合的、由上而下，它把整个经济视为一个大型有机体，内 公司与政府治理：最不信任公司治理的人，最有可能相信政府可以监督公司。有些人信任企业，但不信任政府；有些人信任政治领袖，但不信任民营企业。经济学家则对谁都不信任。虽然企业领袖有 财政政策和预算赤字：财政政策是用来概括政府的租税与支出政策的一个专有名词。尽管现实世界的经济有短期波动与长期发展，宏观经济政策仍试图将经济导上正轨，达成四个主要的总体经济 金融市场与报酬率：就像商品市场或劳动力市场一样，资本市场也可以用同样的供需架构来解释。人们对资本市场有根深蒂固的偏见。在中世纪，罗马天主教认为索取贷款利息是一种“放高利 总供给与总需求：对整体经济来说，总供给量必须等于总需求量。制定经济政策时，同时追求四个不同的宏观经济目标（经济增长、充分就业、物价稳定、国际收支平衡）可能会引起混乱。经 从完全竞争到垄断：经济学家约翰·希克斯爵士曾说，垄断的最大好处，就是平静的生活。我们已经讨论了经济学家如何从微观经济的观点来看经济。也许可以把这个观点总结一下，即：微 经济增长：长期来看，经济增长是唯一会影响生活水平的因素。这里要问一个问题：你是比较喜欢生活在现代化的美国社会，有一般的生活水平与 6 万美元的家庭年收入，还是比较喜欢生活 反经济周期的财政政策：租税是自动的、反经济周期的财政政策。你可能已经注意到了，探讨宏观经济问题有两种时间范围：凯恩斯学派属于短期架构，而新古典学派则属于长期架构。本章 全球经济观点：未来的经济在不断的挑战与崩解中将出现巨大机会。这个世界的经济变得越来越整合。世界贸易组织等机构正在减少贸易与资本流动的法规障碍；通信与信息交流变得更便利 价格下限与价格上限：价格管制的问题在于是否能达成目标，或适得其反？如果你曾想在纽约或旧金山租房子，就会知道价格高得吓人。房地产的需求是如此强劲，哪怕再不起眼的房子也 劳动力市场与工资：在每个人才市场，工资的均衡点是由该市场的劳动力供给量相对于劳动力需求量而决定的。经济行为通常指的是所生产的商品或服务，但也可以说是每个人早上起床上 负外部性与环境：解决环境污染的方法，已经从命令与控制转变为市场导向的激励设计。环保人士有时会把自由市场视为环境的敌人，其实自由市场并不是环境的最大敌人。相较于高收入 失业与通胀之间的取舍：失业率与通胀率，从长期来看没有任何的取舍关系。低失业率与低通胀率——这两个宏观经济目标之间的取舍关系相当令人困惑，细心的读者可能已经注意到其中 联邦储备委员会的权力：美联储主席是世界上最有权力的经济要角。谁是世界上最有权力的经济要角？美国是全球最大的经济体，所以你可能以为最有权力的经济要角是美国总统。虽然我 个人投资：评估投资标的时，要衡量四个要项：报酬率、风险、流动性、税负。家庭所面临的重要的经济决策之一，就是如何为退休生活而储蓄。退休前需要存的钱多得吓人，没人有机 管制与解除管制：若能尊重激励因素与市场力量，管制手段也可以运作得很好。在某些产业中，市场竞争不可能正常运作，反而会导致所有厂商蒙受巨大损失而无以为继。19 世纪后期 收入不均：根据研究估计，收入不均的扩大，约有两成是由全球化对工资造成的压力导致的。贫穷与收入不均（inequality）的主题经常纠缠在一起，但它们完全是两回事。 失业：劳动需求量下降，才会导致失业。失业是什么？这个问题似乎简单到不需多费口舌。没有出去找工作的家庭主妇，是否该列入失业人口？如果有人对自己未来的薪资水平有不切实 通货膨胀：温和的通货膨胀，优于过度补贴所造成的通货紧缩。通货膨胀会侵蚀薪水可以买到的东西。在市场经济的任一时间点，有些价格会上升，有些则会下降。但在通胀的情况下， 预算赤字与国民储蓄：短期的预算赤字，在经济衰退期间不是一件坏事。如同先前讨论的，2009 年与 2010 年美国政府的预算赤字非常庞大，大约是 GDP 的 10%。其实，预算 正外部性与技术：即使有法律保护，创新成功的公司也只能拿到它所创造价值的 30%～40%。托马斯·爱迪生（Thomas Edison）的第一项发明是投票计数器，性能 信息不完全与保险：信息不完全造成了保险市场难以解决的失衡问题。想象一下，你打算买部二手车，但对于汽车引擎根本一无所知。你知道你的信息不完全，所以去读了《消费者报 贸易差额：贸易顺差与逆差，谈的是金钱的流向，以及向哪边的流动比较大。很多经济统计资料常被误解，但没有比贸易差额（balance of trade）更甚的了。首先 公共物品：顺着每个人自利的本性，将无法创造公共物品，所以政府必须征税来建设。你开车上班要经过高速公路吗？如果你家失火了，当你拨 911 电话时，你期待有人接电话吗 汇率：利用稳定或缓慢变动的汇率，可创造有利于贸易与投资的环境。1995 年，旧金山联邦储备银行经济研究员肯尼思·卡萨（Kenneth Kasa）发表下列看法： 弹性：思考需求与供给有无“弹性”这个基本观念，就可对市场做出有凭有据的预测。抽烟是一个很花钱的习惯。美国香烟税每包约 1 美元，还有各州香烟税平均每包 1.45 美 贫穷与福利计划：社会保障网不应是令人难以起身的吊床，而应能缓冲你掉落下来时的力道，并让你再弹上去。市场可以轻易地为某些人创造高收入，而让其他人处于贫穷状态。 货币政策：货币政策是否应该用来应对金融泡沫，这一点是有争议的。当经济衰退来袭时，中央银行是保卫宏观经济的第一线。在经济不景气时，用较宽松的货币政策来降低利率 分工：经济学的一部分，即是了解并分析市场经济每天所协调完成的丰功伟绩。我们现今的世界，即使是看起来简单的消费品，也经常通过一个涉及全球的复杂过程来生产，让 供给与需求：知道每样东西的价格，却不知其价值，这就是经济学家。你应该开始了解一下经济学家是如何看这个世界的：分工导致商品与服务的交换，社会必须以某种方式协 反托拉斯与竞争政策：独家交易、掠夺性定价等名词的定义，看起来模糊且不确定，但的确就是如此。经济学家看似终生歌颂竞争市场，但几个世纪以来，他们已充分意识到， 货币银行学：银行实际上是通过放款的过程来创造货币。货币是什么？这似乎是个简单的问题，但答案其实出人意料地复杂。货币不只是你钱包里的钞票与硬币，也不只是在各 国际贸易利益：相似商品的跨国界贸易会给国内生产者带来更激烈的竞争，而竞争有助于低价和创新。大多数经济学家都赞成国际自由贸易，我也是。但是，即使我相信贸易就 保护主义论战：保护主义是指政府对国内产业提供间接补贴，由国内消费者用较高的价格埋单。虽然大多数经济学家都支持自由贸易的力量，但他们也承认自由贸易有可能造 国际金融风暴：遭遇金融危机的国家都有某些共同点，其 GDP 会大幅萎缩。每隔几年，新闻头条都会出现某国经济受到国际金融危机冲击的报道。回溯 20 世纪 80 年代， 折现值 短期看需求，长期看供给 总供给与总需求：对整体经济来说，总供给量必须等于总需求量。 公司与政府治理 财政政策和预算赤字：财政政策是用来概括政府的租税与支出政策的一个专有名词。 反经济周期的财政政策：租税是自动的、反经济周期的财政政策。 金融市场与报酬率：就像商品市场或劳动力市场一样，资本市场也可以用同样的供需架构来解释 从完全竞争到垄断：经济学家约翰·希克斯爵士曾说，垄断的最大好处，就是平静的生活。 经济增长：长期来看，经济增长是唯一会影响生活水平的因素。 预算赤字与国民储蓄：短期的预算赤字，在经济衰退期间不是一件坏事 全球经济观点：未来的经济在不断的挑战与崩解中将出现巨大机会。 价格下限与价格上限 劳动力市场与工资：在每个人才市场，工资的均衡点是由该市场的劳动力供给量相对于劳动力需求量而决定的 负外部性与环境：解决环境污染的方法，已经从命令与控制转变为市场导向的激励设计。 失业与通胀之间的取舍：失业率与通胀率，从长期来看没有任何的取舍关系。 联邦储备委员会的权力：美联储主席是世界上最有权力的经济要角。 个人投资：评估投资标的时，要衡量四个要项：报酬率、风险、流动性、税负。 管制与解除管制：若能尊重激励因素与市场力量，管制手段也可以运作得很好。 收入不均 失业：劳动需求量下降，才会导致失业。 通货膨胀：温和的通货膨胀，优于过度补贴所造成的通货紧缩。 正外部性与技术：即使有法律保护，创新成功的公司也只能拿到它所创造价值的 30%～40%。 信息不完全与保险 贸易差额：贸易顺差与逆差，谈的是金钱的流向，以及向哪边的流动比较大。 公共物品：顺着每个人自利的本性，将无法创造公共物品，所以政府必须征税来建设。 汇率：利用稳定或缓慢变动的汇率，可创造有利于贸易与投资的环境。 弹性 贫穷与福利计划 货币政策：货币政策是否应该用来应对金融泡沫，这一点是有争议的。 分工 供给与需求 反托拉斯与竞争政策：独家交易、掠夺性定价等名词的定义，看起来模糊且不确定，但的确就是如此。 货币银行学：银行实际上是通过放款的过程来创造货币。 国际贸易利益：相似商品的跨国界贸易会给国内生产者带来更激烈的竞争，而竞争有助于低价和创新。 保护主义论战：保护主义是指政府对国内产业提供间接补贴，由国内消费者用较高的价格埋单。 国际金融风暴：遭遇金融危机的国家都有某些共同点，其 GDP 会大幅萎缩。 宏观经济学和国内生产总值 经济学家如何思考 制定经济政策时，同时追求四个不同的宏观经济目标（经济增长、充分就业、物价稳定、国际收支平衡）可能会引起混乱。 宏观经济问题有两种时间范围：凯恩斯学派属于短期架构，而新古典学派则属于长期架构。 在某些产业中，市场竞争不可能正常运作，反而会导致所有厂商蒙受巨大损失而无以为继。 贫穷与收入不均（inequality）的主题经常纠缠在一起，但它们完全是两回事。 贸易差额（balance of trade） 分工导致商品与服务的交换，社会必须以某种方式协调所有的生产与消费。 宏观经济学的观点是总合的、由上而下，它把整个经济视为一个大型有机体，内容包括经济增长、失业、通胀、贸易差额等。 微观经济牵涉到市场上（商品、劳动力与资本市场）供给与需求互动的力量。 短期、几年内的财政政策，通常是指从一次经济衰退结束到下一次经济衰退开始。 课这些税的目的是抑制抽烟吗？还是增加政府收入？要回答这个问题，我们必须先思考香烟税如何影响香烟的需求量，也就是经济学家所说的“弹性”（elasticity）。许多公共政策以及价格策略的议题，都依赖于了解弹性这个概念。 政治压力要求限制进口，这些措施一般称作“保护主义”，因为法律限制进口，是为了保护国内产业免于国外竞争。 在这些目标中做取舍。为此，我们需要一个有组织的架构来思考这个问题。 供需观点来看，退休储蓄的决策牵涉到资本市场的供给面。 出口大于进口，该国就有贸易顺差（trade surplus）。进口大于出口，该国则是贸易逆差（trade deficit）。 主要是通过市场安排来调节它们的经济，且或多或少受到政府的影响。 人类所面临的三个最困难的问题，答案可能会是：（1）生命的意义是什么？（2）量子力学与广义相对论之间的关系是什么？（3）外汇市场是怎么回事？ 财政政策，也就是政府的租税与支出政策如何影响宏观经济。 最常见的基本架构，称作总供给与总需求模型（aggregate supply and aggregate demand model）。 通货膨胀，是指任一商品与服务的价格全面上升的现象。 总需求 =C+I+G+X-M，也就是消费 + 投资 + 政府支出 + 出口 - 进口。 全球化（这个时代的流行语之一）的程度如何？ 货币政策，也就是中央银行如何影响国家的利率和贷款金额。 供给与需求是不可避免的力量，但不是供给与需求的所有结果都是人们想要的 简单的衡量指标，就是出口占全球 GDP 的比例。 实施保护主义有几种方式。 “公共物品”（public goods） 企业和政府组织要如何治理？ 进口配额（import quota）是对进口采取数量限制 三个因素 检视全球经济现状时，先从全球 GDP 和人口开始是很有用的，然后再比较不同类型的国家的 GDP 和人口。 “非劳动力”（out of the labor force） 政府借款是国民整体储蓄的一部分。 最明显的是政府支出 关税（tariff）是提高进口成本的一种税。 消费和投资也会受到租税政策的显著影响 总供给是宏观经济中所有产品的总供给，它受到潜在国内生产总值（potential GDP）的限制。 匹配。菲利普斯曲线 公共物品有两个重要特性 减税可以刺激消费与投资，增税则会减弱它们。因此，财政政策有能力使总需求移动。 商品、劳动力与资本 政府有可能干预并影响特定市场的商品价格。价格管制的问题在于所使用的方法是否能达成目标，或可能适得其反？ 标准的分类方法 人一生累积财富的关键，在于复利（compound interest）的力量。 非竞争性（nonrivalrous） 因为需求弹性的定义是需求量变动的百分比除以价格变动的百分比 代理人问题（principal-agent problem）的分析架构，可以用来分析治理议题。 首先划分高收入国家（美国、加拿大、欧盟各国、日本等） 基本的方法是定义“一篮子”商品，其中每个商品的数量代表一个家庭在某段时间内的典型消费。然后，你可以计算购买整篮商品（不是任一个别商品）的总成本随着时间而变化的情况。 核心的经济学概念是“外部性”（externality） 非排他性（nonexcludable） 本章将讨论独占或垄断和其他不完全竞争的市场是如何运作的 潜在 GDP 的定义是，当所有的资源或人力都被充分运用或就业时，社会所能生产的东西。 然后把世界按区域划分（东亚与太平洋地区、东欧与中亚、拉丁美洲与加勒比海区、中东与北非、南亚与撒哈拉沙漠以南的非洲地区）。 指在直接的买家与卖家之外，有第三方直接受到这笔交易的影响。 这五人由总统提名，参议院表决同意 如果政府预算赤字增加，以下三件事的某些组合必定会发生：私人储蓄增加，私人投资下降，或外资流入增加。 贫穷让人们没有能力负担基本的生活必需消费，收入不均更多的是影响人们对公平性的感受。 劳动力需求，是工资或薪酬与雇主所需工作数量之间的关系 代理人问题中，委托人这一方想激励对方，也就是让代理人以某种方式尽力工作。 讨论政府消除竞争行为的政策 说明了为什么人们重视经济增长，更甚于在某个时间点变得比别人富有。 使社会的总需求增加或购买力提高的政策，称作“扩张性”（expansionary）宏观经济政策，或称作“宽松”（loose）的财政政策。 政府的支出占该国 GDP 的 1/3、1/2 甚至更高比例，在全世界都很普遍。 在没有规范的市场中可能发生的种种问题，包括污染、贫穷、收入不均、功能失调的保险市场等。 自由市场并不保证会给发明者奖励。 商品市场中，产品从生产厂商流向家庭；家庭对这些产品的付款则是流回厂商。用经济学家的术语来说，厂商是产品的供给者，而家庭是产品的需求者。 美联储主席对货币供给与利率有很大的权力 经济增长会随着时间产生复利效果。 国际贸易为什么能为所有参与的国家创造双赢？ 预算赤字增加引起私人储蓄增加的可能性。 真正的问题是政府无力偿还债务。 包括减税与增加支出，两者都会使更多的钱流入社会。 这项权力不会直接受到国会或总统的限制。 贸易的潜在利益可以分为三大类：绝对优势（absolute advantage）、比较优势（comparative advantage）以及动态增益（dynamic gains） 。这样的取舍关系是宏观经济政策的主要问题之一，称作菲利普斯曲线（Phillips Curve） 财政政策（fiscal policy），是经济学家用来概括政府的租税与支出政策的专有名词。 工资增加所减少的劳工需求量，取决于劳动力需求的弹性。 2009 年，全球 GDP 大约是 58 万亿美元（按目前的美元价值推算），全球人口为 68 亿，因此，全球人均 GDP 约为 8500 美元。 经常账户余额（current account balance）是单一统计值，可描绘一个国家贸易余额最全面的轮廓。 如果社会有能力生产的东西发生变化，总供给就会移动。总供给移动的两个主要原因是大量企业的技术发展以及生产条件发生剧烈改变。 美联储主席（美国中央银行行长）是世界上最有权力的经济要角。 “企业”的含义 根据法律，联邦政府在企业合并案成立前有权审查。 “收缩性”（contractionary）政策或“紧缩”（tight）的财政政策。 价值（FV） 市场竞争在公用事业中不易运作 “李嘉图等价定理”（Ricardian Equivalence） 创意地结合这两个概念，以食物成本来决定生活成本，从而得出贫穷的定义。 家户收入 5 等份评估法 现值（PV） 当谈到价格时，价格“高”是好是坏取决于你站在交易的哪一方。 劳动力市场中，劳动力从家庭（也就是工作者）流向雇用这些人的厂商。 “1+ 经济体的增长率”的 t 次方 企业所有权可分三类：独资（proprietorship）是由单个人所有；合伙（partnership）是由一群人所有；公司（corporation）则是有法律实体的组织，独立于其持有者，可能由一人或一群股东所有。 把弹性分成三大类来思考是有帮助的，这个方法适用于需求弹性与供给弹性。 t 是年期数 代理人问题通常涉及信息不完全，委托人很难知道代理人是否努力（或有效率地）工作，或是依委托人的最佳利益来做事。 劳动力需求在短期内通常相当无弹性，但是长期来看，当厂商有机会整顿生产时，劳动力需求就会有更大的弹性。 [PV（1+r）t=FV] 会降低社会的购买力。这种财政政策的基本目的是平衡经济衰退和扩张。 美国把大部分黄金安置在肯塔基州的诺克斯堡。 我们大多数人同时扮演这两个角色——工作时是生产者，买东西时是消费者。 经济学不是一套答案，而是追寻答案的架构 投资”可以指供给或需求 公司以工资与员工福利的形式付费，流向工人及其家庭。在这个市场里，供需的角色与商品市场颠倒 不是指由政府提供的有益的（good）每样东西。 从贸易条件来看，如果一个国家可以用比另一个国家更高的生产力来制造某商品 需求无弹性的商品，弹性小于 1。 汇率只是一个价格，一国货币可以依此价格换成另一国货币。 保护主义，用经济学术语来说，是政府对国内产业提供间接补贴的一种方式，由国内消费者用较高的价格埋单。 标准方法是把收入分配分成 5 等份、10 等份甚至 100 等份，然后算出每一等份的人的收入占整体收入的比重。 是资本供给时，我会用“金融投资”（financial investment） 以起始金额（现值）乘以“1+ 利率”的 t 次方，t 是这笔钱储蓄的年期，就会得到未来值 要认清把某个东西归类为非公共物品，不表示它就没有公共政策面的经济性争议。我们称为公共物品的很多东西，也并非完全是非竞争性或非排他性的，但它们已经接近这两个特性，使得私人市场很难提供。例如：· 公共保 要认清把某个东西归类为非公共物品，不表示它就没有公共政策面的经济性争议。 价格上限造成供不应求 我们可以把经济学的研究分成两大类：微观经济学和宏观经济学。微观经济学是从个人、企业的观点展开研究，宏观经济学则是探讨经济的整体观点 两种财政政策：自发性或权衡性 强势货币表示可以换到的他国货币变多，弱势货币则表示可以换到的他国货币变少。 基本的哲学是在两者间取得平衡：美国基本上是一个自由市场，允许企业自己做选择，但如果企业的选择会限制竞争，且会转嫁成本给消费者，消费者就会要求政府介入。 原因就在于它是由金融危机引起。 所有家庭成员提供基本饮食要花多少钱（采用此数据的优点在于，它会根据家庭规模自动调整） 扩张性或宽松的货币政策，不会降低自然失业率。 研究经济学的理由就是“为了避免被经济学家欺骗”。 经常账户余额的四个类别概况 ￼ 国防、养老、医疗（尤其是医疗照顾与医疗补助）以及借款利息 就新技术而言，生产者与消费者交易之外的人，不需补偿发明者就可从中受益。因此，创新是正外部性（positive externality）的一个例子。 那么这个国家就具有经济学家所说的绝对优势。 高度无弹性的商品，往往很难用较便宜的商品来取代。 来建立资产的资本需求时，我会用“实物资本投资”（physical capital investment） 国际金融危机有一种常规的模式，细节则因不同案例而有所差异。 经济政策的四个目标 自然失业率则取决于动态市场中劳动力的供给与需求 污染是负外部性（negative externality）最重要的例子。 有一个古老但贴切的比喻：宏观经济学就像在看森林，而微观经济学则像看个别的树木。学好经济学的诀窍，就是对森林和树木两者能有一个整体的理解 创造了价格上限（price ceiling）：产品价格的最大值 工资改变了劳动力需求量而非整条需求曲线。 取决于当下的特定条件以及政治优先次序 商品 这些被管制的产业都有一个共同特征：必须依赖某种网络建设。 重点在于提高总需求，使经济往某个方向移动。 国家在危机发生前也会出现大量的外资净流入（通常达到 GDP 的 4%～7%）。 供给创造需求？需求创造供给？ 货币的三种功能定义 研究宏观经济政策的四大目标，然后以一个分析架构来思考目标之间的关系，再以两组工具来完成这些目标。 美国联邦储备银行是一个准政府机关，亦即它是在实际上由民间银行拥有的组织里，融入政府派任与法律规范。 变成海外金融投资的热门标的，当外资涌进其银行与金融体系时，银行放款大幅增加。 推动创新的关键因素，是创新者从研发投资中得到大部分经济利益的能力，经济学家称之为“专属性”（appropriability）。 大部分情况下，雇主在计算薪资福利时，很难排除主观因素。 产出（也就是不同的商品与服务）的需求变动，会改变劳动力需求 只是说一个国家对特定商品的生产力胜过另一个国家。 通货膨胀有各种不同的衡量方式，取决于篮子里所选取的商品。 服务 由于信息不完全，风险和不确定因素就会来搅局。 总需求是指整个社会对各种产品的需求。 需求有弹性的商品，弹性大于 1 区域经济扫描 消费者价格指数（Consumer Price Index,CPI）是一个常见的通胀衡量指标，它由美国劳工统计局根据消费者支出调查（非常详细地调查家庭实际购买的东西）计算而得。 外汇市场的供给方是谁，需求方是谁？ 把总需求定义为由五个要素构成，那就是 C+I+G+X-M 最著名的论点是保护主义可以使国内工人受益。 商品市场、劳动力市场、资本市场如何运作，然后扩大范围，讨论不受约束的市场可能会遇到的问题，例如垄断与缺乏竞争，污染与环境危害，新技术、创新和大型公共基础建设的缺乏，贫穷和收入不均持续或扩大，以及保险市场运作失衡 宏观经济政策的四个目标是：经济增长、充分就业、物价稳定和国际收支平衡。 为什么薪资可能有“向下刚性”（sticky downward）及其政策含义。 谁能监督代理人？ 东亚与太平洋地区较大的经济体，包括中国及所谓的东亚“四小虎”（泰国、马来西亚、印度尼西亚和菲律宾）等国。 外资流入使股票需求大幅增加，很快推升股票市值 用它们来决定 GDP 分工使工人能聚焦于他们最适合做的事，又使企业能充分利用当地资源。 资本市场里，家庭将金钱作为投资，而成为资本，无论是直接购买股票还是间接把钱存在银行，这些钱又会投资或借给厂商；家庭则收到厂商支付的股利与利息。因此，家庭是资本的供应者，而厂商是需求者 发挥自身的优势，两个国家都会变得更好。 在国外旅行的美国游客 就是消费 + 投资 + 政府支出 + 出口 - 进口 对污染等负外部性的适当措施，是找到一个使生产者正视社会成本的方法； 价格上限并无法阻止供给与需求的运作力量 国际投资收入 需求量有高度的伸展性，它可以大幅移动以对应价格的变动 进口可能影响国内工人可获得的工作总量，进口可能影响平均薪资水平，进口可能造成产业崩溃、工人失业，进口可能导致整个社会的工资不均加剧（即使平均工资增加）。 只要你的目标是提高总需求，至于要怎么做，从宏观经济的观点而言，是次要的。 评估企业和政府领导人的产出绩效，难度可能更高。 消费通常是 GDP 的最大构成要素，投资是变动最大的，政府支出也许是最直接的政策目标工具。 之后，这些促使银行额外放款及股市上涨的外资就会停手或撤出。 讨论宏观经济政策的架构称作总供给与总需求模型 相反，对创新等正外部性的适当措施，则是帮忙补偿生产者的创新成本。 恐怖组合：通货紧缩 + 负实际利率 生产者价格指数（Producer Price Index,PPI），它是根据生产者购买的一篮子商品（例如钢材、石油及其他原料或设备）来计算的。 这个架构有助于构建宏观经济分析，并使我们能够分析经济增长、失业、通胀和贸易差额之间的取舍关系。 指出此系统背后的基本理由，那就是照料家庭涉及取舍的考虑。 经济学家不是用货币形式来定义货币，而是把社会上具备下列三个功能的任何物品定义为货币：交易媒介（medium of exchange）、价值储存（store of value）、计账单位（unit of account）。 用激励取代控制 一个国家在所有领域的生产力都有绝对优势，另一个国家在所有领域都有绝对劣势。 “命令与控制”（command and control）是经济学家专指这类管制政策的用词，它规定了可合法排放污染的最大量。 工人害怕新技术会减少对他们劳动力的需求且压低他们的工资。 经济学的三个基础问题开始：· 社会应该生产什么？· 应该如何生产？· 谁来消费所生产的东西？ 在美国销售的外国公司是美元的供给者以及当地货币的需求者。 紧缩的货币政策，借由提高利率及降低总需求可对抗通货膨胀。 单边移转 外资与汇率联动 两组主要工具，是财政政策和货币政策。 最常见的方法是成本加成管制法（cost-plus regulation） 想投资其他国家的美国投资者，在外汇市场是美元的供给者 财政政策是政府税收和支出的政策，包括政府预算和预算赤字。 批发价格指数（Wholesale Price Index,WPI），它观察的是零售商支付的批发价格。 保护主义是一种补贴手段，有助于留住某些产业的就业机会。然而，我们没有理由相信保护主义能增加社会的就业机会。反之亦然，没有证据显示国际贸易会使就业机会减少。 还有另一个问题是委托人数量庞大，以至出现“搭便车”现象。 如果人们要在生活必需品之间做取舍才能养家糊口，那么就已符合贫穷的定义。 需求单一弹性的商品，弹性等于 1。 竞争与规避竞争的戏法 货币政策是指中央银行的政策，它会影响利率、信用以及社会上借款与放款的数量。 经常用利率作为资本报酬率的具体例子 交换价值与使用价值 GDP 平减指数（GDP Deflator）则包括 GDP 的每个项目。 经济增长、失业、通货膨胀、国际贸易、货币政策与财政政策。 在外汇市场，谁需要美元？当然就是上述三个群体的相对方。 该地区经济长期增长主要归功于良好的基础：高储蓄率、高国内投资率，以及致力于通过扩大公共教育建立人力资本。 厂商雇用工人的意愿，最终取决于生产力，即劳工生产多少东西。 交易媒介是可以拿来交换任何待售商品的某样东西。 萨伊定律（Say’s Law） 反经济周期的财政政策可以用两种方式实施：自发性或权衡性。 “国内生产总值”（Gross Domestic Product,GDP） 在实务上，人们储蓄的资金量似乎没有随着报酬率的上升而大幅增加。相反，人们储蓄的金额似乎更取决于习惯、文化形态以及雇主因素。 公司的担保、保证和服务合约将有助于承担消费者的风险； 这些国家有很强的意愿引进并运用技术，也极愿意为生产者提供市场激励，融入全球经济。即使是中国，也从高度集中的计划经济，转向市场经济。 自发性稳定机制是指政府的财政政策在不需要动用法律的情况下，当经济衰退时自动刺激总需求，当经济扩张时自动抑制总需求。 供给无弹性的商品，弹性小于 1。 一个国家在生产某商品或服务时，若生产力优势最大或生产力劣势最小，我们就说该国生产这项商品或服务有比较优势。 商标和品牌则可以让消费者对商品质量比较放心。 CPI 和 GDP 平减指数，可能是你最常遇到的衡量方式。 美联储（或任何中央银行）的主要工作是制定货币政策，这有别于国会制定的财政政策。 国际资金一旦转向，转变可能又快又猛。 一个国家经济规模的衡量标准。 如果个别委托人缺乏控制代理人的力量，那么代理人将缺乏动力完成有利于委托人的事。 主张“供给创造其自身的需求”（supply creates its own demand）。 一般而言，工资将随着时间，由劳工生产的商品价值来决定。 履历和推荐人有助于减少信息不完全的问题 定义是：一个经济体一年内所生产的最终商品和服务的总价值。 分工使企业得以利用规模经济（economics of scale）。“规模经济”是个专有名词，用来说明大厂相对于小厂可以用较低的平均成本来生产 即使是坏掉的钟，一天也有两次时间是准确的。 货币政策是指货币供给的扩张或收缩，其目的是助长或抑制总需求。 完全无供给弹性的经典例子是毕加索的画作——无论价格涨多少，供给量都没办法更多 GDP 可以根据生产与销售的商品价值，或需求与购买的商品价值来衡量。 当某些人从公共物品中受益，却没有付出相对合理的成本时，经济学家把这个问题称作“搭便车”（free-rider）。 经济学家的观点来看，资本需求也是借款人的资金需求量与他们需要支付的报酬率之间的关系 是如何自动发生的 经济衰退且劳动需求下降时，公司宁可不削减工资，而是选择停止雇用或遣散现有员工。 东欧与中亚地区最大的经济体是俄罗斯，但波兰与土耳其的 GDP 也很可观。 中央银行有三个传统工具，可在银行与货币的架构内运作 光谱的一端是政府完全管制：政府机关决定生产什么、如何生产以及谁来消费。在光谱的另一端，你可以想象有一个社会，由个人决定这三个问题的所有答案。 资金大量涌入，以致当地经济无法妥善管理。经济学家称这个过程为“过度调整”（overshooting）。 持有的资质证明也是如此。 三个市场中的第一个是商品市场，其价格从何而来？ 四种竞争类型 思考劳动力供给。再次重申，供给是一种关系，在这里是工资与劳动力供给量之间的关系 衡量竞争程度 金融市场，信用评级、放款担保人和抵押品等机制也有一样的效果。 法定准备金（reserve requirement）、贴现率（discount rate）、公开市场操作（open market operation）。 四大企业集中度（four-firm concentration ratio） 作为价值储存的工具，货币是可以暂时持有而不会失去有效购买力的物品。 某种程度的收入不均其实是不可避免的。 ￼ 保护知识产权发展出四种形式： 替代方案，是价格上限管制法（price-cap regulation） 前四大企业的市场占有率（简称市占率）加总起来 政府介入与制定信息披露的规则，在大多数情况下，这类机制能让市场顺利运作 规模经济的概念，有助于这个世界合理化地运作。 供给有弹性的商品，弹性大于 1。 一端是“完全竞争”（perfect competition），有很多小企业在制造几乎一样的产品；另一端是“垄断”（monopoly），单一生产者在特定市场几乎拥有全部的营收；介于两者之间的是“垄断竞争”（monopolistic competition），是指很多企业争相销售稍微不同的产品 专利（patent） 在整个人口中，会有一些随着年龄而来的收入变化。 “挤出效应”（crowding out） 量化宽松（quantitative easing）。 削减国防支出、社保退休金及医保都是不得人心的选择，但它们是大宗预算，而其他项目都不够大，就算削减也不足以产生很大差异。 当收入提高时，税收会跟着自动提高。因为个人所得税是累进税制 随着资金大量涌入这些国家，然后撤出，汇率会剧烈波动。 贫穷线定义的实际收入并不高。 政府在这里只提供市场经济的基础：追诉盗窃、履行合约、提供最低限度的公共基础建设（例如国防），这常被称为“守夜人国家”（night watchman state） 不同的产业（建筑、农艺、投资、电子）也会有好或坏的年头。 资金供需组合起来，在某个均衡报酬率下，你会得到储蓄与投资金额的均衡点。 对非经济学家来说，价格是关于个人价值取向的价值承载（valueladen） 这个篮子里的实际内容，会随着每个时期而变化。 法定准备金是银行不可贷放出去的存款比率。 经济理论也认为国际贸易与国家的整体就业水平无关。周期性失业与经济繁荣和衰退有关，自然失业则与劳动力市场因素有关，这两种失业都与贸易无关 商标（trademark） 供给单一弹性的商品，弹性等于 1。 经济学家试图避免这类价值判断，我们称之为“钻石与水的矛盾”（diamond-water paradox） 因此，租税是自动的、反经济周期的财政政策，或者说它是一种自发性稳定机制。 联邦政府支出占 GDP 的比重几十年来没有任何增加。 当通胀率出现负数时，称作通货紧缩（deflation），意即货币的购买力不但没有随着时间变低，反而随着时间变得更高。 搭便车的问题在经济分析上非常重要。 道德风险与逆选择 完美的平等不是一个可达成的目标，较好的问题可能是：目前收入不均的程度合理吗？ 命令与控制管制法的替代方案，遵循了市场导向的环保政策大方向。这些政策试图以市场激励来运作，而非命令厂商采取某种行动。 最后是“寡头垄断”（oligopoly），它有点接近垄断，只是并非由一家企业囊括全部的市场营收，而是少数企业在特定市场拥有大部分或全部营收。 没有哪个篮子可以代表现实世界中需求不断转移的现况。 试试经济增长率为 8% 的情况。老实说，8% 就长期而言是上限了。 金融危机发生时，一国货币贬值一半以上是很常见的事。记住，外汇市场会受到自我实现预期的影响。 国富论》里区别了“交换价值”（value in exchange）与“使用价值”（value in use） 在支出面 如果美国专注于计算机生产，而墨西哥聚焦于纺织品生产，那么这两种商品的总产出就会变得更高，然后这两个国家可以彼此贸易，这样双方都会变得更好。 货币是整个经济的价值衡量标准 这些政策有几种方式 固定一篮子商品会发生的另一个问题来自技术变化。 什么因素使劳动力供给曲线移动？ 其一是对生产者每单位的污染课征污染税或污染费。 问题在于“流动性” 价格下限导致供过于求 “管制俘虏”（regulatory capture） 凯恩斯法则（Keynes’s Law） 赫芬达尔 - 赫希指数（Herfindahl-Hirschman Index，HHI，或称赫氏指数）是一个更精确的竞争程度衡量指标。这个公式考虑每家企业的市占率，先算出每家企业的营收占市场总营收的百分比，然后把每家企业市占率的平方加总起来。 为什么弹性是用价格与数量变动的百分比来计算的？这个方法的主要优点是可以用来比较各种不同的市场 汇率波动甚至可能引发更大问题。 著作权（copyright） 但家庭对食物的平均支出在过去几十年实际上是下降的，目前大约是 1/5 处理这个问题的一种方式，是观察收入分配的流动性。 完全竞争产业的主要特征是价格接受（price taking） 实际利率（real interest rate）等于名义利率（nominal interest rate）减去通胀率。 经济很好时，人们不太需要政府的援助计划 人口结构变化也会改变劳动力供给 考虑另外三个因素：风险、流动性与税负。 主张“需求创造其自身的供给”（demand creates its own supply） 企业必须接受市场给定的价格 实际上，弱势美元可限制企业的花费，同时维持高利润。基于这种模式，美元走强往往会伤害出口商，帮助进口商，并会减少贸易顺差，增加贸易逆差。 贸易竞争的好处 这类政府支出会自动减少，从而发挥了自发性稳定机制。 下一站是拉丁美洲与加勒比海地区，其中较大的经济体是巴西、墨西哥与阿根廷。 此外，奥珊斯基使用的节约食物计划，并不能代表每天的生活水平，它只意味着家庭在一段有限时间内勉强糊口。 但当你借钱时，意即当你取得资金时，你是在当下获准使用这笔钱，并在以后还款 保护主义是对产业的补贴，无疑有助于该产业的工资增加。然而，这并不表示整个社会的工资都会变高。 消费者很容易找到替代品。 也可以从需求面衡量 GDP 借由百分比，就可以不必考虑汇率变动或英制与公制度量衡单位的复杂换算 社会趋势也会影响劳动力供给 大体而言，专利法保护发明，著作权则保护图书、歌曲与艺术。 经济学家把失业分成两类：自然失业和周期性失业。 保险的运作方式 菲利普斯曲线在长期不会成立 市场经济就是协调这种精密分工的社会机制。 家庭消费的需求 如同挤出效应理论所示，预算赤字与私人投资会彼此抵消。 投资风险的定义是，报酬率相对于该投资的平均期望值有多高或多低，资本市场就是用这种方式来说明“实际情况因人而异”的。 另一个市场导向的环保政策，是“可交易的许可”（marketable permit）制度。 企业投资支出 另一方面，美元走弱将会促进出口、抑制进口，并会减少贸易逆差或增加贸易顺差。 个别股东缺乏控制力和动机来监督高级主管。 长期而言，经济总会回复到潜在 GDP 及自然失业率状态。 政府支出 无预警的通货紧缩使借款人的实际利息变高，导致大量放款收不回来。银行面对意外损失，变得较无能力且较无意愿承担新放款。货币与信用创造开始收缩，以致宏观经济需求下降，最后很容易变成经济衰退。 弗里德曼有力地论证了失业率与通胀率从长期来看没有任何的取舍关系，只会有自然失业率，而唯一的问题是通胀率是高还是低。 设立的贫穷线，每年都根据通货膨胀率进行调整，因此会随着时间的推移而上升。 收入动态追踪调查（Panel Study of Income Dynamics,PSID） 商业机密（trade secret） 政府课税即是要求公民为公共物品付费，无论每位公民是否真的想要该种类与数量的公共物品。 知道需求或供给有无弹性或是否为单一弹性后，在实务上可以广泛应用于价格设定，以及市场如何应对需求与供给的位移 不同种类的劳动力市场需要不同的技能与特质 这种竞争环境中，价格会密切反映生产成本，因为竞争迫使价格降到最低，仅高于生产成本。因此，完全竞争市场中的企业，大都只能赚取同样低的利润。 公司董事会的独立性和中立性是值得质疑的。 这个货币政策工具不常用，至少在美国是如此。 当经济学家谈到价格时，指的就是交换价值。一个商品的交换价值与其稀有性有关 相较于未来还款所付出的代价，你该如何计算这笔贷款目前的价值？ 一般而言，新厂房与设备的实物资本投资是经济增长的根本原因之一，也是把新技术导入生产流程的关键方式之一。 人才市场，工资的均衡点是由该市场的劳动力供给量相对于劳动力需求量而决定的。 金钱流到海外，且不以商品或服务的形式回来，表示它是以金融投资的形式流回美国。 在某些情况下，最佳的管制法就是解除管制（deregulation）。 最后一类是出口和进口。 最有名的商业机密也许是可口可乐的配方，它不是用著作权法或专利法来保护，而是由公司自己来守护。 再贴现率是央行扩大或抑制放款的另一种方式。 经济大萧条以及很多一般性的经济衰退，不是由潜在供给（例如劳动力、实物资本和技术）下降引起的。相反，经济衰退是因为整个社会缺乏需求，以致厂商没有足够的动力生产。 若需求无弹性，提高价格会带来更多的营收；若需求有弹性，则否。 积极的董事会可以监督公司，但能做的有限。 仔细思考几个常见的劳动力市场议题：最低工资（minimum wage）、工会、歧视，以及员工福利。 税收的主要类别是个人所得税、企业所得税、薪资税（用于社保退休金与医保）、消费税（来自汽油和烟酒） 强势货币有助于外国资金的净流入，而弱势货币则会抑制外国资金的流入。 当银行破产时，政府有责任偿还银行借款。庞大的款项可能会占到 GDP 的的 10% 以上，因此政府会面临庞大的预算赤字。 ，贸易逆差真正的意思是，结算下来，一国是从国外借钱，而且有国外的投资流入。 货币的最大优点在于它避免了以物易物 总之，预算赤字偏高的负面效应，就是挤出私人投资。 供给量超出需求量。政府可能会采取行动，通过配额（限制生产者可销售的数量）避免生产过剩，或通过购买来储存过剩的产品。 强势货币往往会抑制出口、促进进口，并导致贸易逆差。就投资而言，强势货币有助于资金流入。 上市公司依法必须被审计，且必须公布财务信息。 缴税是用强迫的方式克服搭便车问题 分工能增加企业、国家以及全球经济的产量。就跟工人或企业一样，国家也可以发展专业化的技能与专长。最近的全球贸易有一个重要趋势，有人称之为“价值链分解”（breaking up the value chain），意即更广泛分散地生产零件。 第一个好处是使较小的国家善用规模经济。 最低工资是一刀两刃 流动性的比率，并未随着时间改变太多。 GDP=C+I+G+X-M，也就是：GDP= 消费 + 投资 + 政府支出 + 出口 - 进口。 “挤入效应”（crowding in） 贸易逆差象征着外国资金的流入。 比较过去 30 多年，美国人并没有比其他国家呈现出更多的隔代流动性（也就是说，子辈容易和父辈保持同样的或相近的经济地位）。 强势美元有助于外国人投资美国资产，而不是购买美国商品。 定义“市场”规模的问题，在 1956 年有一个经典的法律案例。杜邦公司当时被指控垄断玻璃纸的生产。 在很短的时间内（理论上是隔夜）借钱，来平衡放款和存款，以符合法定准备金率的要求。银行经常为此互相借钱，如果银行为此向中央银行借钱，所需支付的利率就是再贴现率。 “双重需要巧合”（double coincidence of wants） 多样化（diversification）的意思是购买许多不同投资标的，以降低整体风险。 自发性稳定机制使然，它有助于预防经济扩张太快而引发通胀。 贸易顺差与逆差，谈的是金钱的流向，以及向哪边的流动比较大。 另一个问题是如何定义“收入”。 另一个选择方案，就是以财产权（property right）做激励。 “后发优势”（也被称为追赶式成长，catch-up growth） 流动比较大。国民储蓄与投资恒等式 如何把金钱的流向置入宏观经济的整体脉络？经济学家使用一个称作恒等式（identity）的工具，它在宏观经济的很多情况中都是一个有用的工具。就数学而言，一个恒等式是在 最低工资是价格下限的一种形式，法律禁止雇主付给劳工的钱低于这个工资。 应该把医疗补助保险与食物券视为一种收入吗？ 在过去曾是有意义的区别，因为当时一辆汽车上的所有零件，几乎都是在美国或日本制造的。时至今日，汽车座套可能是在某个国家做的，弹簧在另一个国家生产，而零件又是在第三个地方制造。这些零件如此频繁地跨国往返移 是否要考虑税收减免 中东与北非。这个地区的总人口大约占全球人口的 5%，产出占全球 GDP 的 2%，人均 GDP 约为 3200 美元，较大的经济体是沙特阿拉伯、伊朗与埃及。 购买力平价汇率 经济学也与政治立场无关。 预算赤字与贸易逆差同时增加，故也称作“双赤字”（twin deficits）。 第二个好处是多样性的利益。 单一卖家在特定市场拥有全部或大部分的营收 得出的共识是全球化的确会在某种程度上影响收入不均，但它不是收入不均的最大影响因素。 经济波动带来周期性失业 如果中央银行提高再贴现率，就会鼓励银行手头持有货币，不会太冒险走在法定准备金率的边缘，因为借钱补足法定准备金会使资金成本变高。 首先，为了减轻冲击，国际货币基金组织（IMF）有权放款给遭遇金融风暴的国家。 这句话用来形容经济学家也很贴切——注重每样东西的价格，却不在乎其内在的使用价值。 失业的第二个类别是周期性失业，“周期”是指经济从谷底到峰顶的经济周期。 第一，保险公司在提供这项服务时，需要支付员工薪资和经营费用，而且理论上要赚一点利润。 对预期门票会销售一空的超级乐团来说，需求可能是无弹性的，有些粉丝会不计代价抢购门票。在这种情况下，乐团就可以有效地提高票价，其需求量与销售量顶多只会稍微减少 “流动性”，是把投资转换为现金的意思。 短期看需求，长期看供给 折现值（PDV）等于未来值（FV）除以“1+ 利率（r）”的 t 次方，t 为年期。 第二，在收到保费和支付理赔的时间之间，保险公司可以将这笔钱投资于金融市场并赚取报酬。 经济学是一个思考问题的架构。 监督高级主管的另一个可能是外部的重要投资人 对美国经济影响最大的货币是其主要贸易伙伴的货币，例如加拿大元、人民币、欧元和日元。 最合理的解释是，菲利普斯曲线是一种短期现象，它可以持续一个或数个经济周期，但是长期来看，经济周期与周期性失业起起伏伏，只有根本的自然失业率持续存在，而伴随着自然失业率的是变动的通胀率。 国民储蓄与投资恒等式始于一个基本概念：金融资本的总供给量必须等于金融资本的总需求量。金融资本供给有两个主要来源：国内资金的储蓄加上国外资金的流入。金融资本需求也有两个主要来源：国内实物资本的投资需求和政府借款。 萨伊定律 预算赤字与贸易逆差看起来的确是有关联，但它们不会亦步亦趋地并肩同行。 人均 GDP PDV=FV/（1+r）t 凯恩斯法则 对公司的投资越大，越有动力去注意公司的经营。 这是粗略估计某特定时间和地区生活水平的方式。 第三个好处，是使产业的专业化程度更高。 M1 与 M2 仓库管理经济学 一般而言，在其他条件（例如报酬与风险）不变的情况下，你会偏好流动性好的投资。 如何才能达到垄断状态？通常是用一些障碍，阻止其他厂商进入市场。 被称作“价值链分解” 应该严肃看待“权衡取舍”（trade-offs） 它会自动调整不同国家或不同时间的人口差异。 上述的保险市场隐含着一个基本规则 再贴现率是一个非常好的货币政策工具，但在实务上，中央银行用再贴现率贷出的钱并不多。 Agreement），创立了国际货币基金组织（IMF）与国际复兴开发银行（又称世界银行）。起初，IMF 的工作之一是使汇率固定在适当水平，所有货币都可以以某个比率兑换为黄金。然而，当经济力量想调整汇率时 当一个国家有大量购买力却没有相对足够的商品时，通胀就会随之发生。 平均一个人在一段时期内投入保险的钱，必须非常接近他在这段时期拿到的保险金。 折现值的概念大量用于商业与金融。 虽然贸易对收入分配不均有些影响，但它不是导致这一问题的主因。 按照规定，每一票的重要性是以该国的经济规模而定的，所以美国比其他国家有更大的表决权，但大多数的日常决策其实是采用共识裁决的方式的。 一个工具是财政政策，利用减税来鼓励家庭和企业花钱，或是增加政府的直接支出。 最后要考虑的因素是，税法是否有利于该投资。 M1 货币包括通货（硬币与钞票）、旅行支票与个人支票账户。 经济学家谈到商品的需求时，指的是商品价格与需求量之间的关系。 关键是，任何乐团或厂商在设定价格时，都不应该只想着抬高价格，而应考虑其产品的需求弹性，可以用稍高或稍低的价格来试验，看看客户反应如何。 实际国内生产总值（real GDP），它是经过通胀调整后的 GDP。 另一个工具是货币政策，中央银行可以降低利率，鼓励贷款买车或买房，以促使相关厂商雇用更多人。 常见的做法是先向其他银行借钱。 有些投资所得是要课税的，在你卖掉该投资时才付税金，投资股票与房子的资本利得也是。 如果这个过程允许每一方专注于特定、专业的任务，那么它们都可以变得更具生产力。 经济学家看到的格局更大：若要向企业增税，企业要如何筹资？企业可以提高卖给消费者的产品价格，可以大砍高级主管的奖金，可以削减股东股利，而这些方法都意味着其实某些人口袋里的钱将变少。我要说的不是应否向企业增税，而是关于企业课税的任何敏感话题，都应该聚焦于实际上哪些人最后要来支付这笔税款。 事实上，赞成专利的经济论点是：允许专利在一段期间内的独占地位，可以促进创新。这种有限制期的垄断，其权衡取舍的是公共的利益。 美国政府是以收入低于贫穷线的人口比重来计算贫穷率。 因为科技进步减少了对低技术劳工的需求。 进入仓库的东西跟离开仓库的东西必须是一样的。生产或储存一个没人要用或没有特别功能的商品，是没有意义的；还有一个要避免发生的情况是，很多人在仓库后门等待某个买不到的商品。 IMF 放款是有条件的：例如，政府必须采取措施降低某种补贴或预算赤字，或是设立更多的金融规则。 南亚地区最大的经济体是印度，其他大国包括巴基斯坦与孟加拉国。 替代效应与收入效应 当经济遭逢严重冲击时 M2 是更广义的货币，是由 M1 加上储蓄账户构成的。 短期而言，需求与供给常常是无弹性的；长期而言，则是有弹性的。看看汽油的例子 中央银行需要提防通货紧缩。 当你判断全球市场的竞争状况时，想象一下你会遇到的复杂情况。 第四个好处，是可以促进知识与技能的流动。 价格管制会导致无法辨识出到底谁才是需要帮助的人 支持凯恩斯法则（需求创造其自身的供给）的经济学家，倾向于更注重短期几年内的经济周期；而支持萨伊定律（供给创造其自身的需求）的经济学家，更倾向于注重长期。 通胀率保持在 2% 上下而非零，这样可保留一些缓冲空间，以避免可能的通货紧缩。 有些垄断是由法律创造出来的 价格管制改变了每个人所面对的价格，某些需要帮助的人会接受这个价格，但更多不需要帮助的人也受到影响。 这些政策工具都无法真正解决难题，充其量只能减缓冲击。 公开市场操作，是指中央银行购买或销售债券，以增加或减少货币供给。 与 90 年代，主流观点向另一方摆动，转而怀疑这种权衡性政策是否有用或有效。然而，在 2007～2009 年的经济大衰退时期，权衡性财政刺激方案再次出现了。权衡性财政政策的难题 为什么许多经济学家都怀疑权衡 M2 货币包括货币市场基金、某些极安全的投资以及小额（低于 10 万美元）定期存款（CD）。 根据研究估计，收入不均的扩大，约有两成是由全球化对工资造成的压力导致的。 收入高且税负重的有钱人应该更关心减税事宜，并据此慎选投资项目。收入低、税负轻的人，就不用那么关心投资所得税的问题了。 印度目前在经济上是两极化的国家 一是政府出手管制，阻止外资流出该国，但这在法律上不易实施 给政府的额外资金可能有三个来源：可能是美国政府借更多的钱，而国内企业可得到民间投资的资金变少；也可能是美国政府多借钱，而人民增加了储蓄；或是美国政府增加举债，而有更多的资金从其他国家流入。 关键在于，你可以提取并花费 M2 里的钱，但你需要找到提款机，而且也许有手续费，而 M1 则可以随手支用。 你所有的分期付款（包含利息）的总价值，恰好等于房子的折现值，也就是购买价。 我们是假设群体中的任何一个人发生负面事件的机会是随机且相等的。如果不是这么一回事呢？ 有了观念的交流，而不只是商品与服务的贸易。 影响生活质量但没有买卖的东西不会直接纳入 GDP，典型的例子是家庭生产。 “替代效应”（substitution effect），当商品价格越来越高时，人们可能会拿其他商品取而代之。 工会的减少已经改变了美国的收入分配，而且导致收入不均扩大。 最后，相似商品的跨国界贸易会给国内生产者带来更激烈的竞争，而我们也知道，竞争有助于低价和创新。 权衡性财政政策的难题 全球收入差距扩大，不是因为全球化伤害了贫穷国家，而是因为它们没有参与全球化。 无论保险公司多么仔细地收集信息，这个信息都是不完全的。 货币政策也可以用来促进经济增长。 美联储买卖债券的对象是银行。记住，债券不是货币，不是 M1 或 M2 的一部分。 经济增长的主要决定因素是人力资本、实物资本与技术投资，它们在市场导向的环境下交互作用。 在供给方面，商品与服务的供给者发现，花长一点时间比只花短短几个月更容易扩大生产规模 撒哈拉沙漠以南的非洲地区有 48 个国家，其中最大的经济体是南非，人口最多的国家则是尼日利亚。 真正的困难是：用市场导向、弹性的方法来执行，用最低的经济成本来限制碳排放。 通货（硬币与钞票）只是货币总供给的一部分。通货只是 M1 的一半、M2 的 1/10 左右。 首先，它有时机的问题。 有改变的是穷人的人口状况。 扩大国际贸易的国家与经济增长良好的国家，两者在实证上有很强的相关性。 长期来看，经济学家相信汇率将朝“购买力平价”（purchasing power parity）汇率（或称 PPP 汇率）移动。 第一个主要问题叫作道德风险（moral hazard），意思是拥有保险会使人不太会采取预防措施来避免或阻止坏事发生。 它不会反映社会所生产的商品与服务数量的实际变化 社会需要一个制度，制定出人们送进仓库及从中取出的商品的价值，以及可以连接双方的某种方式。 分清楚预算赤字（某一年发生的政府借款）与政府负债（好几年累积下来的借款）是有帮助的。 权衡性财政政策要到问题发生时才制定，到那时可能已经来不及了。 收入效应”（income effect）。当商品价格上涨时，你的收入的购买力降低，因此你不能像过去一样每样东西都买，你会买较少的东西或是同样的东西少买一点。 什么公共政策可以减少收入不均？ 或许政府管制的最佳做法是少担心资金撤离，并且一开始就关注让什么样的钱进来 弹性解释了为什么一个经济体的价格短期内容易暴涨暴跌，因为需求与供给的弹性都不大，但长期来看，供需的数量都会调整，价格就会变得更稳定（尽管如此，价格并非固定不动）。 个人投资工具 独占企业在市场有设定价格的能力，可让价格高于生产成本，因此可赚取较高利润。 如果美联储把债券卖给银行，就会减少银行的现金，使银行放款减少，这意味着民间流通的货币变少，总需求会下降。 老年族群的贫穷率现在已不会高于其他年龄层，特别贫穷族群最有可能是女人当家的单亲家庭。 自利（self-interest）是组成社会的有效方式。 对高收入的人课征重税。 此外，有很多东西会影响人们的生活水平与幸福感，但无法像商品般被量化。 独占企业会根据该产品的需求弹性来定价，如果产品的需求很没有弹性，那么独占企业就可以提高价格，而需求量只会小幅下降。 一般而言，外资可以分为两类：一类是购买有形公司或工厂的直接投资（direct investment）；另一类是购买股票或债券等金融工具的证券投资（portfolio investment）。 政府制定政策时，也需要运用折现值这个概念，来分析成本与效益 四个因素（报酬率、风险、流动性、税负）来衡量，以及如何在这些因素中做取舍。 最近几十年来，公开市场操作一直是美国最常用的货币政策工具。 社会救助的两难局面 当需求无弹性时，增加的生产成本往往可以转嫁给消费者；当需求有弹性时，增加的成本就会由生产者承担。 道德风险这个抑制因素，使得保险公司的总支出比它们应有的支出高。 董事会的选任方式、审计师和股票分析师的规定，以及官方的会计监管委员会。 反托拉斯大战 改变法定准备金率与再贴现率，需要预测银行将会如何应对这些规则的变化。 衡量国债状况的标准做法是，用某一年的政府总负债除以 GDP。 当大部分乐透彩宣称头奖累积彩金时，它们是把未来 30 年你会得到的所有款项加总。 合理的政策目标是平衡生产效益与污染成本，换言之，让生产的社会成本与社会效益彼此平衡。 在市场经济里，送进仓库及从中取出的商品的价值，是由供给与需求决定的。在市场经济里，商品的价值就是它的价格 在判断市场竞争程度时，除了观察市占率，另一个方法是观察市场价格的模式。 信用卡与借记卡是付款的方法，不是所支付的货币。 保险市场的另一个重大议题是逆选择（adverse selection）：特别可能遭遇坏事的人更可能购买保险，而风险很低的人不太可能会购买。 然而，垄断者不一定只是从金钱上得到利益 重要的是，当经济学家用到“需求”与“需求量”这两个专有名词时，别将这两个名词搞混了。 因此，如果中小国家打算管制外资，鼓励直接投资可能是最佳做法。 重点是，货币是和银行体系纠缠在一起的，现今的大多数货币是以银行账户的形式存在的。 需求量”是指在某一特定价格下，人们想得到该商品的特定数量。 他们需谨慎选择从仓库里取出的东西，且不能取出超过需要的数量 全球化下的国界壁垒 价格变动会产生成本，经济学家称之为菜单成本（menu cost），所以必须小心规划。 只要未来有足够的经济增长来偿还贷款，向国外借钱确有其经济意义，但若无足够的增长，向国外借钱的结果可能更糟。 第二个困难是，它会引起不受欢迎的副作用。 政府还可以通过对银行与金融体系加强监督来降低该国金融风暴的风险。 市场经济里的劳动价值，则表现在支付的工资或薪水上，这又提供了动机，使人们愿意提供对别人有价值的商品或服务 需求面的帮助，比价格管制更精准。 然而，国际贸易只是有助于经济增长的众多因素之一，可能不是最重要的因素。 经济学术语来说，银行是金融中介机构（financial intermediary），银行接受存款且承担放款，所以，它介于存款人和借款人之间。 “需求”则是价格与需求量之间的关系，指的是在任何可能的价格或每种价格下，人们想要该商品的数量是多少。 生产力的三大驱动因素 较好的做法是双管齐下，降低风险规模。 价格机制与供需的力量（这是下一章的重点）是市场经济如何协调人们的分工，并且使进出市场经济这个大仓库的商品互相配合的方法。当然，用仓库做比喻有其局限性，它没有涉及公平、贫穷、污染、租税或法规的议题。 以睡眠安稳量表来反映风险程度：如果把钱投入这项金融投资，你晚上睡得安稳吗？ 工会的存在不是坏事 经济长期增长的根本原因是生产力的提升 尝试帮助这些低收入者的每个方法，都会遇到这个敏感问题。 代理人制度常失灵 劳动力市场往往会随着时间把工资推向潜在的生产力水平。 大约同一时期，通胀率出现大增的现象，虽然两者之间难以推论出严谨的统计关系，但很多经济学家怀疑，在发达国家，通胀率提高或反复无常会干扰企业和家庭对长期经济增长的努力或投资。金融泡沫可以预防吗？货币政 这类政策必须小心设计，才能维持就业动机。 生产力增长的三大驱动因素是：实物资本增加（意即有更多的资本设备让员工使用）、更多的人力资本（意即员工有更多的经验或更好的教育）以及更好的技术（意即更有效率的生产方式）。 相同价格的东西是否真的有相同的价值。 未来的偿债能力才是重点 银行账户。银行提供很低的报酬率，而且利息要课税，但非常安全且流动性很好。 垄断的最大好处，就是平静的生活。 不信任公司治理的人，反而最有可能相信政府可以监督公司去履行企业责任。 重新分配可能也无法解决收入不均扩大的社会根本问题，例如接受良好教育的机会不一样。 企业筹资的管道 工会提供两个基本功能 权衡性财政政策的第三个困难，在于政治的本质。 公司和政府都会出现类似的治理问题。 第一，找机会通过劳动契约的协商提高会员工资，并以罢工威胁为后盾。 食物券、学校午餐计划等方式补助消费者食物。像这样刺激需求，能帮助农民卖掉更多产品 从短期与中期来看，汇率通常不会接近 PPP 汇率水平，也不会朝它移动。相反，汇率会相当明显地波动，这个波动主要是由预期报酬率的改变驱动的。 某些泾渭分明的情况下，当市场竞争无法良好运作时，政府可以扮演有用的角色，作为经济竞争的仲裁者。 咖啡的需求是有弹性的，当咖啡价格上涨时，成本只能小幅转嫁给消费者。 保险方案中有各种方式来解决道德风险和逆选择问题。 然而，韩国与东亚其他国家经济增长的基础并非幼稚产业政策，而是实物资本、教育培训与新技术投资的高报酬率。 GDP 只是把买卖的东西加起来，它和价值判断无关。 政府不仅有权力阻止或限制企业合并，还可以分拆垄断者的大公司 即使是在 21 世纪，国界也仍然是很重要的因素。 货币政策工具的最新方法是量化宽松，过去只是理论，2008 年以前从未在美国使用。 排除条款、部分负担和共同保险可以把一些财务风险转回客户身上，而且可以鼓励客户尽量减少有道德风险的行为。 长期而言，工资增加的基础在于提升员工的平均生产力，亦即更好的教育投资、更好的实物资本设备投资，以及发明并采用新技术。 生产力的标准算法是先计算每位员工增加的教育和经验，以及每位员工增加的实物资本设备。上述两个因素无法解释的其余经济增长，则归因于技术改善，“技术”是一个广义术语，指的是可以改变产品的各种创新。 小于某个规模的农民，政府可以提供补助，有针对性地协助 政府也是安全标准、财务报告正确性与信息揭露的合理仲裁者。 无论如何，每个社会都必须回答经济学的这三个基本问题：生产什么？如何生产？谁来消费？ 留存收益（retained earnings） 两种方式来操作 货币政策是否应该用来应对金融泡沫 GDP 只包括成品，不包括投入制造这些商品的中间产品，例如投入制造汽车的钢材、投入制造椅子的木材等。 弹性概念的延伸 其一是美联储可以把钱贷给金融市场的参与者。 衡量国界重要性的一种方式是把国界内（大都会区、州或地区）的贸易与跨国界的贸易做比较。 什么因素造成了需求波动？答案不是价格，价格会影响的是需求量，但不会使需求关系本身发生变动。 留存”的意思是企业决定持有这笔钱，将它再投资于企业而非以股利付给股东 看不见的手”（invisible hand）的概念，就是你在追求自己的利益时，可能也会给别人带来好处。 过去几十年，世界上的最大变化是中印两国爆炸式的经济增长，让更多人摆脱了生存性贫困（subsistence poverty），这件事情比人类历史上的任何其他事情都更快实现。 判断该问题是有关垄断、卡特尔、限制性的商业成规、自然垄断、再也不需要管制的产业，还是需要某种服务的低收入民众。与其采取极端赞成或反对管制的封闭态度，更明智的做法应是见招拆招。 绝大多数的专利最后毫无经济价值，但其中很少数的专利会产生非常大的经济价值。 银行账户往上升一级，可能是货币基金。货币基金投资于很多风险很低的债券，可能是政府或大公司发行的债券。 薪资没有随通胀上涨，那么你的收入购买力就会下降； 税就像原料成本，是一项投入成本。税是当生产者制造商品时，政府向其索取的一个价格。 反经济周期政策，但它在政治上不容易获得认同。 价格下限与上限，在学理上并不是最好的政策工具，却是官方最倾向采取的方案 需求”变动时，并不是在说一个点向上或向下移动，而是指在同样的总量下，整条需求曲线向上或向下移动 当国际投资人想知道他们在哪里可以获得最佳报酬率时（无论是投资于美国、欧洲、巴西还是俄罗斯），他们不仅要看投资报酬率，还要看现在与未来的货币汇率。 “泡沫”（bubble） 没有竞争的地方，就有垄断。垄断的本质就是对勤劳者课税（如果不是掠夺），它之所以能这么做，是因为懒惰者的支持。 资本来源于国内资金会更好，因为增加的投资获利会付给美国社会而非国外。 金融风暴以后 第二个功能是培养一个更好的、更具生产力的劳动力 民主的简单理论，选民选举和监督官员，但实际上，很多人根本不投票。 用 5% 的固定利率借钱买房子，而通胀率上升到 10%，那么你就赚到了，因为你可以用通胀后已经贬值的原金额偿还贷款 对于历史悠久的企业而言，留存收益是用于实际投资的主要资金来源。 当价格上涨不是出于商品本身的任何属性，而是因为投资人期望价格持续上涨时，泡沫就出现了。 为了降低风险，保险公司可做的另一件事情就是取得更多的客户。 这两个国家是以不同的方式达到如今的成就的。 价格下限与上限看起来像是零成本的政策，因为政府不需要增加支出或减税。事实上，价格管制会掩盖成本。 有助于厘清银行在什么情况下可能破产。 中国专注于制造业，有相当自由的市场经济，以及不同于西方式的民主政治体系。 这牵涉到激励问题。 另一个做法，是由美联储购买较长期的证券。 当国家变得更富裕（这是国际贸易的部分结果）时，其环境往往会变得更干净，毕竟它们有更多的资源可用在环保问题上。 在美国用固定利率借钱的最大债务人就是美国政府，因此通胀能使政府所有负债的实际价值降低 用两种方式筹钱——向银行借钱或是发行债券 如果大量的借款人都拖欠贷款 因此，通过雇主买健康保险会比自己去买更便宜，而大公司里员工的健康保险也会比小公司的更便宜。 印度则聚焦于技术与服务业，在民主的政治体系中自我修正，变得更加以市场为导向。 社会整体的收入上升 政府可以在公共领域投入更多资源，例如图书馆、公园、学校（尤其是课后辅导计划）和小区活动中心等。 垄断竞争的本质，较接近完全竞争而非独占 债券有面额、利率与期限三项要素。 政府的支出超过税收时，要去哪里筹钱？答案是发行债券。 以固定利率承担大量贷款，一旦遇到利率行情走高的情况 如果向香烟业者增税，该公司可通过提高价格的方式，把大部分的税转嫁给消费者。 较温和的替代方案是，在国际债券合约的条文中加入更多条款说明国家无力偿还时的处理方式，以使过程更透明化，且投资人可将风险纳入考虑。 经济学家还信奉要把所有成本纳入考虑范围，不单是预算成本，也要考虑机会成本 下一个投资类别是定期存单（简称定存或称 CD）。定存是在一定时期内，把资金存放在银行或金融机构的合约。 生产力的增长主要来自实物资本和人力资本的增加，较少来自新技术。 “差异化”的产品（意即产品相似，但不是一模一样）来竞争时，就会出现垄断竞争。 其国内各城市或地区之间的贸易通常是它们与跨国界的相似城市或地区之间贸易的 3～10 倍，可见国界的影响力很大。 泡沫正在形成时，很难被发现 这类措施不是直接把钱分配给中低收入的家庭，但它们会增加公共领域和公共资源的安全程度，这才是低收入家庭急需的。 减少国际贸易会使环境变好，是个错误的想法。 第四个顾虑（适用于权衡性与自发性反经济周期政策）是，这些措施有点像得了重感冒服用阿司匹林：它麻痹人的神经，让人觉得舒服些，但它其实并没有直接治疗潜在的感染。 人们为什么不投票？ 全球经济的重大议题 预期该国的汇率将走强还是走弱？这个行为建立了一个自我实现（self-fulfilling）的期望循环。 政府支出比例提高是由三个因素驱动的，医疗支出增加是最主要的 社会人口激增 一个理性的选民知道自己的一票不可能造成差异，因此很多人不关注选情或投票。 禁止毒品的法律，提高了生产与销售毒品的成本。因此，主张毒品合法化的很多论点，基本上都是从弹性的角度来切入的 另一个顾虑是掠夺式定价的问题，或称“倾销”（dumping），即以低于成本的价格销售商品，将竞争者赶走，取得垄断地位后，再提高价格。 记住，银行是通过放款的网络来创造货币的。 另一个测试方法是：一国的东西的价格和另一国非常相近吗？ 应对通胀而自动调整的过程称作“物价指数连动”。 “专利丛林”（patent thicket） 口味与潮流有什么影响？ 公司只有在相信投资报酬够高，付得起利息且仍有利润时，才会向资本市场借钱。 其次是社保退休金提高 医疗领域中信息不完全的问题很严重，以致自由市场无力解决。 它们让银行的放款能力提高或降低了。 部分原因在于美国可以用自己的货币借款，因此它的银行体系比较稳健，不受汇率牵动。 真正的金融危机发生时，社会可获得的贷款会减少，银行可能会变得连短期放款也不愿承担，使货币难以扮演经济运转中润滑油的角色。 第三个主要原因是支付利息变多，它们会在所有债务中逐渐累积。 这些情况下，短缺或过剩所造成的浪费，在政府的资产负债表中虽然并没有明确的税收或补贴，但其实是真实的成本。 债券所付的利率是根据风险而变动的。 货币政策是如何影响放款、总需求及利率的。 生活成本调整（cost-of-living adjustment,COLA） 价格垄断（price fixing）的卡特尔（cartel）组织，是由同一市场的一群企业组成的，彼此协议共同设定产出水平和价格 外汇市场充斥着随时在扩张或破裂的大大小小的泡沫。在某个时间点，汇率终将回归到 PPP 汇率。 垄断竞争的厂商也有一些设定价格的能力，可根据需求弹性来定价，但它提高价格的能力不像独占企业那么大，它仍需考虑竞争者的价格 政府预算如何影响宏观经济政策的四个主要目标。 债券是在一段固定时间内，可以预先决定报酬率的一种投资工具 如果美联储想让货币供给增加，有四个选择：降低法定准备金率，降低再贴现率，向银行购买债券，或是购买与借款有关的证券。 所有成本都是机会成本（opportunity cost）。当你做一个选择时，你没有选择的东西就是经济学家所谓的“机会成本”。 参考消费者价格指数做调整。 “负所得税”（negative income tax） 替代品的价格变动 专利丛林在某些产业中仍然是个问题，尤其是在制药与复杂电子等高科技产业，它们的产品可能要依赖很多不同的专利。 实际上，银行是通过放款的过程来创造货币。 较不稳定的企业可能会发行高利率、高风险的债券，或称“垃圾债券”（junk bond）。 弹性的概念，可以延伸适用于很多情况。 很多外资是以投资收回可变资产的形式（例如股票与房地产）流入美国的，和借款相比，这种投资没有固定的收回时间表，它只会跌价，但不会像无法偿还借款一样发生违约现象。 政府在一个人赚到额外收入时减少他的福利，就会产生负所得税。 第一个宏观经济目标是经济增长 扩张性（或宽松）货币政策，它们往往能降低利率并促进放款。 不管政治理念如何，他们的共同点都是：绝对尊重任何政策的各种取舍。 若没有出现垄断者索取高价的情况，倾销就不成立。 新的创新经常建立在旧的创新上。 刚才的讨论并没有涉及由中央银行实施的货币政策。 所得税是指你赚钱时，政府拿走其中一部分。 恶性通胀 这两种税都会降低工作动力。 大部分情况下，债券的报酬率是一个固定利率，这表示如果通货膨胀与市场利率￼上升，你就会被锁在这个较低的固定利率上 最后一种方式是通过有价证券，较常听到的是公司股票。 中央银行决定升息或降息，提供了短期管理总需求的替代方案。 对整体经济而言，国内储蓄与外资流入（美国经常账户赤字的对立面）的资金供给量，必须等于实物资本投资与美国政府预算赤字融资的资金需求量 弹性的问题，关乎数量如何响应价格的变化。 真正的成本不是你已经花的钱，而是你放弃的东西。用机会成本来思考，将包含没有用钱来衡量的成本。 虽然汇率波动会使国际金融危机恶化，但它不是引爆危机的必然条件。 供给是指商品的供给量与价格之间的关系。 企图提高经济增长与维持合理贸易逆差的政策是相似的：都应该鼓励国内储蓄。 新兴技术将有助于发现新能源，或者更有效地利用现有资源，并且产生各种替代品。 恶性通胀（hyperinflation） 正因为石油是极其重要的资源，所以更应尽可能地进口，把石油储备起来，不要耗尽国内的资源。 政府若想管理汇率，通常会追求稳定或缓慢变动的汇率，以创造有利于贸易与长期投资的商业环境。 造成美国长期预算赤字预测不乐观的单一最大因素是医疗支出。 若负所得税较高，就会导致贫穷陷阱。 当工会规模缩减时，我们必须质疑一个为劳工利益发言的重要管道是否被消音了 ，宏观经济政策应兼顾短期经济波动与长期经济增长。 宏观经济政策应兼顾短期经济波动与长期经济增长。 美国医疗领域的人均支出是经济实力相当的其他国家的两倍。 GDP 呈现明显且持续的下滑，就叫作经济衰退（recession）。 从消费者的观点来看，垄断竞争的好处是它为企业提供了强大的动力，去发现趋势、产生创新以及提供多样化产品。 货币就是银行账户里的钱。 价格是由市场决定的，而非生产者。 股票不像债券有预先决定的利率，也根本无法保证股票持有人会获得固定利息或任何报酬。 当货币一而再，再而三地贷放出去时，社会上就会有更多货币。 经济政策的目标应该是鼓励企业致力于提高生产力以及它们在全球市场的比较优势。 GDP 持续下滑六个月（也就是两个季度）就是持续性衰退（lasting downturn），但这个时间范围并非官方定义。 歧视：差别待遇 租税面 自由市场是否能提供适量的多样性 支出面 银行依法必须持有一部分存款作为准备金。 。第二个目标是：财政政策如何解决失业问题（无论是周期性失业还是自然失业）？ 多样化的蓝筹股投资组合 卖股票通常是初创、小型公司募资的一种方式 蓝筹股（blue chip stocks）指的是大型、知名公司的股票 预算赤字或社会福利的取舍 反经济周期财政政策的理论，在这场争论中并不偏袒任何一方。 美联储只能运用其政策工具来影响银行愿意且能够放款的资金供给。 外汇市场与汇率干预 经济学家从不怀疑房东、石油公司、银行都是贪婪的，而且试图尽其所能赚取最多的钱，他们无时无刻不贪婪。他们提高房租、燃料价格与利率，不是因为想这么做（他们一直都这么做），而是因为市场的供需情况在某种程度上改变了，才促使他们做了这个决定。 当经济学家对如何实施宏观经济政策意见不一致时，其实大部分原因是党派立场不同。 政府的首要目标是使货币维持某种程度的稳定。 因为股票的风险比债券高，即使是蓝筹股，亦然。然而，股票有节税优点，因为在卖出之前，你不必对资本利得缴税 经济创新的最终目的不是要讨好创新者，而是要鼓励稳定持续的创新，以提高社会的生活水平。 适当的财政政策可以增加政府支出或减少税收，以提升总需求，至少抑制周期性失业造成的失业增加。 供给量是指在某个特定价格下所生产的特定数量 公司只有完全站稳了，才较可能利用本身的利润、债券或举债（在某些情况下）来做资本投资。 寡头垄断的本质较接近独占而非完全竞争 信息不完全的难题，并没有一个简单的解决方法。 供给是指在每种价格下生产多少数量。供给量是一个点，而供给是一条曲线。 虽然不公平的贸易惯例确实存在（例如，通过税务和法规，使美国出口的商品在其他国家较难销售），但没有证据显示不公平是因这种法规而引起的。 如果大多数人都不表露心声，有谁会呢？答案是特殊利益团体。 市场会跟歧视对抗。 美联储实际上是锁定一个特定利率，称作“联邦基金利率”（federal funds rate）。 导致 2007～2009 年经济衰退的美国金融危机，基本上归因于自身问题，而非国际因素。 第三个目标——如何降低通胀？ 其一是逐步淘汰新近就业家庭的福利。 对于任何寡头垄断市场而言，关键是厂商是否彼此激烈竞争，如同完全竞争一般使得利润下降，或者它们是否（也许是不公开的）共谋使价格维持在高位，就像独占一样。 除了形成卡特尔组织外，潜在竞争者也可能形成种种限制性的商业惯例。 经济增长与环境保护的结合将是一个持续挑战，它在经济上确实可行，但需要政治上的充分护持。 通胀是由过多的金钱追逐太少的商品导致的，此时总需求已经高于潜在 GDP，因此整个消费价格都上升了。此时，财政政策可以通过减少支出或增加税收来降低总需求，这两种手段都会把钱抽出来，以避免通胀。 什么因素会影响供给？答案和上次一样，不是价格 首先，时间滞后问题 如果是买股票基金，流动性也足够。 制定可增加私人储蓄的公共政策，是一个值得考虑的间接选择。 一份价格维持（price maintenance）合约 取舍是不可避免的。在人们有各种技能与欲望的现代经济社会中，问题在于如何协调决定生产什么、如何生产以及为谁生产。 政策改变需要通过银行体系传递，然后企业和消费者必须对银行的改变做出反应，这些事都需要时间。 供给增加时，整个供给关系必须移动，以便在每种特定价格下，供应更多的数量 在经济环境中，政策目标应该是阻止或控制经济衰退，同时要奠定长期增长的基础。 保护主义行不通 企业领导人通常不太赞成竞争 而目前的思考更注重国家人口结构的变化——出生率下降且平均寿命延长。 第四个目标是国际收支平衡。 专项拨款，也称为“政治分肥支出”（pork-barrel spending），是另一个例子。 制造商可合法“建议”最低价格，且停止销售产品给经常暗中破坏建议价格的经销商，但制造商不能“要求”最低价格 政府可能会试图控制汇率。 中央银行必须确保金融体系有足够的通货在外流通，以满足社会大众的需求。 另一项政策是薪资收入租税抵减，当低收入家庭赚钱时，给其额外的收入，以抵消政府撤回的其他福利。 第二，过度反应的风险 技术改变 一个经济体取得资本投资效益的能力，是建立在家庭储蓄及投资意愿上的。 当政府资金需求量很高时（例如每年占 GDP 的 3% 或 4%），会吸引外国投资。因此，高额的政府借款是和大规模贸易逆差有关的。 市场竞争是对消费者最有利的方式。 重点是保护主义不可能解决逆差，因为它没有解决宏观经济失衡的根本问题。 当女性的教育程度提高，并且避孕变得很容易时，事情的转变是令人惊讶的。 独家交易（exclusive dealing） 生产受到天气影响，会怎样？这个因素对农业尤其重要。 市场倾向于对抗差别待遇 如果你去思考需求与供给在任何特定情况下有无弹性这个基本概念，那么你将可做出有凭有据的预测。 在某些情境下，市场可以强化差别待遇 多样化的高成长股票投资组合 经济的短期目标和长期目标并非总是一致的 成长股是较不成熟的公司的股票，这种投资一般会比蓝筹股提供更高的报酬率。 除了投票率低和特殊利益团体的问题，当出现多重选择时，选举结果可能无法反映多数人的偏好。 多数国家会优先振兴国内经济，而非稳定汇率。 搭售（tie-in sale）或捆绑销售（bundling） 要素价格（input price，或称投入价格）改变 倘若你的政策需要花一些时间才会出现效果，你就很容易出手过猛。 世界经济将不再是固定成长式的零和游戏，美国经济的成长也不必以牺牲其他国家为代价。相反，全球经济在本质上像是一种合作创业，如果每个国家在遍布全球的贸易、生产、技术与知识的网络中合作，那么大家便都能更快速地成长。 控制汇率的另一个替代方案是在外汇市场直接买卖本国货币。 日本有着类似的低出口额，大约占 GDP 的 8%～10%，但它有巨大的贸易顺差。为什么？日本有惊人的高储蓄率，以及较美国稍低的国内投资。 上述情况中，即使管理阶层本身不带偏见，追求获利最大化的厂商也会有经济上的动机，在雇工时采取差别待遇，以使生产力与销售额都维持在高档位。 国民储蓄与投资恒等式指出，调整方式有以下三种：第一，增加私人储蓄，以补足外资撤出的缺口，但实际上这不太可能，因为美国的私人储蓄率一向相当低；第二，减少政府借款，这表示必须同时削减支出、增加税收；第三，减少实物资本与新技术的民间投资，但这会伤害经济的长期增长。 但这种直接买卖的方法有其限制，当一国卖出本国货币时，它会获得某个国家的外汇储备（foreign exchange reserve）。 第三个问题是，货币政策对收缩经济的效果可能比对刺激经济的效果好。 为了避开对工作的反向激励（negative incentive）问题，美国尝试的另一种方式是要求人们去工作。 掠夺性定价（predatory pricing） 公共治理的最后一个难处是政府发觉它很难退出。 工作者有同样的技能，但在任不同职务时会有不同薪资 双边贸易逆差（bilateral trade deficit） 经济全球化的趋势势必仍将持续，驱动因素有三个：通信技术与交通的发展使全球的经济联结更容易；国际协议降低了贸易的法律障碍；中国、印度、巴西等出口导向经济体的崛起。 中央银行——银行的银行 双边贸易逆差在宏观经济中并不重要。 买卖本国货币往往只是短期办法，并非长期政策。 我们需要从小学、中学及大学教育上着手，需要解决个人与政府过度举债的问题。我们需要在实物资本与技术的持续发展方面创造投资的动力，需要为人口老化做好准备，并正视医疗成本上升的问题。这些议题都很实际，也是各国终将自行面对的问题，无论欧洲、中国、印度或拉丁美洲的经济情况如何。我们的未来掌握在自己手中。 银行间交换支票和转移资金款项时，中央银行扮演中间角色。 在经济层面上，我们没有理由对每个国家都争取贸易平衡。 历史上，拥有房产的平均报酬率都是正数，但对于处在萧条市场的每位房主来说，等待房屋价值攀升可能要花一段很长的时间 货币政策就像拉或推一根绳子，当你拉绳子时，它会向你移动；当你推绳子时，它会弯折起来而绳尾却不动。 排挤投资与抵制长期经济增长都将付出惨痛的代价。 在管理汇率时，所有政府都会遇到两个实操上的问题。 首先，外汇市场会猜测政府动向。 高收入国家通常有贸易顺差，因而会对低收入国家有净投资。 劳动歧视不是单一现象。它可以发生在不同时间点，在不同市场由不同角色造成，它可以反映不同诱因。 避免贫穷陷阱的另一种方式是提供实物的帮助，意即以某种非现金的服务来支持，医疗补助保险与食物券都属此类。 长期（以十年为单位）风险相当低，但短期（以月或年为单位）风险高了很多。房屋的流动性差，但好处是购房可能有税负抵减 政府是由一群代理人组成的，选民和公民试图引导和控制方向，但不一定会有成效。 均衡点这个位置有其特定的经济意义：价格与数量是有效率的，没有造成浪费。 实物帮助也有激励的问题。 好。微观经济学原理总结 到这个章节为止，我们已经谈完了微观经济学的基本原理，让我们来总结一些重要概念。我们需要同时理解下面几个潜在对立的问题：[插图]市场是非常有用的制度，社会可以通过市场来分配其稀有资 医疗补助保险可能会导致“就业锁定” 微观经济学原理总结 第二个问题是政府很难设定一个符合现实的汇率。 若流入美国的外资变少，则必须降低预算赤字（亦即要加税或降低政府支出），或者要提高国内储蓄率（亦即要节制消费），或者企业要自备扩张资金。 美联储是美国金融体系的管制者之一。 在现代的劳动力市场，劳动报酬通常是工资与福利的组合 个人可从事的最后一种投资是贵金属，例如黄金、白金，这些贵金属是个人可从事的风险最高的投资之一 人与创业家的角色，于公则扮演公民、选民与政治人物的角色。本书秉持着尊重市场力量的精神，但也承认这些市场力量有时可能失灵。我们相信政府的政策可能非常有用，但也明白在某些情况下，这些政策不仅没用，反而会弄 通胀率偏高且持续波动，将导致经济活动失去动能。 从雇主的观点来看，所谓的均衡工资就是雇主支付报酬的总成本 当工会与雇主谈判劳动契约时，工会经常被要求在较高的薪资与较好的福利之间做选择 市场是非常有用的制度，社会可以通过市场来分配其稀有资源。 “通胀目标化”（inflation targeting） 市场为有效率的生产、创新、善用资源、满足消费者需求和欲望，以及逐渐提高生活水平提供动力。 较高的通胀率可能有很多不同的原因，但都和整个社会太多的钱追逐太少的商品有关。 审查该银行的整体财务健康状况，以决定银行的风险水平。 能用多少时间投资？ 最终的目标应该不只是分配金钱，让人们有高于贫穷线的收入，而是帮助人们发展他们需要的技能，让他们在不断变动与成长的社会里谋生。 经济学的观念与洞察方法，为读者提供了有用的语汇系统，让他们能够清楚地解释全球不断演进的经济中一定会发生的事情以及可能的权衡取舍关系。在很多情况下，经济学并不指向唯一的正确答案，但它可以引导我们找出更条理分明、更深思熟虑的办法去解决问题。 对抗通胀的政策工具都会涉及抑制整体需求，使追逐商品的钱变少。 近年来，经济学家的普遍看法是，一国可以让汇率浮动或固定，但不应经常处于中间立场，用一种不可预测的方式偶尔让汇率浮动。 政府抑制需求的方法可能包括增税、削减政府支出、提高利率以抑制借贷。 考虑你的投资时间规划，会是一个有用的出发点。短期而言，股市的风险很高，但如果视为长期储蓄（例如几十年后的退休生活），那么行情的起伏很容易互相抵消，长期下来，很有可能因耐心而得到回报 长期来看，市场通常会走向均衡。 市场有时可能会产生我们不想要的结果 垄断、不完全竞争、负外部性（例如污染、无法支持技术或无法生产公共物品）、贫穷、收入不均、信息不完全，以及管理不善的问题。 需求或供给的任何改变（记住，是整条曲线的改变），都将使均衡点发生位移。 宏观经济学原理总结 宏观经济学的观点是总合的、由上而下的，它把整个经济视为一个大型有机体。 以中央银行作为代理机构，稍微独立于政治之外。 追根究底，劳动力是一个市场，你的薪资及福利，是根据你的产出定出的价格。 先用固定利率借钱，再用通胀后的货币还钱。企业则要注意不要一心只想避免通胀，忽略了实际的生产力增长。 政府在处理市场问题时可以扮演有用的角色，但它的行动也是不完美的，在某些情况下，甚至会造成自身更大或另外的问题。 时间范围，是你对风险承受度的一大关键因素。 宏观经济政策的四个目标是：经济增长、充分就业、物价稳定、国际收支平衡。 基本模式是一样的：考虑需求，考虑供给；从均衡点出发，思考需求或供给位移时会发生什么，思考新的均衡点会出现什么样的新价格与数量 可以自由地在一年中多次用相当快的速度做出解决棘手问题的决策 讨论宏观经济政策的架构称作总供给与总需求模型。 思考经济政策时，你的挑战在于保持务实。 也许多数人对其退休金所犯的最大错误，是没有承担足够的风险，尤其是在早期阶段，因为太在意财务安全，所以把太多钱投入债券、银行及货币基金 要诚实面对市场发生的问题，答案要明确。 如果通胀率是 4%，员工只加薪 2%，其实就是变相减薪，但因看起来像加薪，所以不会伤害员工士气。 对政府的作为要实事求是，坦然面对权衡取舍和风险。 供给与需求是一个架构，用来讨论市场如何决定价格和数量，以及这些市场价格与数量为什么会改变 温和的通货膨胀，优于过度补贴所造成的通货紧缩。 通货紧缩会使目前的所有贷款额变高，且会造成违约欠款增加，导致经济增长停滞。 财政政策和货币政策是宏观经济政策的两组主要工具。 前者是政府税收和支出的政策，包括政府预算和预算赤字； 后者是指中央银行的政策，它会影响利率、借款与放款。 全球最主流的趋势是制定中央银行应遵循的具体规则（例如通胀目标化），然后放手让中央银行达成该目标，而不是用民主程序来控制。 年通胀率 3%～5% 对经济其实没有多大影响。 出口大于进口，该国就有贸易顺差；进口大于出口，该国则有贸易逆差。顺差与逆差探讨的是金钱的流向，以及向哪边的流动比较大。 中央银行也可扮演最后贷款者（lender of last resort）的角色。 统计学家或经济学家所说的“随机漫步”￼（random walk）。 高收入国家的普遍目标，是把通胀率稳定维持在 2% 左右。这样的通胀率够低，可提供长期经济增长的稳定基础，同时也有一点缓冲作用，可避免通货紧缩的风险。 凯恩斯法则（需求创造其自身的供给）注重短期几年内的经济周期，萨伊定律（供给创造其自身的需求）倾向于更注重长期。 使社会的总需求增加或购买力提高的政策，称作扩张性或宽松的财政政策，包括减税与增加支出；反之则为收缩性或紧缩的财政政策，包括增税或减少支出。 所有的投资忠告最终都基于一个事实：你需要存些钱，越早开始越好。 中央银行兼具权力与责任，以实施货币政策及稳定金融体系。 Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/c26503e5/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Books</category>
      </categories>
      <tags>
        <tag>Economy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AWA]]></title>
    <url>%2Fposts%2F7a388470%2F</url>
    <content type="text"><![CDATA[[TOC] AWA Issure Task Argument Task AWA# Summary First Task to the GRE 2 Essays, 30 minutes each, Scoring 0~6 average Issure Task（较难提分，目标 3 分↑） 针对给出的论点，提出自己的观点，并加以论述。 You created the argument and you backup your argument. Argument Task（较好提分，目标 5 分↑） 给出一段别人写好的论述（逻辑阅读，挑错，然后说明哪里错，为什么错。） Issure Task#Argument Task# Mission 任务 Challenge argument 挑错 Discuss ways to improve the argument 改进 WHY NOT VALID !!! Directions 答题思路 Identify stated/unstated assumptions Strengthen and weaken argument Logical Fallacies 逻辑错误 Things Change 事情已经发生改变 Assumed Cause and Effect 假设的因果关系，无直接因果，提出反驳有可能无因果关系，不是它引起的 Numbers and Percentage Assumption 数字上升不代表百分比上升 Vague Language 模糊的语言，没有具体数字、指标来证明 Not All X are Alike 不是所有同一类东西都一样，还可能跟所在环境相关 Don’t Trust a Survey 不要随便相信研究，可以对研究方法进行怀疑 Apples aren’t Oranges 不同的事物无法比较 Structure in Writing 写作结构 Intro Keep into short and sweet Use standard/boilerplate language Body Focus on 3 logical fallacies Use a paragraph for each fallacy Strengthen argument Conclusion Keep short and sweet Don’t put forward another fallacy Boilerplate Intro The following argument is flawed for numerous reasons. Primarily, the argument is based on the unwarranted assumption that …, rendering its main conclusion, that …, invalid. Body The argument fails to provide any justification that … The argument would have been stronger had it provided information regarding … Even then, the argument would have to further prove that … Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/7a388470/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>nil</category>
      </categories>
      <tags>
        <tag>GRE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[启示录]]></title>
    <url>%2Fposts%2F8ac5de9b%2F</url>
    <content type="text"><![CDATA[[TOC] 一、人员 1. 关键角色及其职责 2. 产品管理与其他角色的界定 3. 出色的产品经理 4. 管理产品经理 5. 管理上司的十条经验 二、流程 1. 评估产品机会 2. 产品探索与产品原则 3. 产品人物角色与特约用户 4. 市场调研 5. 用户体验设计与实现 6. 重新定义产品说明文档与基本产品 7. 产品验证、原型测试 8. 快速响应阶段、改进产品、平滑部署 9. 大公司里如何创新与施展拳脚 10. 创业型公司的产品管理 三、产品 1. 苹果的启示 2. 新瓶装老酒 3. 情感 4. 可用性与美感 5. 各类产品要点 总结 启示录 [美] Marty Cagan | 华中科技大学出版社 Summarized by Zachary Completed on Dec. 12, 2016 一、人员#1. 关键角色及其职责# 产品经理 职责：评估产品机会 和定义要开发的产品 无论是借助 MRD（市场需求文档）还是 PRD（产品需求文档）来说明，都尽量简化，围绕产品原型展开，清晰地描述其属性、功能，避免讨论具体实现的方法。 用户体验设计师 职责（交互设计师）：确保产品同时具有可用性和价值 可用性：用户明白如何使用产品 价值：用户对产品的渴求程度 项目经理 职责：制订计划和跟踪进度 可其他角色兼任，大型项目最好由专职人员操刀。 开发团队 职责：开发产品。 开发团队主要指为外部客户开发和维护产品的团队。 IT 团队主要指为内部员工提供技术支持的团队。 运维团队 职责：保证服务正常运行。 产品营销团队 职责：对外发布信息、宣传、拓展市场销售渠道、组织重点营销活动、促进产品销售支持 2. 产品管理与其他角色的界定# 产品管理与产品营销 每款产品应指派专职的产品经理，负责定义产品 避免 三种误区 市场营销人员定义产品 两人分担定义产品的工作 一人兼任两项工作 产品管理与项目管理 产品管理人员，他们探索和定义有价值的、可用的、可行的产品。 项目管理人员，他们关注如何执行计划以按期交付产品。 产品管理与产品设计 好产品必须提供舒适的用户体验。舒适的用户体验是产品管理和用户体验设计的共同作用的结果。 与用户体验设计的角色，密切相关的一些分工 用户研究、交互设计、视觉设计、原型制作 产品管理与软件开发 两者良好的合作关系的关键：彼此平等，任何一方不属于另外一方 两者相互促进，开发人员可以帮助完善产品定义，同时他们最清楚产品的可行性。 开发人员协助产品管理的方式 直面用户，参加原型测试 讨论最新技术动态，如何应用到产品中 初期阶段参与产品定义与设计，避免后期的问题 产品经理配合开发人员的方式 只定义满足最基本要求的产品 进入开发阶段，避免修改需求和设计 遇到开发问题，遵循维持基本功能、避免修改的原则 预留时间，给开发人员完善与重构代码 3. 出色的产品经理# 特质：智力、个人素质、态度、正直、信心、职业操守、对产品的热情、用户立场、技能、注意力、运用技术的能力、时间管理、沟通技能、商业能力 巴顿将军的忠告 永远不要告诉别人怎么做。告诉他们做什么，他们自然会发挥天赋，给你惊喜。 –乔治·史密斯·巴顿 4. 管理产品经理# 产品总监，两方面的关键职责 组建优秀的产品经理团队 规划公司的全局产品战略、对产品组合负责 5. 管理上司的十条经验# 为项目波动做好准备 注意沟通的方式和频率 缩短邮件篇幅 多用数据和事实说话 多提建议，少谈问题 会前沟通 充分准备 向上司借力 让领导省心 内部宣传 二、流程#1. 评估产品机会# 十个问题 产品要解决什么问题？（产品价值） 为谁解决这个问题？（目标市场） 成功的机会有多大？（市场规模） 怎么判断产品成功与否？（度量指标 / 收益指标） 有哪些同类产品？（竞争格局） 为什么我们最适合做这个产品？（竞争优势） 时机合适吗？（市场时机） 如何把产品推向市场？（营销组合策略） 成功的必要条件是什么？（解决方案要满足的条件） 评估结论？（继续或放弃） 注意做产品评估时不涉及具体的解决方案，只讨论待解决的问题。 2. 产品探索与产品原则# 定义正确的产品 定义产品 软件项目一般有两个阶段：定义正确的产品、正确的开发产品 探索阶段，产品经理应分析各种创意，广泛收集需用户需求，了解新技术，拿出原型并测试，从全局视角思考产品方向，兼顾短期与长期的规划。 一旦完成定义，进入开发阶段，要迅速切换工作重心。 成功的产品基于两点认识 深入理解用户需求 明白什么样的解决方案在现阶段是可行的 建议：流水线式并行开发，一旦 1.0 版本进入开发阶段，就开始定义 2.0 版本的产品，不要干扰正在开发的产品，把热情放在下一版本。 确定原则，什么是最重要的 制定产品原则 它意味着什么重要、什么不重要、哪些原则式根本性的、战略性的，哪些是临时性的、战术性的。 产品原则不是产品功能的清淡，不依赖单独的产品，是整个产品线的战略指南，是价值宣言，代表公司的企业文化。 它是一套价值判断的框架，帮助作出正确的决策。 注意 要按原则的重要性排序 避免两类错误 避免原则过于空泛、失去指导意义 避免把设计原则当作产品原则 讨论的时候需要在一些要点达成共识 究竟要解决什么问题？ 要为哪类人物角色解决这个问题？ 产品要达到什么目标？ 每项目标的优先级是什么？ 3. 产品人物角色与特约用户# 又称用户特征记录 user profile指通过与用户沟通交流，确定典型的目标用户类型，在理解各类目标用户特征的基础上建立的任务原型。创建人物角色的工作越早开始越好 人物角色主要用途 筛选重要的产品功能 避免把自己的需求当作用户需求 有助于对用户类型的优先级进行排序 更好地描述产品 可以协助团队达成共识 注意事项 挑选关键人物角色，每次应针对一类目标用户 不要凭空创建人物角色，要与用户面对面交流 原型测试的时候要注意多样性，这个时候不要只邀请关键人物角色范围内的用户 确保产品不偏离用户需求 获得更有深度的反馈 征集特约用户 深入洞察目标用户的需求，并赢得用户对产品的推荐，协助完成产品的研发 早期物色与征集一些积极、活跃、乐于分享的目标用户 4. 市场调研# 理解市场调研的作用与局限性 市场调研的工具和方法 用户调查 产品使用分析 数据挖掘 拜访用户：成本高、耗时长、但能更加体会用户的场景 人物角色：务必找出若干主要用户类型 可用性测试：尽早、反复进行可用性测试 同类产品分析：找到竞争对手的优势，学习成功的经验，并做出差异化 回答几个关键问题 谁是目标用户？ 用户会怎样使用产品？ 用户能想明白怎样使用产品吗？障碍在哪里？ 用户为什么选用你的产品？ 用户喜欢产品的哪些特点？ 用户希望如何改进产品，增加哪些功能？ 局限性 市场调研不直接回答最根本的产品问题：打造什么产品？ 市场调研结果可以作为研发的依据与参考，但不能决定产品研发的方向。 局限性的两个根本原因 用户不知道什么样的想法是可行的，多数用户对现有技术一无所知 用户不知道自己想要什么，没见到实际产品，用户很难凭空想象自己需要什么 用户描述需求时，习惯提出自己的解决方案，但不一定抓住需求的本质。 5. 用户体验设计与实现# 先定义用户体验再动手开发 产品进入开发后，再修改设计思路十分困难，越往后修改成本越高 开发团队必须根据用户需求和产品定义设计软件架构，再进行开发 用户体验设计要保证产品同时具备可用性和价值 6. 重新定义产品说明文档与基本产品# 使用高保真原型替代说明文档交付开发 不要试图定义最终产品，转而定义只满足基本要求（价值、可用性、可行性）的产品 产品经理和设计师合作设计产品的高保真原型 邀请开发人员参与设计原型，主要提出可行性评估 请真实用户验证产品原型 7. 产品验证、原型测试# 证明产品的价值、可用性、可行性 简要测试流程 物色测试者 准备测试 事先拟定测试内容 从打开原型前就开始测试过程 仔细观察测试者的反应（首次访问的感觉只有一次） 测试完进一步收集信息 为每个问题打分 不必等到完整原型完成后再测试 测试技巧 测试前不要与测试者过多交流，避免透露产品线索 务必让测试者知道只是产品原型，可以说出真实看法，不必保留 测试时，尽量让测试者保持平和的情绪，不要让他们进入吹毛求疵的状态 不要引导测试者 不要给测试者提示，即使遇到困难 通常 3 种结果：完成测试、反复尝试完成、放弃测试 理解目标用户如何看待产品要解决的问题，观察不符合用户直觉和习惯的地方（操作错误时） 留意测试者的肢体语言和语气 快速更新原型，纠正缺陷 8. 快速响应阶段、改进产品、平滑部署# 产品发布莫虎头蛇尾 交付产品后仍然要保持高度警惕 发布后一段时间内，项目成员应该留出时间作为快速响应阶段，迅速处理用户反馈的意见 关键不在于是否会出现问题，而在于能多快解决问题 改进产品不要一味地添加功能 关注重点在能提高关键指标的功能。 改进产品不是简单地满足个别用户的要求，也不能对用户调查全单招收。 避免更新产品导致用户反感 通常情况，用户不喜欢变化，大多数用户不愿意花时间学习、适应新的使用方式 采用平滑部署的方式 发布两个并行的版本 区域性逐步部署 9. 大公司里如何创新与施展拳脚# 产品评审团 制定更及时、更可靠的产品决策 用于替代冗长的决策会议，缩短决策时间，制定合理、及时、透明的产品决策。 产品评审团 工作目标：决定产品战略方向，宏观上监督产品研发流程，合理配置资源 成员组成：公司各个部门的管理者 职责：监督产品研发流程、制定关键决策 公司的核心竞争力在于创新。–德鲁克20% 法则（谷歌的程序员有 20% 的工作时间可以用来从事创新研究） 怎么做 20% 法则 臭鼬工程（秘密军事行动） 主动观察（观察和倾听实际用户） 收购小公司 如何施展拳脚 十大秘诀 了解公司制定决策的方式 建立人脉网络 臭鼬工程 自己顶上 有选择地据理力争 会前沟通，形成默契 合理分配时间 分享信息 向上司借力 传播你的产品理念 10. 创业型公司的产品管理# 关键在于产品探索 创业初期仅需三个职位 产品经理、交互设计师、原型开发人员 有了这三个人就可以快速展开产品设计、迭代修改 关键的两点 创建体现用户体验的高保真原型 邀请真实的目标用户验证产品原型 三、产品#1. 苹果的启示# 苹果的四点重要经验 硬件为软件服务 软件为用户体验服务 用户体验为情感服务 产品为真正的需求服务 2. 新瓶装老酒# 优秀的产品经理应该抓住现有技术与用户需求的契合点 想要在成熟的市场抢占一席之地，要注意两点 对目标市场了如指掌，对现有产品的缺陷洞若观火 跟踪最新的技术趋势 3. 情感# 恐惧、贪婪、欲望，留意产品中情感的作用 消费者购买产品大多源于情感需求 情感接纳曲线 关注用户的不满情绪 愤怒的用户决定着产品未来的发展方向 让用户头疼、让他们愁眉苦脸的又不得不应付的事情都是机会 产品经理除了功能和技术，不要忽略用户的情感需求 根据情感特征进行分类 技术爱好者 这类消费者很容易误导产品经理，他们的需求与普通大众的不一样，他 们对技术本身很痴迷。 此类是最没有参考价值的群体。 非理性消费者（尝鲜者） 情感需求与大众相同，但是更为强烈，消极情绪被放大后，会导致非理性的消费行为。 普通大众具有同样的情感需求，只是程度没有那么强烈。 此类消费者最值得产品经理注意。 为了让产品吸引理性、超理性消费者，应从非理性消费者入手，他们的情感需求是产品跨越鸿沟的动力。 理性消费者 早期消费大众，他们只会购买他们认为使用、成熟的产品。他们更为务实。 超理性消费者 后期消费大众，情感需求更弱，哪怕产品有半点不合意都不会购买。 观望者（跟随者） 占 15%，同样有需求，但只会购买公认好用的产品。 4. 可用性与美感# 两者缺一不可 注意交互设计和视觉设计的区别，两者并不相同，就像产品管理与产品营销。 5. 各类产品要点# 大众网络服务 十大要点 可用性 人物角色 拓展性 持续可用性 客户服务 保护用户隐私 口碑营销 全球化 平滑部署 用户社区管理 企业级产品 十大要点 可用性 产品正常工作 特例产品 特约用户 销售渠道的需求 客户和用户的需求 产品安装 产品的配置、自定义、集成 产品升级 销售策略 平台产品 三种客户 应用软件供应商 开发人员 终端用户 总结# 最佳实践 十大要点 产品管理的职责 用户体验 机会评估 特约用户 产品原则 人物角色 探索（定义）产品 使用原型 用户参与原型测试 根据数据改进产品 反省清单 十大问题 产品能吸引目标消费者的关注吗？ 产品的设计是否人性化，是否易于操作？ 产品能在竞争中取胜吗？即使面对瞬息万变的市场状况？ 我了解目标用户吗？产品是否得到他们的认可？ 产品是否有别于市面上的其他产品？我能两分钟内阐明这些差别吗？能一分钟向客户解释清楚吗？能半分钟内向经验丰富的行业分析师解释清楚吗？ 产品能否正常运行？ 产品是否完整？用户对产品的印象如何？销售业绩如何？销售任务能否完成？ 产品的特色是否与目标用户的需求一致？产品特色是否鲜明？ 产品值钱吗？值多少钱？为什么值这么多钱？用户会选择更便宜的产品吗？ 我了解其他团队成员对产品的看法吗？他们觉得产品好在哪里？他们的看法是否与我的观点一致？ Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/8ac5de9b/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Books</category>
      </categories>
      <tags>
        <tag>Product</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[项目管理]]></title>
    <url>%2Fposts%2F3f66c85c%2F</url>
    <content type="text"><![CDATA[[TOC] 第一章 项目与项目管理 1.1 项目 项目管理解决什么问题？ 流程 项目 效率与个性化需求 模块与架构之间的关系 系统思考 如何进行项目管理？ 项目管理重心前移 项目管理的三个层次 项目管理的基本原则 项目管理过程 项目的交付物 项目管理的注意点 流程与计划导向 的团队管理 项目组织与团队 组织的概念 组织管理 组织过程 项目组织形式 项目经理与项目团队 项目经理 项目团队 系统思考的 2 个轴线 五大过程组 十大知识领域 项目管理 Project Management, PM Summarized by Dodo 朱方伟 Email: zhufw@dlut.edu.cn Tel: 0411-84707746 / 13942690506 第一章 项目与项目管理#1.1 项目#1.1.1 项目的内涵及属性# 项目的定义： 项目是将被完成的、临时性的、有限的特殊任务。它是在一定时间内和资源限制下，满足一系列特定目标的多项相关工作的总称。 项目的特点： 特殊的、临时性的 利用有限的资源、在规定的时间内 被完成的任务满足一定的性能、质量、数量、技术指标等要求 项目的目标： 项目的目标，简单地说就是实施项目所要达到的期望结果。项目的实施实际上就是一种追求目标的过程。因此，项目目标 应该是，清楚定义的 、 可以最终实现的 ，是 项目实施的起点。 项目的目标的三个特点： 项目的特征与属性 外在特征 内在属性 一次性 独特性 多目标性 不可逆转性 整体性 相互依赖性 生命周期性 矛盾冲突性 项目管理解决什么问题？# 项目驱动与职能化管理之间存在冲突。项目管理是 动态环境与固化流程的协调机制。 企业的逻辑—分工 的逻辑 合理分工引起效率的提升，背后是资源的合理配置。 分工过细，导致沟通成本上升，降低效率。 流程# 流程，解决 要做什么的问题 。 流程 -&gt; 岗位素质 — 规范 投入 -&gt; 产出，该过程有哪些活动与内容？ 分工并对岗位进行描述，岗位需要哪些素质？ 通过规范来统一并提高效率。 所需特征： 顶层设计流程 业务特征稳定 结果：计划的职能与执行的职能的分离。 -&gt; 适配卖方市场 项目# 动态的业务过程靠计划。方案 — 行为的协调，流程的效用。 行为的背后：约束与激励机制 例子：制值日表 -&gt; 制定值日规范 -&gt; 制定奖罚机制 灵感：宿舍众包式小微仓库（1-2 平）。 效率与个性化需求# 企业战略改变 -&gt; 组织与管理方式改变 -&gt; 如何提高效率？如何解决个性化需求？ 提高效率： 规模效应（供应商） 范围的经济型（顾客） 满足个性化需求 培育组织驾驭变化的能力。 模块与架构之间的关系# 分工形成模块，模块带来效率。 例子：计算机；结构统一；分工明确。 运用架构和模块间的关系来提高效率问题。 不变的，带来效率 — 标准化、模块化。 模块的层次亦可解决多样性的问题。 例子：计算机的 0/1 的自由组合。 变化的，带来 — 个性化的需求。 案例： 乐高，模块驱动效率、架构驱动个性化。 婚礼的演讲稿，架构与模块模板联合使用提高效率。 集装箱改变世界！ 这个关系，解决对效率提高的思考，对个性化响应的问题。 系统思考# 什么是系统思考？ 看清全局。 看得长远。 15/09/08 如何进行项目管理？#项目管理重心前移# 管理重心不在末端，必须前移。项目的开始就需要进行。 项目管理的三个层次# 项目战略选择 组织经营管理 项目实施流程 15/09/15 项目管理的基本原则# 工作分解结构；利益相关者分析； 项目管理五个层次的成熟度 第一个层次：通用术语（-&gt; 基本知识） 第二个层次：通用过程（-&gt; 过程定义） 第三个层次：单一方法（-&gt; 过程控制） 第四个层次：基准比较（-&gt; 持续改进） 第五个层次：持续改进 集成管理 范围管理 时间管理 成本管理 人力资源管理 风险管理 质量管理 沟通管理 采购管理 项目管理过程# 开始 -&gt; 计划 -&gt; 执行 &lt;=&gt; 控制 -&gt; (开始) / 结束 项目的交付物# 完成一项成果 沉淀一套流程 形成一套工具 培育一种能力 项目管理的注意点# 规范、高效、惯例 经历、经验、知识 组织的财富 第一类：财物资本 组织所拥有的一切有形的财务，包括资金、厂房、设备等固定资产和非固定资产。 其中能为组织带来利润的部分就是财物资本。（有形资产） 第二类：系统资本（企业是一个系统） 组织的系统资源包括：组织的知识、能力（特别是“核心竞争力”）；组织的人力资源（员工的个体资源）；组织的诚信和声誉；组织的体制、制度和经营机制等。 其中能为企业带来利润的部分就是系统资本。（无形资产） 第三类：社会资本 组织所拥有社会关系以及其连接起来的社会网络上存在的许多社会资源。 其中能够为组织带来效益的社会资源就是组织的社会资本。 有原则不乱 有计划不忙 有预算不穷 计划是项目成功的前提与保障！ 详细计划是实现授权的基础！ 授权前提是可控的，需要上下双方的信息对称。 实现怎样的管控？结果管控？过程管控。 流程与计划导向 的团队管理# 统一思想，提高认识。 合理的要求为什么没有受到重视。 是否认同这个规则和制度。 制度是否深入人心。 反复执行，反复约束。当成为惯例和文化。 管理重心不仅要前移，管理重心还要上升。 管理培训的内容： 理念、方法、工具 理念是不变的，是出发点，是核心。 理念、方法、工具 -&gt; 意识 -&gt; 衡量一个问题的标准 -&gt; 作出选择的标准 项目管理的核心原则 系统思考 周密计划 目标导向 过程控制 团队运作 (目标不一样的时候，怎么管？求同存异。)(职业道德核心：责任心。)(体检弄个表：每年的体检项目数据整理)(子曰：“道之以政，齐之以刑，民免而无耻；道之以德，齐之以礼，有耻且格。”) 项目管理的逻辑框架 总、分、总 项目管理过程概览 制度设计的闭合回路 工作努力 -&gt; 绩效 -&gt; 奖罚 -&gt; 需要 -&gt; 工作努力 项目组织与团队 # 组织的概念# “组织：有意识形成的职务或岗位的结构。”——[美] Harold Koontz 组织管理# “为了使人们能为实现目标而有效地工作，就必须设计和维持一种职务结构(a structure of roles)。这就是组织管理的目的。”——[美] Harold Koontz 组织过程# 工作划分 -&gt; 工作归类 -&gt; 形成组织结构 组织统一的两面 静态的组织（组织结构）动态的组织（组织的运作过程） 怎样才算一个合理的组织？ 目标的一致性和管理的统一性 有效的管理幅度和层面 责任与权利对等 合理的分工与合作 集权与分权相结合 高效与有序的工作 严格的纪律与和谐的团队 项目组织形式# 职能型项目组织形式 项目式组织形式 矩阵式项目组织 是职能式与项目式两种组织形式的结合，取其各自的长处。是在职能式的垂直层次上迭加了项目式的水平结构。 优点： 考虑了个人的职能归属，又考虑了项目归属。 对客户的需求可以作出迅速反应。 当多个项目同时进行时，可以平衡公司的资源。 可以保证公司的规章制度的贯彻。 缺点： 项目组成员两个上司，违反命令单一的原则。 需要项目经理发挥高超的技巧与多个职能部门协调好关系。 强矩阵式项目组织形式 弱矩阵式项目组织形式 平衡矩阵式项目组织形式 项目经理与项目团队 # 项目经理# 项目经理的责任：通过一系列的领导及管理活动是项目的目标成功实现并使项目相关者都获得满意的结果。（质量、时间、成本） 项目经理的角色和责任： 一般职能 完成项目政策和程序 获得项目所需资源 保持项目成员的技术效率，必要时提供培训 在项目中保证和维持质量 识别和采买（获取）项目工具 项目启动 开发简要的项目概念文件和项目章程 定义项目成功准则 将项目假设文档化 完成成本效益分析 项目计划 在项目团队的支持下完成详细的项目计划，根据项目需要裁减 PM 方法 建立 WBS 和 OBS 开发或帮助开发范围说明、项目工期、沟通计划、风险管理计划、成本效益分析、采购计划、配置管理计划、项目预算估计、项目过渡检查表 确保管理层、成员、合同各方对项目计划的承诺 确保项目计划得到批准并设立基准线 分派资源，建立资源计划（直到工作包） 批准项目质量和配置管理计划 项目执行 管理项目的每日运行并对团队绩效努力的方向提供指导 定期评审项目状态，比较预算与实际成本 定期评审项目网络图，将实际工作情况与基准线比较 保证项目计划的必要更新和签发 项目控制 对预算和工期进行调整，必要时提供调整建议 评审质量评审报告 参于变更控制委员会以批准项目变更 项目经理的能力与技巧 （隐藏的）能力与（可见的）技巧 合格项目经理的基本要求 良好的职业道德 知识和经验 系统的思维能力 综合的管理及决策能力（计划组织指挥协调与控制等） 创新能力 身体健康 通才而非专才 项目经理的技能要求 用人所长！！！ 团队组建技能 领导技能 冲突解决能力 技术技能 计划编制能力 组织技能 企业家才干 行政管理技能 管理支持构建技能 资源配置技能 项目经理的选派 项目经理能力公式：能力 = 知识 + 素质 + 经验 项目团队# 项目团队的特征 共同认可的明确的目标 合理的分工与协作 积极的参与 互相信任 良好的信息沟通 高度的凝聚力与民主气氛 学习是一种经常化的活动 “团队”发展不同阶段需要的领导风格 形成阶段(Forming)——指导型的领导风格(Directive style) 疑问阶段(Storming)——影响型的领导风格(Selling or Influence style) 规范阶段(Norming)——参与型的领导风格(Participative style) 执行阶段(Performing)——授权型领导风格(Delegative style) 怎样才能使“团队”成员全身心投入于项目“团队”？ 成员交流经常化，使他们感觉团队的存在 确保参与团队可以实现成员需要 使每个成员知道项目的重要性，每个成员不希望成为“失败者” 所有成员共享团队目标，“一只老鼠坏一锅汤” 使团队中的竞争减低到最小，团队成员只与其他团队的成员竞争 管理既是科学，又是艺术，二者的充分融合将产生“异想天开”的结果！ 系统思考的 2 个轴线 # 五大过程组# 启动过程组 规划过程组 执行过程组 监控过程组 收尾过程组 十大知识领域# 整合管理 启动：制定项目章程 规划：制定项目管理计划 执行：指导与管理项目工作 监控：监控项目工作 监控：实施整体变更控制 收尾：结束项目或阶段 范围管理 规划：规划范围管理 规划：收集项目需求 规划：定义项目范围 规划：项目工作分解，创建 WBS 监控：项目范围确认 监控：项目范围控制 时间管理 规划：规划进度管理 规划：定义活动 规划：排列活动顺序 规划：估算活动资源 规划：估算活动持续时间 规划：制定进度计划 监控：控制进度 成本管理 规划：规划成本管理 规划：成本估算 - 根据资源需求以及市场价格信息，对项目所需成本进行估计。 规划：制定预算 - 将估算的成本按照时间段配置到项目各个活动当中。 监控：成本控制 收尾：成本决算 质量管理 规划：规划质量规范 执行：实施质量保证 监控：控制质量 人力资源管理 规划：规划人力资源管理 执行：组建项目团队 执行：建设项目团队 执行：管理项目团队 沟通管理 规划：规划沟通管理 执行：管理沟通管理 监控：控制沟通 风险管理 规划：规划风险规划 规划：识别风险 规划：实施定性风险分析 规划：实施定量风险分析 规划：规划风险应对 监控：控制风险 采购管理 规划：规划采购管理 执行：实施采购 监控：控制采购 收尾：结束采购 干系人管理 启动：识别干系人 规划：规划干系人管理 执行：管理干系人参与 控制：控制干系人参与 Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/3f66c85c/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Courses</category>
      </categories>
      <tags>
        <tag>Management</tag>
        <tag>PM</tag>
        <tag>Project</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[知识管理]]></title>
    <url>%2Fposts%2Fb3b5ff93%2F</url>
    <content type="text"><![CDATA[[TOC] 一、知识 为什么 要管理？ 1.1 认识经济社会发展的阶段 1.2 企业竞争优势理论概述 1.3 企业知识资本 小结 二、知识 是什么？（知识与知识资源） 2.1 知识的定义 2.2 知识的类型 2.3 知识资源、知识资产与知识资本 2.4 知识的过程性 三、知识管理 管什么？ 3.1 知识管理的概念 3.2 以知识为对象的管理 3.3 以知识为基础的管理 四 知识管理方法论 4.1 知识作为资源的管理 4.2 以信息技术为主线的管理 4.3 以行为为主线的管理 4.4 知识综合管理 — 知识系统工程 五、知识管理 怎么管？（企业知识管理） 5.1 知识管理技术 5.2 知识管理的人力资源管理 5.3 知识管理组织 5.4 知识管理制度 5.4.1 知识管理的体制 5.4.2 知识管理的机制 5.5 知识管理文化 六、知识管理实施的战略步骤 组织知识管理 知识的特性 知识的其他分类 SECI 模型 知识创新的 SECI 螺旋模型 SECI 螺旋模型 知识创造的四种场所 (Ba) 的特征 知识管理管什么？ 三个模型 认识知识管理 概述 知识管理技术 知识管理中的人力资源管理 知识组织的结构与形式 知识管理 Knowledge Management, KM Summarized by Zachary 党延忠教授 | 管院 316 参考教材 《企业知识管理—获取竞争优势的利器》，党延忠，清华大学出版社 《知识管理》，王众托，科学出版社，十一五计划 课程内容大纲 知识为什么要管理？ 知识是什么？ 知识管理管什么？ 知识管理怎么管？ 知识管理实施的战略步骤 关于信息管理与信息系统 信息管理，把信息作为管理对象。 信息系统，用信息作为工具来管理其他对象。 关于知识管理 知识作为管理对象。 用知识进行管理。 一、知识 为什么 要管理？#1.1 认识经济社会发展的阶段# 知识已经成为经济和社会发展的重要资源！！！ 核心内容： 一个现象 — 两高一低 经济高增长、劳动高就业、通货低膨胀 一个原因 — 信息技术革命 知识工人、企业的深刻变化、信息化、全球化、知识资源化 一个提法 — 知识经济 以知识作为资源的经济。 世界经济发展形态及主要资源 原始经济 -&gt; 农业经济 -&gt; 工业经济 -&gt; 知识经济 体力 -&gt; 土地、劳动力 -&gt; 资本、能源、材料 -&gt; 信息、知识 1.1.1 现象 - 两高一低# 两高一低 ： 经济高增长、劳动高就业、通货低膨胀 背景 20 世纪 90 年代，东南亚金融危机。 欧、日增长迟缓，而美国稳定增长。 按照经济学周期理论，此时世界经济应该走向衰退。 （经济学中，若经济增长率超过 2.5% 或 3%，就可能导致通货膨胀。） 此现象被称为“两高一低”现象。 1.1.2 原因 - 信息技术革命# 关键原因：信息技术革命 现象：知识工人、企业的深刻变化、新生企业涌现、全球化、知识资源化 知识工人成为重要劳动大军。 信息技术发展 -&gt; 信息技术产业发展。 信息化引起企业组织产生深刻的变化。 全球化。 知识资源化。 1.1.3 提法 - 知识经济# 以知识作为资源的经济。 “两高一低”现象包含着 社会经济发展新趋势的共性 ，从而具有更重要的 历史意义和研究价值。 经济发展进入新形态，提出 知识经济 和以知识为基础的经济。 国外：知识经济是 建立在知识和信息的生产、分配和有效使用基础上的经济。国内：知识经济是 建立在知识的创新、传播和使用基础上的经济。 1.1.4 世界经济发展形态及主要资源# 原始经济 -&gt; 农业经济 -&gt; 工业经济 -&gt; 知识经济 体力 -&gt; 土地、劳动力 -&gt; 资本、能源、材料 -&gt; 信息、知识 我国状况 三种经济形态并存。 不同经济形态的 主要资源 农业经济 -土地、劳动力 农业 为主导产业。 工业经济 -资本、能源、材料 制造业 成主导产业。科学技术知识发挥重要作用。 知识经济 -信息、知识 信息和知识成为重要的生产要素。 劳动力转向以知识为中心的 服务产业。 1.1.5 知识经济的特点# 知识才是老大，资本地位降低。 知识密集型的高技术 产业比重 越来越大。 从业人员结构 发生了很大变化。 发达国家农业劳动力不超 5%，劳动力转移其他岗位。 资源环境 发生了很大变化。 知识和信息成为重要的资源。 资产投入 的无形化。 需要知识、智力等无形资本的投入。 研究和开发的投入 大量增长。 创新成为发展的关键。 产品、流程、经营管理模式的创新，成为可持续发展的关键要素。 学习 有着特别重要的意义。 广义的学习，不仅是学习书本上的知识，实践中的学习才是更重要的。 教育 成为经济发展的基础之一。 人与自然更协调、可持续发展。 1.2 企业竞争优势理论概述# 企业是社会经济体系的细胞。企业竞争优势 的外生论 与内生论。 1.2.1 企业依靠什么生存和发展？# 市场机遇？权利恩赐？手握资源？自身能力？其他？企业家必须从 根本 上明确这些问题，才能 主动 地、理性 地为企业发展做出正确决策。这个问题实质上是企业的竞争优势的问题。 关于企业竞争优势的根源，从理论上大致分为两大类 外生论 基于位势（波特的产业分析理论为代表的竞争位势理论） 内生论 基于资源、能力、知识 1.2.2 竞争优势的 外生论# 认为企业是 同质的 ， 无差别的 ，竞争优势来源于 企业外部 。 外生论 ，基于 行业结构、市场机会。 特点 竞争位势理论 ： 强调 企业 外部环境 ，强调在 环境中的“定位”。 企业是同质的 ： 忽视 企业 内部差异 和竞争优势 内在来源。 波特认为企业盈利能力首要的和 根本的因素是产业吸引力。 选择一个 正确的产业，是获得竞争优势的关键。 决定产业吸引力的五种力量： 潜在的竞争对手 替代品的威胁 现有的竞争 供应商讨价还价的能力 购买商讨价还价的能力 1.2.3 竞争优势的 内生论# 认为企业是 异质的 、 有差别的 ，竞争优势来源于 企业内部 。 内生论 ，基于 资源 、 能力 、 知识。 特点 行业内差异远大于产业间的差别。 证明企业 内部特有因素。 把企业看作怎样的集合体，对象的改变就会对其用不同的方式进行管理。 内生论发展的三个阶段（视角）： 基于资源的企业理论 认为企业是资源的集合体。 战略资源 在企业的分配不均，而且差别会长期存在。 符合 四个经验特征 的战略资源 才能持续地为企业带来竞争优势。 价值性、稀缺性、不可模仿性、不可替代性 。 价值 + 稀缺 -&gt; 竞争优势的根本； 不可模仿 + 不可替代 -&gt; 持续性； 基于能力的企业理论 认为企业是能力的集合体。 企业只有资源还不够，还需要整合并利用资源的能力。 即具有相同或相似资源的企业由于其整合利用资源的能力不同，而竞争优势也不同。 核心竞争力的五项基本特征： 价值性、差异性、延展性、不可交易性、动态性。 基于知识的企业理论 认为企业是知识的集合体。 知识是各项资源中最根本的资源，是形成人的智力并形成企业能力的基础，是对资源理论和能力理论的统一。 知识是能力的基础。企业的知识应满足战略资源的四个经验特征。 组织学习 是形成能力的途径。无论是知识转化为能力，还是知识的增长和创新都离不开学习，特别是组织学习。 知识管理能力是企业最基本的核心能力。 核心竞争力的源流理论： 企业的竞争优势源于企业核心竞争力，核心竞争力又源于能力，而能力又源于资源。 从知识管理的观点看核心竞争力，包含以下方面：知识的积累、集成、学习、创新。 小结： 知识资源是 战略资源。 知识可 形成能力。 1.3 企业知识资本# （企业）资源，就是能为企业发展带来潜在价值的任何物质、能量和信息，是企业生存和发展所必须的重要基础条件。 （企业）资产，是经过开发或投资购买的具有产权的资源。 （企业）资本，是能够获取利润的资产。 世界上所有盈利能力强的企业，几乎都是无形资产倍率高的企业。 一家公司的无形资产价值越高，核心竞争力就越强，维持竞争优势的时间就越久。 1.3.1 企业资源# 企业资源，就是能为企业发展带来潜在价值的任何物质、能量和信息，是企业生存和发展所必需的重要基础条件。企业资源立方体：财物资源（有形资源）、系统资源（无形资源）、社会资源（关系资源）。 依据企业边界可以分为两个方面： 企业内部资源 企业外部资源 三类企业资源，构成企业资源立方体： 财物资源 指企业能够使用的潜在的物资资源和财务资源。 系统资源 企业是一个复杂系统，系统资源指企业自身所拥有的、不可与企业本身剥离的、不可交易的资源。 社会资源 指与企业具有各种关系的其他社会组织和个人所拥有的资源。 1.3.2 知识资源、知识资产和知识资本# 知识资源，对企业获取竞争优势具有潜在价值的知识，没有所有权属性，可以被任何捷足先登者获取。 知识资产，是企业经过开发和管理而获得了 所有权属性 、具有 明确产权 的，能为企业带来潜在价值的知识资源。 知识资本，是指企业用于 使用和投资 ，通过 企业经营 直接带来价值的知识资产。 知识资源 →(开发)→ 知识资产 →(经营)→ 知识资本，5 个需要管理的过程。 知识资源的特点 是赋予并表现企业个性的资源。 是市场交换性较低的资源。 是可以增殖的资源。 是非消耗性的资源。 是非独占的资源。 具有价值和使用价值资源。 知识资本定义 所有对企业的市场竞争力作出贡献的 专业知识、应用经验、组织技术、客户关系和职业技巧。 知识资本不等同于无形资产，知识资本是无形资产的关键组成部分，无形资产是知识资本所创造的价值。 知识资本评估公式 $ 知识资本(IC) = 市场价值(MV) - 账面价值(BV)$$ 知识资本倍率 = 知识资产 / 账面价值 $ 知识资本组成 人才资本 核心，是企业价值实现和增值的重要基础。 结构资本 作用是为激励人才资源，创造知识，并发挥知识的增值作用提供环境支持。 市场资本 保证人才资本和结构资本的有效互动和匹配所创造出的知识的价值实现。 知识资本通过人才资本、结构资本、市场资本的相互作用、共同整合来推动企业发展，成为企业获得竞争优势的重要因数，是未来创造收益的实际推动力。 小结# 知识需要管理，才能转变为企业的核心能力，进而产生企业的各种其他能力，最终形成企业的可持续的竞争优势，为企业带来价值。 企业需要 知识管理。 知识管理是一项系统工程 知识管理（对知识资源的管理） 对知识资源进行组织、整合、创新和使用，使散乱的、无序的知识变成有序的能够形成企业能力，特别是核心能力的 知识资源系统。 知识管理是一项管理系统工程 建造知识（资源）系统 运行知识（资源）系统 维护知识（资源）系统 使用知识（资源）系统 知识是经济和社会发展的重要资源、是企业获得和保持竞争优势的战略资源、也是个人生存和进步的重要资本。知识是具有价值性、稀缺性、不可替代性和不可模仿性的知识。 二、知识 是什么？（知识与知识资源）#2.1 知识的定义# 知识的来源 数据、实践、学习(书籍，讲座..) 商务智能的角度 Bussiness Intelligence BI 通过不同的数据，提取有用的数据，得到一个全局视图。 数据挖掘 Data Mining DM 文本挖掘 Text Mining TM 信息处理的角度 数据 (挖掘)→ 信息 (抽象、概括)→ 知识 实践的角度 经验 学习的逻辑 演绎逻辑、归纳逻辑、类比逻辑。 理工科更多是演绎，管理更多是归纳和类比。 知识的定义 认识的角度 对客观事物本质上的认识，并且用于指导我们解决问题。 “经过证实的正确的认识。” “人类认识自然和社会的成果或结晶。” 经济学的角度 “知识是人类劳动的 产品 ，是具有 价值 与使用价值 的人类劳动产品。” “知识是一种 生产要素 ，是一种 无形资产。” “知识是人类理解并改变自然的 杠杆。” 信息论的角度 “知识是 人对一系列相关信息所产生的反应，知识存在于人，而不存在于信息集合之中。” 王众托院士 “知识乃是经过人的思维整理过的信息、数据、形象、意象、价值标准以及社会的其他符号化产物，不仅包括科学技术知识（这是知识中的重要组成部分），还包括人文社会科学的知识，商业活动、日常生活和工作中的经验和知识，人们获取、运用和创造知识的知识，以及面临问题作出判断和提出解决方法的知识。” 知识是知识管理的对象。实践是知识的根本源泉。 2.2 知识的类型# 知识的分类 知识在大脑中的层次结构 能写出来的知识 能说出来的知识 做得出来的知识 未察觉到的知识 个人 (组织) 的知识层次 已经外化的知识 未曾外化的知识 不易外化的知识 不能外化的知识 为察觉到的知识 知识可以分为两类(三个世界的角度)# 显性知识 — 符号世界 隐性知识 — 主观世界 显性知识(可编码知识) 说得出来的和写的出来的，用各种“符号”表达。 可通过各种方式获取与学习、传播和使用。 隐性知识 既说不出，也写不出，只能存在于人类大脑中的知识。 特性 默会性：人类非语言智力活动的成果； 个体性：存在于个人头脑，来源于个人的生活实践，主要载体是个人，不能通过正式的方式传递。 非理性：显性知识通过人们“逻辑推理”过程获得及表达。 情境性：总是与特定情景紧密相联系，依托特定情景存在。 OECD 性的知识#2.3 知识资源、知识资产与知识资本#2.4 知识的过程性# 三、知识管理 管什么？# 3.1 知识管理的概念#3.2 以知识为对象的管理#3.3 以知识为基础的管理# 四 知识管理方法论# 4.1 知识作为资源的管理#4.2 以信息技术为主线的管理#4.3 以行为为主线的管理#4.4 知识综合管理 — 知识系统工程# 五、知识管理 怎么管？（企业知识管理）# 5.1 知识管理技术# 5.2 知识管理的人力资源管理# 5.3 知识管理组织#5.3.1 组织学习#5.3.2 学习型组织# 5.4 知识管理制度#5.4.1 知识管理的体制#5.4.2 知识管理的机制# 5.5 知识管理文化#5.5.1 企业文化与知识管理文化#5.5.2 构建知识管理文化# 六、知识管理实施的战略步骤# 组织知识管理# 组织的记忆：分散存储于组织内部，是知识管理的重要对象。 三个特性 历史性 知识价值 集体性 知识的特性# 知识的 资源性 知识与物质、能量一样，也是资源。 知识成为经济增长中的内在核心要素。 使得经济增长方式发生根本变化。 知识的 非独占性 知识传递后，自身仍保留知识。 交流不会减少知识，反而会增加知识。 知识的 隐含性 主要体现了作为客体的知识和作为认识主体的人之间的不可分割性。 知识的 独特性 知识的路径依赖性 — 独特性来源之一 企业内部自我产生的知识资源所具有的 价值性、不可替代性、不可模仿性和稀缺性等 特性的形成，其原因来源于知识资源的形成具有 路径依赖和情景依赖 的特点。 路径依赖，特定含义指人类社会中的技术演进和制度变迁均有 类似于物理学中的惯性，即一旦进入某一路径，就可能对这种路径产生依赖。 知识的情景依赖性 — 独特性来源之二 情景 — 环境(客观的) + 心境(心境) 知识的实体性与过程性 隐性知识更重要# 难以模仿性 隐性知识体现在生产过程中。 显性知识和隐性知识共同发挥作用的。 某一种结果是由多种原因共同发生作用产生的。 独特性 稀缺性 价值性 15/09/21 知识的其他分类# 理论知识与经验知识 从认知论分类 陈述性知识 程序性知识 技术性知识与制度性知识 管理知识 SECI 模型# 知识，具有实体性与过程性，是这两者的矛盾统一体。 承认知识的实体性，自然产生了知识的识别、组织、收集和测度等一系列管理问题。 认识 是个体和群体之间一种持续不断的流动过程，因此引发 鼓励参与 和协助沟通 等管理问题。 知识创新的 SECI 螺旋模型# 知识的过程模型之一，SECI 模型，由 野中郁次郎 提出。四种模式：社会化、外在化、组合化、内部化。 社会化 Socialization （隐性知识 → 隐性知识的转化） 一个人 的隐性知识传递给其他人，典型 师徒传承。 通过 共同经历、共同体验 建立隐性知识或传递隐性知识的过程。 通过 观察、模仿、实践和体验 传递，而不是 语言。 外在化 Externalization （隐性知识 → 显性知识的转化） 实质上是一个 表达过程，成为群体的知识。 知识创造过程中至关重要的环节，自我超越 是关键。 外化的技巧：表达的技术，创造性的推论 组合化 Combination （显性知识 → 显性知识的转化） 实际上是一个 加工过程。 知识进入组合阶段后，超越各自的群体本身。 内部化 Internalization （显性知识 → 隐性知识的转化） 内化为个人的隐性知识，这是一个 学习过程。 SECI 螺旋模型# 知识资源的不断增加。 以上四种不同的知识转化模式是一个有机的整体，都是知识创造过程中不可或缺的组成部分。 知识创造的动态过程：高度个人化的隐性知识通过共享、概念化和系统化，并在整个屋子内部进行传播，才能被组织内部所有员工吸收和升华，从而变成组织整体的知识。 知识创造的四种场所 (Ba) 的特征 # 知识创造的“场”（Ba）# SECI 存在一个基本的前提：情景依赖 知识创新是在 群体与情景 中来实现和完成的。 知识转化的“场”(Ba)# 四个场所：原始场、互动场、电脑场、练习场 。 每个场所内产生的知识最终都将成为组织的知识基础。各个场所不仅积累知识，还具有动态性，周期性的循环而持续的创造知识。 原始场 (S) 个人之间亲身面对面接触的经验对隐形知识的转移转化十分重要。因此要强调开放式组织设计，成员之间，与用户间充分的个人直接交谈沟通机会。 互动场 (E) 交换想法、进行研讨，反省和分析自身想法，以开放的态度充分对话，创造新的知识与价值。 电脑场 (C) 信息与知识加工组合，使之 系统化、规范化、制度化、程序化。 练习场 (I) 三个日本公司案例# 夏普、东芝、前川 在组织设计方面，应重视场所的建立 夏普 建立 专案小组，作为知识创造的场所 中层主管领导，得到公司总部经费与人力的全力支持，但专案须最高层审核批准 设置 创造性生活方式研究中心 ， 趋势领袖系统，来了解消费者的需求及价值，通过聚集各年龄段、职业等人群进行面对面交谈与互动，产生高品质的隐性和显性知识。 东芝 建立 高阶策略部 。 宗旨，是将公司的核心技术或只是有效的转移到新视野单位，并强化创新、挑战与速度等观念。采用扁平化富弹性的组织机构。 四项 关键策略： 强化对速度与机敏的意识。 改变对会计年度的思考态度，要有急迫感。 创造一个无界线作业伙伴关系，破除本位主义。 适时投资，以利尽早在新兴市场占有一席之地。 措施： 高阶策略部与其他事业部同等级。（自上而下） 跨越各实业部分，由该部与其他部分的“关键技术经理”定时聚会，加速核心技术的交流与决策程序。（跨界交流） 专门拨出 0.5% 销售额支持该部分发展，可放手创造知识与技术。（经费支持） 前川 十分重视“亲近顾客”。 15/09/25 知识管理管什么？# 案例：中集集团（最佳实践的共享） 最佳实践：共同一件事，做得最好的一个案例，做成资料并且共享，提升效益。 最佳实践管理 ：关注整个公司部门，总结经验并且评比结果，寻找最佳实践并且内部共享。 潍柴动力（隐性知识的重要性） 三个模型# 资源转化模型、知识层次模型、SECI 的拓展模型 知识资源转化模型# 知识资源(1) -&gt;(2)-&gt; 知识资产(3) -&gt;(4)-&gt; 知识资本(5) 知识资源的管理（实体性） 知识资源的开发（过程性） 知识资产的管理（实体性） 知识资产的增殖（过程性） 知识资本的运营（过程性） 根据这个模型，企业制定知识管理战略： 知识资源管理战略 知识资源开发战略 知识资产管理战略 知识资产增殖战略 知识资本管理战略 知识资本运营战略 企业知识管理宏观战略层面的管理问题。 知识层次模型# 知识的转化管理：写得出 -&gt; 说得出 -&gt; 可意会 -&gt; 不可表达 SECI 模型的完善# SECI 模型需要拓展 知识（资源）系统 SECI 模型的另一种画法 SECI 拓展模型 知识过程 从系统科学的角度叫做“系统结构模型 ”，由于它可以描述一个系统的整体概念，所以 也叫做“ 系统概念模型”。 根据 SECI 扩展模型 ，可看出作为“过程”的企业知识运行有“ 九大过程”： 知识的 产生 过程 知识的 获取 过程（显性知识、隐性知识） 知识的 扩散 过程（显性知识、隐性知识） 传递过程（社会化） 表达过程（外化） 加工过程（组合化） 学习过程（内化） 知识管理对象 从该拓展模型可以看出，知识管理的 对象 既包含“实体 ”，也包含“ 过程”。 知识管理问题 在知识 产生过程 中的问题 在知识 获取过程 中的问题（输入） 如何获取外部 隐性 知识？ 如何营造有利于获取外部隐性知识的场所？ 如何获取外部 显性 知识？ 如何营造有利于获取外部显性知识的场所？ 在企业知识 扩散过程 中的问题（输出）（知识安全） 保密协议；知识产权； 如何防止企业隐性知识流失？ 如何防止企业显性知识流失？ 知识传递过程（知识的社会化） 如何营造“原市场” 如何鼓励员工愿意进行隐性知识的传递 采取什么形式、利用什么工具（比如师徒制、利用形象、讲故事、现场观摩等等） 知识表达过程（知识的外化） 如何营造“互动场” 如何鼓励员工外化自己的知识 如何鼓励员工相互交流 采用什么方式、工具（比如面对面、背对背方式、有人记录、录音、录像等等；利用启发式、提供信息化环境等等） 。。。？ 在企业知识 创新过程 中的问题 知识管理怎么管？ 以 信息技术为主 的知识管理 模型中只是显性知识的处理。 以 人为主 的知识管理 模型中只是隐性知识的处理。 以 人为本 +IT的综合方法 隐性 + 显性的综合方法。 知识的双重特性 对知识 实体 的管理 对知识 过程 的管理 知识的载体 人是只是的根本载体 “符号”是知识的“借用”载体 知识管理有两个角度 以 信息技术 为主的知识管理 以 人为主 的知识管理 知识管理总体结构 — “1+5”结构 核心工作 -&gt; 技术环境建设 -&gt; 人员素质建设 -&gt; 组织环境建设 -&gt; 制度环境建设 -&gt; 文化环境建设 认识知识管理# 15/10/15 概述# 企业对固有形式的知识，如技术文化资料、图纸、专利等，能自觉加以管理；而对于无形的，特别是隐性的只是，常常未予重视，在人员退休或者离开企业后，有些极其宝贵的 隐性知识无形中就散失 了。 广泛意义讲，对知识管理主要在四个方面： 科学界的知识管理 社会上的只是管理 组织中的知识管理 发展最晚，进展最快的领域。 企业的知识管理是最活跃的。 个人知识管理 知识管理的定义# 知识管理是获取恰当的知识在恰当的时候交给恰当的成员。 对于一个组织（企业、院所等）来说，知识管理涉及下面这些问题： 本组织中需要的知识是什么？ 现有的知识在哪里，可以从哪里获取？ 如何传播？ 如何生成新的知识（创新）？ 如何有效利用？ 知识如何存储、更新，如何保护等等？ 当知识与经济融合时，需要知道： 本组织的知识投入有哪些、知识成果表现在哪方面（物质产品、技术能力、制度、组织管理变革等）、知识如何分配与交换、如何利用等。 知识管理的特点 创新需要组织知识，怎样使得每个成员的个人知识都能与其他人沟通共享，形成 组织知识，是一个非常复杂的社会行为与组织行为。 对知识管理的片面认识（没记全需要完善）# 概念一：知识管理 = 数据、信息管理 持有这种概念的人员大都具有计算机和信息科学背景，从 IT 的角度。 事实上，知识本体有它的特点和运行规律，并完全不同于数据和信息。 概念二：企业知识管理 = 企业知识资产的管理 有财务背景。 强调了知识本体的价值特性。 概念三：知识管理 = 人力资源的管理 社会学、人力资源管理的背景。 过于强调知识的拥有者只能是个体的人，而不是集体的“人”，忽视了集体或企业掌握知识的重要性。 概念四：知识管理 = 知识资源管理 图书馆学、情报学、信息资源管理的从业背景。 忽视大量隐性知识，也 忽视了隐性知识向显性知识转化的过程。 概念五：知识管理 = 学习和创新管理 技术、科研、管理方面的从业经验，没有追究知识的产生、处理与应用的过程，直接从目的去看待知识故那里。 抓住了知识管理的目的和核心，但是知识管理是一个完整的过程，不仅要明确目的，也要知道来源和过程。 研究知识管理的几条主线# 沿着三条主线进行：信息管理、人的管理、知识资产管理。 把重点放在 信息管理 上，因为信息是知识的载体。 特点：从知识的 供应出发 ，管理 显性知识 有明显的优越性，忽略了隐形知识管理。 把重点放在 人的管理 上。 特点：重点是知识 流量 的管理，把知识作为 “过程” 进行管理；关注 知识产生、知识创新 的过程，强调 以人为本，强化环境对人的影响。 把重点放在 知识资产管理 上。 知识管理失败案例# 田志刚：知识管理六大失败案例 盲人摸象自说自话 没有规划，跟着感觉走（缺乏顶层设计） 没有负责人 被软件和咨询商“劫持” 额外工作和“与我无关” 缺乏激励机制 知识管理总体结构 —— “1+5”结构# 核心工作（拓展 SECI 模型） -&gt; 技术环境建设 -&gt; 人员素质建设 -&gt; 组织环境建设 -&gt; 制度环境建设 -&gt; 文化环境建设 知识管理技术 # 知识管理的技术基础# 显性知识的处理技术（AI、KE） 知识获取技术（内部积累，外部收集） 知识存储技术（文档库、数据库、知识库技术） 知识处理技术（分类 / 聚类技术、挖掘技术等） 知识共享技术（网络技术、研讨交流平台技术） 知识使用技术 知识安全技术（加密、过滤技术，抗攻击技术等） 知识扩散技术（对外发布技术） 隐性知识的管理技术 网络技术：促进交流，为人际知识交流提供技术平台。 第一：建立企业内部网 第二：建立企业知识库 第三：在 Internet 上安装知识管理软件 知识的汇集 知识的检索 Internet 的使用 知识管理中的人力资源管理# 人力资源管理的核心问题： 人与岗位的匹配，把最合适的人安排在最合适的工作岗位上。 薪酬与岗位职责匹配，针对岗位职责给予最合理的待遇。 围绕这两个核心问题展开一系列的人力资源 战略层面 和战术层面 的问题。 战术层面包括三个方面： 职务分析：职务的性质、内容、责任、工作方法和职务的任职者应具备的最基本的条件。 员工招聘：设计人力资源计划的制定，人员测评，招聘。 薪酬体系设计：设计合理的薪酬体系，进行工作的测评、考核。 知识管理的核心问题# 知识管理的核心问题 ： 如何有效开展知识活动 包括：知识交流、知识创新、知识积累和知识使用。 知识交流：是一种 组织行为。 知识创新：通过人际之间的交流 在原有知识的基础之上创造出新知识的过程。 知识积累 知识使用 核心问题之间的管理# 人力资源管理的核心问题与知识管理的核心问题之间的关系： 本质上是人与知识活动的关系。 知识管理的核心问题都与人直接相关 知识管理的根本还是 人的问题以及人与人的关系问题。 人力资源管理 -&gt; 认得知识活动 &lt;- 知识管理 - 员工招聘：** 人与岗位的匹配，人与岗位的供需问题；本质是知识、技能的匹配 **。 - 员工培训：人与岗位供需不平衡时 -&gt; 员工培训：学习知识、形成技能。 - 员工薪酬：绩效、能力（知识）：绩效的价值（业绩定价）、知识的价值（知识定价）。 人力资源管理概括四项主要工作：招才、育才、用才、留才。 四项工作都涉及组织三类人员：员工、管理者、人力资源人员。 管理工作涉及两方面：1. 组织发展所需要的知识技能；2. 对知识共享文化的认同；核心：知识共享。 知识组织的结构与形式 # 知识管理在组织层面的工作 # 传统企业的基本组织架构# 金字塔式组织 主要直线制、职能制、事业部制、矩阵制等等。 股东在最高端，员工在金字塔最低端。 股东从上至下的传达，员工从下至上的请示，符合工业化生产的要求。 按照分工原则，分割成相对独立的管理职能部门，窒息了员工的创造性思维。 知识型企业的基本组织结构# 知识型企业的结构是 网络化、扁平化、边界模糊。 知识经济的发展：客观上 要求缩短企业上下级之间的距离，减少管理层次，实现组织结构的扁平化。 扁平化的组织结构也是应对不断变化的高风险市场的 组织保障。 异质性团队 Author:&nbsp;ZacharyPost link:&nbsp; https://blog.zsliang.me/posts/b3b5ff93/ Copyright:&nbsp;All articles in this blog are licensed under CC BY-NC-SA 4.0 unless stating additionally.]]></content>
      <categories>
        <category>Courses</category>
      </categories>
      <tags>
        <tag>Management</tag>
        <tag>KM</tag>
        <tag>Knowledge</tag>
      </tags>
  </entry>
</search>
